<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc ipr="trust200902" category="std" docName="draft-ietf-calext-jscalendar-icalendar-02">
    <?rfc toc="yes"?>
    <?rfc symrefs="yes"?>
    <?rfc sortrefs="yes"?>
    <?rfc compact="no"?>
    <?rfc subcompact="no"?>
    <?rfc private=""?>
    <?rfc topblock="yes"?>
    <?rfc comments="no"?>

    <front>
        <title abbrev="JSCalendar">JSCalendar: Converting from and to iCalendar</title>
        <author initials="N.M." surname="Jenkins" fullname="Neil Jenkins">
            <organization>FastMail</organization>
            <address>
                <postal>
                    <street>PO Box 234</street>
                    <street>Collins St West</street>
                    <city>Melbourne</city>
                    <code>VIC 8007</code>
                    <country>Australia</country>
                    <region/>
                </postal>
                <phone/>
                <email>neilj@fastmailteam.com</email>
                <uri>https://www.fastmail.com</uri>
            </address>
        </author>
        <author initials="R." surname="Stepanek" fullname="Robert Stepanek">
            <organization>FastMail</organization>
            <address>
                <postal>
                    <street>PO Box 234</street>
                    <street>Collins St West</street>
                    <city>Melbourne</city>
                    <code>VIC 8007</code>
                    <country>Australia</country>
                    <region/>
                </postal>
                <email>rsto@fastmailteam.com</email>
                <uri>https://www.fastmail.com</uri>
            </address>
        </author>
        <author initials="M." surname="Douglass" fullname="Michael Douglass">
            <organization abbrev="Spherical Cow Group">Spherical Cow Group</organization>
            <address>
                <postal>
                    <street>226 3rd Street</street>
                    <city>Troy</city>
                    <region>NY</region>
                    <code>12180</code>
                    <country>United States of America</country>
                </postal>
                <email>mdouglass@sphericalcowgroup.com</email>
                <uri>http://sphericalcowgroup.com</uri>
            </address>
        </author>
        <date year="2020" month="April" day="8"/>
        <area>Applications</area>
        <workgroup>Calendaring extensions</workgroup>
        <keyword>JSON</keyword>
        <keyword>iCalendar</keyword>
        <keyword>calendar</keyword>
        <keyword>events</keyword>
        <keyword>date</keyword>
        <keyword>time</keyword>
        <abstract>
            <t>
                This document provides the required methods for converting
                JSCalendar from and to iCalendar.
            </t>
        </abstract>
    </front>

    <middle>
        <section anchor="introduction" title="Introduction">

            <section anchor="motivation" title="Motivation">
                <t>
                    The JSCalendar <xref target="draft-ietf-calext-jscalendar"/> data format
                    is used to represent calendar data, and is meant as an alternative to
                    the widely deployed iCalendar <xref target="RFC5545"/> data format.
                </t>
                <t>
                    While new calendaring services and applications might use JSCalendar
                    as their main data format to exchange calendaring data, they are
                    likely to interoperate with services and clients that just support iCalendar.
                    Similarly, existing calendaring data is stored in iCalendar format
                    in databases and other calendar stores, and providers and users might
                    want to represent this data also in JSCalendar. Lastly, there is a
                    requirement to preserve custom iCalendar properties that have no
                    equivalent in JSCalendar when converting between these formats.
                </t>
                <t>
                    To support these use cases, this document provides the
                    required approach when converting JSCalendar data from and to
                    iCalendar.
                </t>
            </section>

            <section anchor="scope" title="Scope and caveats">
                <t>
                    JSCalendar and iCalendar have a lot of semantics in common, but
                    they are not interchangeable formats:
                    <list style="symbols">
                        <t>
                            JSCalendar contains a richer data model to express calendar
                            information such as event locations and participants.
                            while future iCalendar extensions
                            may allow a direct mapping, for now there may be no representation
                            directly in iCalendar of some properties. These values
                            may have to be extracted from a full copy of the iCalendar
                            format provided as a property in the JSCalendar data.
                        </t>
                        <t>
                            iCalendar may contain arbitrary, non-standardised data with custom
                            properties/attributes. These will be translated using the same approach
                            as jCal.
                        </t>
                        <t>
                            iCalendar has some obsolete features that have been removed from JSCalendar
                            due to not being useful and/or supported in the real world (e.g. custom
                            email alerts to send to random people). Translating these may lose some
                            of the original fidelity.
                        </t>
                        <t>
                            Implementations may use a custom property to store data that could not
                            be mapped directly in either direction in the original or a custom format,
                            however this is not interoperable.
                        </t>
                    </list>
                    Accordingly, this document defines a canonical translation
                    between iCalendar and JSCalendar, and implementations MUST follow
                    the approaches specified here when iCalendar data is represented in JSCalendar
                    and vice-versa.
                </t>
            </section>

            <section anchor="notational-conventions" title="Notational Conventions">
                <t>
                    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
                    "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in
                    <xref target="RFC2119"/>.
                </t>
            </section>

        </section>

        <section anchor="new-icalendar-parameters"
                 title="New iCalendar parameters">
            <section anchor="subsecond-parameter" title="SUBSECOND parameter">
                <t>
                    <list style='hanging'>
                        <t hangText="Parameter name:">
                            SUBSECOND
                        </t>
                        <t hangText="Purpose:">
                            This parameter is used to define fractional seconds for
                            time values and durations.
                            SUBSECOND MUST NOT be used in date-time calculations or comparisons inÂ 
                            iCalendar.
                            It is meant to preserve time precision on time
                            values and duration with sub-second precision, without
                            increasing the time value range within iCalendar.
                        </t>
                        <t hangText="Description:">
                            This parameter MAY be specified on properties of type DATE-TIME
                            or DURATION.
                            The integral part of the float value MUST be zero. The value
                            MUST NOT be negative.
                            iCalendar implementations SHOULD ignore this parameter in date
                            time arithmetic.
                            Implementations MUST ignore presence of the SUBSECOND parameter
                            on RECURRENCE-ID properties when determining recurrence overrides.
                            If present on a RECURRENCE-ID property, its value MUST match
                            the SUBSECOND parameter value on the DATE-TIME
                            property that defines the reference point for the recurring instances.
                        </t>
                        <t hangText="Format Definition:">
                            <figure>
                                <preamble>
                                    This parameter is defined by the following notation:
                                </preamble>

                                <artwork type="abnf">
                                    subsecond-param = float
                                </artwork>
                            </figure>
                        </t>
                        <t hangText="Example:">
                            DTSTART;SUBSECOND=0.03:20190605T133015
                        </t>
                    </list>
                </t>
            </section>
        </section>

        <section anchor="icalendar-preprocessing"
                 title="iCalendar pre-processing">
            <t>
                iCalendar uses a line-folding mechanism to limit lines of data to a
                maximum line length (typically 75 octets) to ensure the maximum
                likelihood of preserving data integrity as it is transported via
                various means (e.g., email) -- see Section 3.1 of <xref target="RFC5545"/>.
            </t>
            <t>
                iCalendar data uses an "escape" character sequence for text values
                and property parameter values.  See Sections 3.1 and 3.3 of <xref target="RFC5545"/>
                as well as [RFC6868].
            </t>
            <t>
                There is a subtle difference in the number representations between
                JSON and iCalendar.  While in iCalendar, a number may have leading
                zeros, as well as a leading plus sign; this is not the case in JSON.
                Numbers should be represented in whatever way needed for the
                underlying format.
            </t>
            <t>
                When converting from iCalendar to JSCalendar: First, iCalendar lines MUST
                be unfolded.  Afterwards, any iCalendar escaping MUST be unescaped.
                Finally, JSON escaping, as described in Section 7 of <xref target="RFC7159"/>, MUST
                be applied.  The reverse order applies when converting from JSCalendar to
                iCalendar, which is further described in Section ?.
            </t>
            <t>
                iCalendar uses a base64 encoding for binary data.  However, it does
                not restrict the encoding from being applied to non-binary value
                types.  So, the following rules are applied when processing a
                property with the "ENCODING" property parameter set to "BASE64":
                <list style="symbols">
                    <t>
                        If the property value type is "BINARY", the base64 encoding MUST
                        be preserved.
                    </t>
                    <t>
                        If the value type is not "BINARY", the "ENCODING" property
                        parameter MUST be removed, and the value MUST be base64 decoded.
                    </t>
                </list>
                When base64 encoding is used, it MUST conform to Section 4 of
                [RFC4648], which is the base64 method used in [RFC5545].
            </t>
            <t>
                One key difference in the formatting of values used in iCalendar and
                JSCalendar is that in JSCalendar, the specification uses date/time values aligned
                with the extended format of [ISO.8601.2004], which is more commonly
                used in Internet applications that make use of the JSON format.  The
                sections of this document describing the various date and time
                formats contain more information on the use of the complete
                representation, reduced accuracy, or truncated representation.
            </t>
        </section>

        <section anchor="translate-icalendar-components"
                 title="Translating iCalendar components to JSCalendar">
            <t>
                This section is an alphabetic list of all
                <xref target="RFC5545"/> components and
                how they are mapped to JSCalendar.
            </t>

            <t>
                At present VFREEBUSY and VJOURNAL are not mapped in
                jscalendar.
            </t>

            <section anchor="translate-ical-comp-valarm" title="VALARM">
                <t>
                    A <xref target="RFC5545"/> VALARM component is mapped
                    to a member of a JSCalendar "alerts" object with a
                    type of "Alert" and an arbitrary id.
                    <figure>
                        <artwork><![CDATA[
  BEGIN: VEVENT
  ...
  BEGIN: VALARM
  ...
  END: VALARM
  BEGIN: VALARM
  ...
  END: VALARM
  END: VEVENT

  maps to

  {
    "@type": "jsevent",
    ...
    "alerts": {
      "6ICJGbGlnaHRSZXNlcnZhdGlvb": {
        "@type": "Alert",
        ...
      },
      "kIjogIlJYSjM0UCIsCiAgICAgI": {
        "@type": "Alert",
        ...
      }
    }
  }
]]></artwork>
                    </figure>
                </t>

                <t>
                    The <xref target="RFC5545"/> VALARM has a number of
                    problems which are not carried over into JSCalendar.
                    Clients tend to choose how, and in some cases when
                    to notify the user.
                </t>

                <t>
                    For example, if the user has a smart-watch they may
                    get tapped on the wrist. The method of notification
                    may depend on which device is being used and the
                    context, are they in a meeting or driving.
                </t>

                <t>
                    Also, many clients are taking into consideration the
                    travel time and notifying the user earlier if it
                    seems necessary.
                </t>

                <t>
                    Specifying that a client should send emails to all
                    attendees is both annoying and dangerous. Attendees
                    have their own preferences for how and when they
                    should be notified.
                </t>

                <t>
                    Accordingly, the specification only allows for "display"
                    and "email" actions and - other than specifying
                    when - does not allow much else. Clients and/or
                    servers will generally use the associated event or
                    task title as identification. User preferences
                    generally indicate what actions they prefer.
                </t>

                <t>
                    A <xref target="RFC5545"/> ACTION property
                    can take the defined values
                    "AUDIO" / "DISPLAY" / "EMAIL" whereas the
                    JSCalendar "action" property only supports
                    "display" and "email".
                </t>

                <t>
                    An "AUDIO" alarm SHOULD be mapped to a "display"
                    alert. Any attachment MUST be ignored.
                </t>

                <t>
                    The <xref target="RFC5545"/> example VALARMs will
                    be mapped as follows, assuming they are all in the
                    same event:
                    <figure>
                        <artwork><![CDATA[
  BEGIN:VEVENT
  ...
  BEGIN:VALARM
  TRIGGER;VALUE=DATE-TIME:19970317T133000Z
  REPEAT:4
  DURATION:PT15M
  ACTION:AUDIO
  ATTACH;FMTTYPE=audio/basic:ftp://example.com/pub/
  sounds/bell-01.aud
  END:VALARM
  BEGIN:VALARM
  TRIGGER:-PT30M
  REPEAT:2
  DURATION:PT15M
  ACTION:DISPLAY
  DESCRIPTION:Breakfast meeting with executive\n
   team at 8:30 AM EST.
  END:VALARM
  BEGIN:VALARM
  TRIGGER;RELATED=END:-P2D
  ACTION:EMAIL
  ATTENDEE:mailto:john_doe@example.com
  SUMMARY:*** REMINDER: SEND AGENDA FOR WEEKLY STAFF MEETING ***
  DESCRIPTION:A draft agenda needs to be sent out to the attendees
  to the weekly managers meeting (MGR-LIST). Attached is a
  pointer the document template for the agenda file.
  ATTACH;FMTTYPE=application/msword:http://example.com/
  templates/agenda.doc
  END:VALARM
  END:VEVENT

  maps to

  {
    "@type": "jsevent",
    ...
    "alerts": {
      "6ICJGbGlnaHRSZXNlcnZhdGlvb": {
        "@type": "Alert",
        "action": "display",
        "trigger": {
          "@type": "AbsoluteTrigger",
          "when": "19970317T133000Z"
        }
      },
      "kIjogIlJYSjM0UCIsCiAgICAgI": {
        "@type": "Alert",
        "action": "display",
        "trigger": {
          "@type": "OffsetTrigger",
          "offset": "-PT30M"
        }
      }
      "odHRwOi8vc2NoZW1hLm9yZy9SZ": {
        "@type": "Alert",
        "action": "email",
        "trigger": {
          "@type": "OffsetTrigger",
          "offset": "-P2D",
          "relativeTo": "end"
        }
      }
    }
  }
]]></artwork>
                    </figure>
                </t>

                <t>
                    Note that the ATTACH, ATTENDEE, DESCRIPTION, DURATION, REPEAT and
                    SUMMARY properties have been dropped.
                </t>
            </section>

            <section anchor="translate-ical-comp-vcalendar" title="VCALENDAR">
                <t>
                    A <xref target="RFC5545"/> VCALENDAR component may be mapped
                    to a JSCalendar object with a type of "jsgroup".
                    <figure>
                        <artwork><![CDATA[
  BEGIN: VCALENDAR
  PRODID:-//ABC Corporation//NONSGML My Product//EN
  ...
  END: VCALENDAR

  maps to

  {
    "@type": "jsgroup",
    "prodid": "-//ABC Corporation//NONSGML My Product//EN",
    ...
  }
]]></artwork>
                    </figure>
                </t>
                <t>
                    Note that a single JSEvent or JSTask MAY be converted
                    without a surrounding JSGroup if the VCALENDAR
                    component only contains PRODID and CALSCALE properties.
                    In this case the prddid can go in the JSEvent or JSTask.
                    The CALSCALE property is dropped - there is no equivalence
                    in JSCalendar.
                </t>
            </section>

            <section anchor="translate-ical-comp-vevent" title="VEVENT">
                <t>
                    A <xref target="RFC5545"/> VEVENT component is mapped
                    to a JSCalendar object with a type of "jsevent".
                    <figure>
                        <artwork><![CDATA[
  BEGIN: VEVENT
  ...
  END: VEVENT

  maps to

  {
    "@type": "jsevent",
    ...
  }
]]></artwork>
                    </figure>
                </t>
            </section>

            <section anchor="translate-ical-comp-vtimezone"
                     title="VTIMEZONE, STANDARD, DAYLIGHT">
                <t>
                    A <xref target="RFC5545"/> VTIMEZONE component is mapped
                    to a member of a JSCalendar "timezones" object with a
                    type of "TimeZone" and an id which follows the
                    restrictions specified.
                </t>
                <t>
                    The STANDARD and DAYLIGHT components map to
                    JSCalendar TimeZoneRule objects as members of the
                </t>
                <t>
                    Note that
                    <list style="symbols">
                        <t> There is no current approach for defining
                            standalone sets of timezones.
                        </t>
                        <t>
                            Timezones defined in the IANA timezone database
                            SHOULD NOT be redefined in the object.
                            Only custom timezones will be defined.
                        </t>
                    </list>
                    <figure>
                        <artwork><![CDATA[
  BEGIN: VTIMEZONE
  TZID: Example/Somewhere
  ...
  END: VTIMEZONE
  BEGIN: VTIMEZONE
  TZID: Example/Somewhere-else
  ...
  END: VTIMEZONE
  BEGIN: VEVENT
  ...
  END: VEVENT

  maps to

  {
    "@type": "jsevent",
    ...
    "timezones": {
      "/Example/Somewhere: {
        "@type": "TimeZone",
        ...
      },
      "/Example/Somewhere-else": {
        "@type": "TimeZone",
        ...
      }
    }
  }
]]></artwork>
                    </figure>
                </t>
            </section>

            <section anchor="translate-ical-comp-vtodo" title="VTODO">
                <t>
                    A <xref target="RFC5545"/> VTODO component is mapped
                    to a JSCalendar object with a type of "jstask".
                    <figure>
                        <artwork><![CDATA[
  BEGIN: VTODO
  ...
  END: VTODO

  maps to

  {
    "@type": "jstask",
    ...
  }
]]></artwork>
                    </figure>
                </t>
            </section>
        </section>

        <section anchor="translate-icalendar-properties"
                 title="Translating iCalendar properties to JSCalendar">
            <t>
                This section is an alphabetic list of all
                <xref target="RFC5545"/> properties and
                how they are mappped to JSCalendar.
            </t>

            <section anchor="translate-ical-attendee" title="ATTENDEE">
                <t>
                    A <xref target="RFC5545"/> ATTENDEE maps to the
                    JSCalendar "participant" property.
                </t>
            </section>

            <section anchor="translate-ical-calscale" title="CALSCALE">
                <t>
                    A <xref target="RFC5545"/> CALSCALE has no equivalence
                    in JSCalendar. It is ignored.
                </t>
            </section>

            <section anchor="translate-ical-comment" title="COMMENT">
                <t>
                    TBD.
                </t>
            </section>

            <section anchor="translate-ical-completed" title="COMPLETED">
                <t>
                    Set the JSCalendar "progress" property to "completed"
                    and the "progressUpdated" property to the reformatted
                    date/time.
                    <figure>
                        <artwork><![CDATA[
  ...
  COMPLETED: "20101010T101010Z"
  ...

  maps to

  ...
  "progressUpdated": "2010-10-10T10:10:10Z",
  "progress": "completed",
  ...
]]></artwork>
                    </figure>
                </t>
            </section>

            <section anchor="translate-ical-contact" title="CONTACT">
                <t>
                    The CONTACT property is mapped on to a participant
                    object with a "participantTypes" property of
                    "contact" and an "order" property of 1 (one). This
                    defines the participant as a primary contact.
                </t>
                <t>
                    Mapping parameters:
                    <list style="hanging">
                        <t hangText="ALTREP">
                            Use the participant "uri" property.
                        </t>
                        <t hangText="LANG">
                            No mapping.
                        </t>
                    </list>
                </t>
                <t>
                    Example:
                    <figure>
                        <artwork><![CDATA[
  BEGIN:VEVENT
  ...

  CONTACT;ALTREP="ldap://example.com:6666/o=ABC%20Industries\,
   c=US???(cn=Jim%20Dolittle)":Jim Dolittle\, ABC Industries\,
   +1-919-555-1234
   ...
  END:VEVENT

  maps to

  {
    "@type": "jsevent",
    ...
    "participants": {
        "rIiwKICAgICAgInBhc3NlbmdlclN": {
          "@type": "participant",
          "participantTypes": {
            "contact": true
          },
          "order": 0,
          // Note that comments and string concatenation are not
          // allowed per the JSON specification and is used here
          // to avoid long lines.
          "uri": "ldap://example.com:6666/o=ABC%20Industries," +
                  "c=US???(cn=Jim%20Dolittle)",
        }
      },
    ...
  }
]]></artwork>
                    </figure>
                </t>
            </section>

            <section anchor="translate-ical-created" title="CREATED">
                <t>
                    The CREATED property is mapped on to a "created"
                    property with a json formatted form of the date.
                    Example:
                    <figure>
                        <artwork><![CDATA[
  BEGIN:VEVENT
  ...
  CREATED:19960329T133000Z
  ...
  END:VEVENT

  maps to

  {
    "@type": "jsevent",
    ...
    "created": "1996-03-29T13:30"00Z",
    ...
  }
]]></artwork>
                    </figure>
                </t>
            </section>

            <section anchor="translate-ical-description" title="DESCRIPTION">
                <t>
                    Copy the value, preprocessed according to
                    <xref target="icalendar-preprocessing" /> into the
                    "description" property.
                </t>
                <t>
                    Mapping parameters:
                    <list style="hanging">
                        <t hangText="ALTREP">
                            No mapping.
                        </t>
                        <t hangText="LANG">
                            Use the "locale" property.
                        </t>
                    </list>
                </t>
                <t>
                    Example:
                    <figure>
                        <artwork><![CDATA[
  BEGIN:VEVENT
  ...
  DESCRIPTION:We are having a meeting all this week at 12 pm fo
   r one hour\, with an additional meeting on the first day 2 h
   ours long.\nPlease bring your own lunch for the 12 pm meetin
   gs.
  ...
  END:VEVENT

  maps to

  {
    "@type": "jsevent",
    ...
    "description": // Note: comments and string concatenation are not
            // allowed per the JSON specification and is used here
            // to avoid long lines.
        "We are having a meeting all this week at 12 pm for one " +
        "hour, with an additional meeting on the first day 2 " +
        "hours long.\nPlease bring your own lunch for the 12 pm " +
        "meetings.",
    ...
  }
]]></artwork>
                    </figure>
                </t>
            </section>

            <section anchor="translate-ical-prodid" title="PRODID">
                <t>
                    For a vcalendar JSGroup object with multiple JSEvent
                    and/or JSTask object the <xref target="RFC5545"/> VCALENDAR PRODID is
                    mapped to a JSCalendar "prodid" property in the group.
                </t>
                <t>
                    When mapping to a single JSEvent and/or JSTask object
                    the <xref target="RFC5545"/> VCALENDAR PRODID is
                    mapped to a JSCalendar "prodid" property in the group
                    <figure>
                        <artwork><![CDATA[
  BEGIN: VCALENDAR
  PRODID:-//ABC Corporation//NONSGML My Product//EN
  BEGIN:VEVENT
  ...
  END:VEVENT
  END: VCALENDAR

  maps to

  {
    "@type": "jsevent",
    "prodid": "-//ABC Corporation//NONSGML My Product//EN",
    ...
  }
]]></artwork>
                    </figure>
                </t>
            </section>
        </section>

        <section anchor="translate-jscalendar-components"
                 title="Translating JSCalendar properties to iCalendar components">
            <t>
                This section is an alphabetic list of all JSCalendar
                property types that map on to <xref target="RFC5545"/> components.
            </t>

            <section anchor="translate-jscal-jsevent" title="jsevent">
                <t>
                    A JSCalendar object with a type of "jsevent" is mapped on to a
                    <xref target="RFC5545"/> VEVENT component.
                </t>
                <t>
                    If it is a single VEVENT then a
                    <xref target="RFC5545"/> VCALENDAR component must
                    surround it and the JSCalendar "prodid" property
                    will be converted to a <xref target="RFC5545"/> PRODID.
                    <figure>
                        <artwork><![CDATA[
  {
    "@type": "jsevent",
    "prodid": "-//ABC Corporation//NONSGML My Product//EN",
    ...
  }

  maps to

  BEGIN: VCALENDAR
  PRODID:-//ABC Corporation//NONSGML My Product//EN
  BEGIN:VEVENT
  ...
  END:VEVENT
  END: VCALENDAR
]]></artwork>
                    </figure>
                </t>
                <t>
                    When converting multiple JSEvent or JSTask objects
                    the surrounding <xref target="RFC5545"/> VCALENDAR
                    object must have a <xref target="RFC5545"/> PRODID
                    set from either the JSGroup "prodid" or generated.
                </t>
            </section>

            <section anchor="translate-jscal-jsgroup" title="jsgroup">
                <t>
                    A JSCalendar object with a type of "jsgroup" is mapped on to a
                    <xref target="RFC5545"/> VCALENDAR component.
                    <figure>
                        <artwork><![CDATA[
  {
    "@type": "jsgroup",
    "prodid": "-//ABC Corporation//NONSGML My Product//EN",
    ...
    {
      "@type": "jsevent",
      ...
    }
    {
      "@type": "jsevent",
      ...
    }
  }

  maps to

  BEGIN: VCALENDAR
  PRODID:-//ABC Corporation//NONSGML My Product//EN
  BEGIN:VEVENT
  ...
  END:VEVENT
  BEGIN:VEVENT
  ...
  END:VEVENT
  END: VCALENDAR
]]></artwork>
                    </figure>
                </t>
            </section>

            <section anchor="translate-jscal-jstask" title="jstask">
                <t>
                    A JSCalendar object with a type of "jstask" is mapped on to a
                    <xref target="RFC5545"/> VTODO component.
                </t>
                <t>
                    If it is a single VTODO then a
                    <xref target="RFC5545"/> VCALENDAR component must
                    surround it and the JSCalendar "prodid" property
                    will be converted to a <xref target="RFC5545"/> PRODID.
                    <figure>
                        <artwork><![CDATA[
  {
    "@type": "jstask",
    "prodid": "-//ABC Corporation//NONSGML My Product//EN",
    ...
  }

  maps to

  BEGIN: VCALENDAR
  PRODID:-//ABC Corporation//NONSGML My Product//EN
  BEGIN:VTODO
  ...
  END:VTODO
  END: VCALENDAR
]]></artwork>
                    </figure>
                </t>
                <t>
                    When converting multiple JSEvent or JSTask objects
                    the surrounding <xref target="RFC5545"/> VCALENDAR
                    object must have a <xref target="RFC5545"/> PRODID
                    set from either the JSGroup "prodid" or generated.
                </t>
            </section>

            <section anchor="translate-jscal-timezones-comp"
                     title="timezones">
                <t>
                    The JSCalendar TimeZone objects within a "timezones"
                    property are mapped on to
                    <xref target="RFC5545"/> VTIMEZONE components within
                    the surrounding VCALENDAR component. Each mapped
                    TimeZone MUST only appear once.
                    <figure>
                        <artwork><![CDATA[
  {
    "@type": "jsevent",
    ...
    "timezones": {
      "/Example/Somewhere: {
        "@type": "TimeZone",
        ...
      },
      "/Example/Somewhere-else": {
        "@type": "TimeZone",
        ...
      }
    }
  }

  maps to

  BEGIN: VTIMEZONE
  TZID: Example/Somewhere
  ...
  END: VTIMEZONE
  BEGIN: VTIMEZONE
  TZID: Example/Somewhere-else
  ...
  END: VTIMEZONE
  BEGIN: VEVENT
  ...
  END: VEVENT
]]></artwork>
                    </figure>
                </t>
                <t>
                    When converting multiple JSEvent or JSTask objects
                    the surrounding <xref target="RFC5545"/> VCALENDAR
                    object must have a <xref target="RFC5545"/> PRODID
                    set from either the JSGroup "prodid" or generated.
                </t>
            </section>
        </section>

        <section anchor="Some-notes" title="Some notes">
            <t>
                The sections following this one are all the original ones
                from draft 1 writen by Robert - there for reference.
            </t>

            <section anchor="notes-alerts" title="Alerts">
                <t>
                    I've got text which explains some of the justification
                    for the changes. Because it's not trivial to map I think
                    people need to understand the reasoning.
                </t>
            </section>

            <section anchor="notes-preserving" title="Preserving icalendar">
                <t>
                    I don't think we need to preserve th entire iCalendar
                    object to make this round trippable. That also means
                    somebody needs to parse it and extract what they need.
                </t>

                <t>
                    Rather - where it matters we could use the JCal approach.
                    For example - preserve VALARM
                </t>
            </section>

            <section anchor="jscalendar-changes" title="JSCalendar changes">
                <t>
                    Here I'll note what I think needs changing in the
                    jscalendar spec.
                </t>

                <t>
                    <list style="hanging">
                        <t hangText="alert - absolute time">
                            I don't think we should promote UTC. A
                            change in rules could result in alarms
                            all going off at the wrong time. I think
                            we should allow for local time and a timezone.
                        </t>
                        <t hangText="comments - COMMENT">
                            comments is only specified for timezone rules. It needs to be valid for all or some indication of how to handle them needs to be provided.
                        </t>
                        <t>
                        There is an issue in 5545 with COMMENT in scheduling e.g. is a comment meant only for the organizer? That could be tightened up.
                        </t>

                        <t hangText="CONTACT">
                            There's no mapping suggested. CONTACT is vital for event publication. I'd suggest following the approach in eventpub - add a participantType property to participant
                        </t>
                        <t>
                            I thought this could probably be handled just by changing the wording for participant as I suggested and extending the roles values. However I think that's conceptually more complicated,
                            <figure>
                                <artwork><![CDATA[
              "participantTypes": {"attendee": true}
              "roles": {"optional": true}

              is easier to understand than

              "participantTypes": {"optional": true}

              implying this is an optional attendee.

              Changing role "attendee" to "required" or "expected"
              might make sense
]]></artwork>
                            </figure>
                        </t>

                        <t hangText="participant">
                            Bring into line with eventpub extensions so
                            we can do a consistent mapping between them.
                            Add the following:
                            <list style="hanging">
                                <t hangText="order">
                                    Positive number.
                                </t>
                                <t hangText="participantTypes">
                                    As defined.
                                </t>
                                <t hangText="structuredData">
                                    with "encoding" and "value" properties.
                                    We need to have a place to put the value
                                    which may be a phone number. As a fallback
                                    converting to JSCalendar may involve
                                    encoding the value as a data uri.
                                </t>
                                <t hangText="uri">
                                    To match ALTREP.
                                </t>
                            </list>
                        </t>

                        <t>
                            Note that eventpub extensions needs an
                            update: PARTICIPANT-TYPE needs to be allowed
                            more than once and ATTENDEE should be added
                            as a value.
                        </t>

                        <t hangText="privacy">
                            Still think we should change "secret" to
                            "confidential".
                        </t>
                        <t hangText="section 3.1 - etags text">
                            Needs correcting.
                        </t>
                        <t hangText="timezones">
                            I'm completely fine with the default being by reference. It may be good to strengthen the language in  section 1.4.9. A concern is we're not allowing standalone timezone defs. I see 2 uses for that:

                            <list style="numbers">
                                <t>
                                    A group containing a lot of events that all use the same custom timezone - having to repeat that per event is bulky. (probably not a major case but...). I guess the first event could be considered the definition but that's messy.
                                </t>
                                <t>
                                    More important - how do we deliver jscalendar format timezones from tzdist?
                                </t>
                            </list>
                            Could we simply allow a timezones property as another alternative in JSGroup?
                        </t>
                    </list>
                </t>
            </section>
        </section>

        <section anchor="translate-jsevent" title="JSEvent">
            <t>
                A JSEvent maps to the the iCalendar VEVENT component type
                <xref target="RFC5545"/>.
                The following tables maps the JSEvent-specific properties to iCalendar:
            </t>

            <texttable anchor="translate-jsevent-properties" title="Mapping JSEvent properties">
                <ttcol align='left'>Property</ttcol>
                <ttcol align='left'>iCalendar counterpart</ttcol>
                <c>duration</c>
                <c>
                    DURATION property.
                    If the VEVENT contains a DTEND
                    property, the this maps to the duration property
                    as the time span between DTSTART and DTEND when converting the
                    respective time points to the UTC time zone.
                    Fractional seconds SHOULD be preserved with the SUBSECOND parameter.
                </c>
            </texttable>
        </section>

        <section anchor="translate-jstask" title="JSTask">
            <t>
                A JSTask object maps to the iCalendar VTODO component type
                <xref target="RFC5545"/>.
                The following tables maps the JSTask-specific properties to iCalendar:
            </t>
            <texttable anchor="translate-jstask-time-table" title="Mapping JSTask properties">
                <ttcol align='left'>Property</ttcol>
                <ttcol align='left'>iCalendar counterpart</ttcol>
                <c>due</c>
                <c>
                    Maps to the DUE property. See <xref target="translate-time"/>.
                </c>
                <c>estimatedDuration</c>
                <c>
                    ESTIMATED-DURATION property in the RFC draft <xref target="draft-apthorp-ical-tasks"/>,
                    or the DURATION property otherwise.
                    Fractional seconds SHOULD be preserved with the SUBSECOND parameter.
                </c>

                <c>statusUpdatedAt</c>
                <c>
                    COMPLETED property. The JSTask status property
                    MUST have value <spanx style="verb">completed</spanx>.
                    Fractional seconds SHOULD be preserved with the SUBSECOND parameter.
                </c>

                <c>progress</c>
                <c>
                    PARTSTAT and COMPLETED properties, including the
                    definitions in the RFC draft <xref target="draft-apthorp-ical-tasks"/>.
                </c>

                <c>status</c>
                <c>
                    STATUS property, including the
                    definitions in the RFC draft <xref target="draft-apthorp-ical-tasks"/>.
                </c>

            </texttable>
        </section>

        <section title="JSGroup">
            <t>
                A JSGroup maps to a iCalendar VCALENDAR containing VEVENT or VTODO components.
            </t>
            <texttable anchor="translate-jsgroup-table" title="Mapping JSGroup properties">
                <ttcol align='left'>Property</ttcol>
                <ttcol align='left'>iCalendar counterpart</ttcol>

                <c>entries</c>
                <c>
                    VEVENT and VTODO components embedded in a VCALENDAR component.
                </c>

                <c>source</c>
                <c>
                    SOURCE property.
                </c>
            </texttable>
        </section>

        <section anchor="icalendar-translation" title="Common properties">
            <t>
                This section contains recommendations how to map JSCalendar from and to iCalendar.
                It lists all common JSCalendar object properties in alphabetical order.
            </t>

            <texttable anchor="translate-commonprops-table" title="Translation between JSCalendar and iCalendar">

                <ttcol align='left'>Property</ttcol>
                <ttcol align='left'>iCalendar counterpart</ttcol>

                <c>@type</c>
                <c>
                    Determined by the iCalendar component type: <spanx style="verb">jsevent</spanx>
                    for VEVENT, <spanx style="verb">jstask</spanx> for VTODO,
                    <spanx style="verb">jsgroup</spanx> for VCALENDAR.
                </c>

                <c>alerts</c>
                <c>
                    Each entry maps to a VALARM component.

                    The action property maps to iCalendar ACTION, where
                    both iCalendar <spanx style="verb">DISPLAY</spanx> and <spanx style="verb">AUDIO</spanx>
                    values map to the <spanx style="verb">display</spanx> action. An EMAIL value maps
                    to a JSCalendar <spanx style="verb">email</spanx> action.
                    <spanx style="emph">relativeTo</spanx> and <spanx style="emph">offset</spanx>
                    map to the TRIGGER property.
                </c>

                <c>categories</c>
                <c>
                    CONCEPT property, defined in <xref target="draft-ietf-calext-ical-relations"/>.
                </c>

                <c>color</c>
                <c>
                    COLOR property, as specified in <xref target="RFC7986"/>.
                </c>

                <c>created</c>
                <c>
                    CREATED property.
                    Fractional seconds SHOULD be preserved with the SUBSECOND parameter.
                </c>

                <c>description</c>
                <c>
                    DESCRIPTION property.
                </c>

                <c>descriptionContentType</c>
                <c>
                    Implementation-specific.
                </c>

                <c>excluded</c>
                <c>
                    EXDATE property.
                    Fractional seconds SHOULD be preserved with the SUBSECOND parameter.
                </c>

                <c>freeBusyStatus</c>
                <c>
                    TRANSP property.
                </c>

                <c>invitedBy</c>
                <c>
                    Implementation-specific.
                </c>

                <c>keywords</c>
                <c>
                    CATEGORIES property, as specified in <xref target="RFC7986"/>.
                </c>

                <c>links</c>
                <c>
                    ATTACH (<xref target="RFC5545"/>), URL or IMAGE (<xref target="RFC7986"/>)
                    properties with URI value types map to the the Link <spanx style="emph">href</spanx>.
                    The FMTTYPE parameter maps to <spanx style="emph">type</spanx>,
                    the SIZE parameter to <spanx style="emph">size</spanx>.
                    Mapping other properties is implementation-specific.
                </c>

                <c>locale</c>
                <c>
                    LANGUAGE parameter of the SUMMARY or DESCRIPTION property.
                </c>

                <c>localizations</c>
                <c>
                    Implementation-specific.
                </c>

                <c>locations</c>
                <c>
                    See <xref target="translate-locations"/>.
                </c>

                <c>method</c>
                <c>
                    METHOD property of the embedding VCALENDAR.
                </c>

                <c>participants</c>
                <c>
                    See <xref target="translate-participants"/>.
                </c>

                <c>priority</c>
                <c>
                    PRIORITY property.
                </c>

                <c>privacy</c>
                <c>
                    CLASS property.
                </c>

                <c>prodId</c>
                <c>
                    PRODID property.
                </c>

                <c>recurrenceOverrides</c>
                <c>
                    RDATE and EXDATE properties, and any VEVENT or
                    VTODO instances with a recurrence-id and same UID
                    as the mapped main object. If the DTSTART property
                    defines a SUBSECOND parameter, but the RECURRENCE-ID
                    of a recurrence instance does not, then use the
                    SUBSECOND parameter value of DTSTART to determine
                    the recurrence override time stamp.
                </c>

                <c>recurrenceRule</c>
                <c>
                    RRULE property. For all-day calendar objects,
                    map the <spanx style="verg">until</spanx> property value to an iCalendar
                    DATE (effectively removing the time component). To convert a DATE-typed UNTIL
                    from iCalendar, set the time components of the LocalDateTime value to
                    <spanx style="verb">23:59:59</spanx>. If the iCalendar UNTIL value is a
                    UTC date time, convert it to the local time in the JSCalendar calendar
                    object time zone. To convert to iCalendar where the DTSTART or DUE property
                    is of type DATE, omit the time component of the LocalDateTime value.
                </c>

                <c>relatedTo</c>
                <c>
                    RELATED-TO property.
                </c>

                <c>replyTo</c>
                <c>
                    An iCalendar ORGANIZER with a mailto: URI mapped to the
                    <spanx style="verb">imip</spanx> method, or any other
                    URI mapped to the <spanx style="verb">other</spanx>
                    method. Mapping multiple methods is implementation-specific.
                </c>

                <c>sequence</c>
                <c>
                    SEQUENCE property.
                </c>

                <c>showWithoutTime</c>
                <c>
                    Implementation-specific.
                </c>

                <c>start</c>
                <c>
                    Maps to the DTSTART property. See <xref target="translate-time"/>.
                </c>

                <c>status</c>
                <c>
                    STATUS property.
                </c>

                <c>timeZone</c>
                <c>
                    Maps to the TZID parameter.  See <xref target="translate-time"/>.
                </c>

                <c>timeZones</c>
                <c>
                    Each entry in the property maps to a VTIMEZONE in the embedding VCALENDAR component.
                </c>

                <c>title</c>
                <c>
                    SUMMARY property.
                </c>

                <c>uid</c>
                <c>
                    UID property.
                </c>

                <c>updated</c>
                <c>
                    DTSTAMP and LAST-MODIFIED properties.
                    Fractional seconds SHOULD be preserved with the SUBSECOND parameter.
                </c>

                <c>useDefaultAlerts</c>
                <c>
                    Implementation-specific.
                </c>

                <c>virtualLocations</c>
                <c>
                    See <xref target="translate-locations"/>.
                </c>

            </texttable>

            <section anchor="translate-time" title="Time properties and types">
                <t>
                    iCalendar defines two different time types, DATE and DATE-TIME, where
                    the latter may occur in three forms (with local time, with UTC time,
                    with local time and time zone reference). In contrast, JSCalendar does
                    not define a distinct type for dates, and date times are defined with the
                    LocalDateTime type only.
                    <vspace blankLines="1"/>
                    A JSCalendar time maps to the iCalendar DATE type if all of the following
                    criteria apply:
                    <list style="symbols">
                        <t>
                            The <spanx style="verb">start</spanx> (<spanx style="verb">due</spanx>)
                            property value has zero time, or is not set.
                        </t>
                        <t>
                            The <spanx style="verb">duration</spanx>
                            (<spanx style="verb">estimatedDuration</spanx>) property value has
                            zero time, or is a multiple of days or weeks, or is not set.
                        </t>
                        <t>
                            The <spanx style="verb">timeZone</spanx> property value is null,
                            or is not set.
                        </t>
                    </list>
                    <vspace blankLines="1"/>
                    For all other cases, the time maps to an iCalendar DATE-TIME:
                    <list style="symbols">
                        <t>
                            With local time and time zone reference, if the <spanx style="verb">timeZone</spanx>
                            property value is set and does not equal <spanx style="verb">Etc/UTC</spanx>.
                        </t>
                        <t>
                            With UTC time, if the <spanx style="verb">timeZone</spanx> property value
                            equals <spanx style="verb">Etc/UTC</spanx>.
                        </t>
                        <t>
                            With local time, if the <spanx style="verb">timeZone</spanx>
                            property value is null or not set.
                        </t>
                    </list>
                    Fractional seconds SHOULD be preserved with the SUBSECOND parameter.
                </t>
            </section>

            <section anchor="translate-locations" title="Locations">
                <t>
                    The iCalendar counterpart for JSCalendar Location objects is the iCalendar
                    <xref target="RFC5545"/> LOCATION property, or implementation-specific.
                  </t>
                <texttable anchor="translate-locations-table"
                  title="Mapping Location properties">
                  <ttcol align='left'>Property</ttcol>
                  <ttcol align='left'>iCalendar counterpart</ttcol>

                  <c>coordinates</c>
                  <c>
                      GEO property.
                  </c>

                  <c>description</c>
                  <c>
                      Implementation-specific.
                  </c>

                  <c>linkIds</c>
                  <c>
                      Implementation-specific.
                  </c>

                  <c>name</c>
                  <c>
                      LOCATION property value.
                  </c>

                  <c>rel</c>
                  <c>
                      Implementation-specific.
                  </c>

                  <c>timeZone</c>
                  <c>
                      Implementation-specific.
                  </c>

                  <c>uri</c>
                  <c>
                      The LOCATION ALTREP parameter.
                  </c>

                </texttable>
                <t>
                    The iCalendar counterpart for JSCalendar VirtualLocation objects is the iCalendar
                    <xref target="RFC7986"/> CONFERENCE property.
                </t>
                <texttable anchor="translate-virtualLocations-table"
                    title="Mapping virtualLocation properties">
                    <ttcol align='left'>Property</ttcol>
                    <ttcol align='left'>iCalendar counterpart</ttcol>
                    <c>description</c>
                    <c>
                        Implementation-specific.
                    </c>

                    <c>name</c>
                    <c>
                        LABEL parameter.
                    </c>

                    <c>uri</c>
                    <c>
                        CONFERENCE property value.
                    </c>
                </texttable>
            </section>

            <section anchor="translate-participants" title="Participants">
                <t>
                    The following table outlines translation of JSCalendar participants.
                    An iCalendar ORGANIZER maps to both the replyTo property
                    and a participant with role <spanx style="verb">owner</spanx>. If
                    an ATTENDEE with the same CAL-ADDRESS value exists, then it maps
                    to the same participant as the ORGANIZER participant. Other participants
                    map to ATTENDEEs.
                </t>
                <texttable anchor="translate-participants-table"
                    title="Mapping Participant properties">
                    <ttcol align='left'>Property</ttcol>
                    <ttcol align='left'>iCalendar counterpart</ttcol>

                    <c>attendance</c>
                    <c>
                        ROLE parameter values REQ-PARTICIPANT, OPT-PARTICIPANT and
                        NON-PARTICIPANT.
                    </c>

                    <c>delegatedFrom</c>
                    <c>
                        DELEGATED-FROM parameter
                    </c>

                    <c>delegatedTo</c>
                    <c>
                        DELEGATED-TO parameter
                    </c>

                    <c>email</c>
                    <c>
                        EMAIL parameter, if
                        defined. Otherwise the CAL-ADDRESS property value, if it is a mailto: URI.
                    </c>

                    <c>expectReply</c>
                    <c>
                        RSVP parameter
                    </c>

                    <c>kind</c>
                    <c>
                        CUTYPE parameter
                    </c>

                    <c>linkIds</c>
                    <c>
                        Implementation-specific.
                    </c>

                    <c>locationId</c>
                    <c>
                        Implementation-specific.
                    </c>

                    <c>memberOf</c>
                    <c>
                        MEMBER parameter
                    </c>

                    <c>name</c>
                    <c>
                        CN parameter
                    </c>

                    <c>participationStatus</c>
                    <c>
                        PARTSTAT parameter
                    </c>

                    <c>roles</c>
                    <c>
                        ROLE parameter.
                    </c>

                    <c>scheduleSequence</c>
                    <c>
                        SEQUENCE property of the participant's latest iMIP message
                    </c>

                    <c>scheduleUpdated</c>
                    <c>
                        DTSTAMP property of the participant's latest iMIP message
                    </c>

                    <c>sendTo</c>
                    <c>
                        A CAL-ADDRESS with a mailto: URI maps to the
                        JSCalendar <spanx style="verb">imip</spanx> method, any other
                        URI to the <spanx style="verb">other</spanx>
                        method. Mapping multiple methods is implementation-specific.
                    </c>

                </texttable>
            </section>

        </section>

        <section anchor="translate-custom" title="Custom properties">
            <t>
                Mapping custom or unknown properties between JSCalendar and iCalendar
                is implementation-specific. Implementations might use vendor-extension
                properties, which could
                also serve as basis for discussion for a JSCalendar standard extension.
                Alternatively, an implementation could preserve iCalendar properties
                and components in JSCalendar by use of a vendor-extension
                property formatted as jCal <xref target="RFC7265"/> data.
            </t>
        </section>

        <section anchor="security-considerations" title="Security Considerations">
            <t>
                The same security considerations as for <xref target="draft-ietf-calext-jscalendar"/> apply.
            </t>
        </section>

        <section anchor="iana-considerations" title="IANA Considerations">
            <t>
                None.
            </t>
        </section>

        <section anchor="acknowledgments" title="Acknowledgments">
            <t>
                The authors would like to thank the members of CalConnect for their valuable contributions. This
                specification originated from the work of the API technical committee of CalConnect, the Calendaring and
                Scheduling Consortium.
            </t>
        </section>
    </middle>

    <back>
        <references title="Normative References">
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5545.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7159.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7265.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7986.xml"?>
        </references>
        <references title="Informative References">
            <reference anchor="draft-ietf-calext-jscalendar"
                target="https://tools.ietf.org/html/draft-ietf-calext-jscalendar">
                <front>
                    <title>Task Extensions to iCalendar</title>
                    <author/>
                    <date/>
                </front>
            </reference>
            <reference anchor="draft-apthorp-ical-tasks"
                       target="https://tools.ietf.org/html/draft-apthorp-ical-tasks">
                <front>
                    <title>Task Extensions to iCalendar</title>
                    <author/>
                    <date/>
                </front>
            </reference>
            <reference anchor="draft-ietf-calext-ical-relations"
                       target="https://tools.ietf.org/html/draft-ietf-calext-ical-relations">
                <front>
                    <title>Support for iCalendar Relationships</title>
                    <author/>
                    <date/>
                </front>
              </reference>
        </references>
    </back>
</rfc>
