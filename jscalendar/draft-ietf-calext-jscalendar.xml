<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc ipr="trust200902" category="std" docName="draft-ietf-calext-jscalendar-27">
  <?rfc toc="yes"?>
  <?rfc symrefs="yes"?>
  <?rfc sortrefs="yes"?>
  <?rfc compact="no"?>
  <?rfc subcompact="no"?>
  <?rfc private=""?>
  <?rfc topblock="yes"?>
  <?rfc comments="no"?>
  <front>
    <title abbrev="JSCalendar">JSCalendar: A JSON representation of calendar data</title>
    <author initials="N.M." surname="Jenkins" fullname="Neil Jenkins">
      <organization>Fastmail</organization>
      <address>
        <postal>
          <street>PO Box 234</street>
          <street>Collins St West</street>
          <city>Melbourne</city>
          <code>VIC 8007</code>
          <country>Australia</country>
          <region />
        </postal>
        <phone />
        <email>neilj@fastmailteam.com</email>
        <uri>https://www.fastmail.com</uri>
      </address>
    </author>
    <author initials="R." surname="Stepanek" fullname="Robert Stepanek">
      <organization>Fastmail</organization>
      <address>
        <postal>
          <street>PO Box 234</street>
          <street>Collins St West</street>
          <city>Melbourne</city>
          <code>VIC 8007</code>
          <country>Australia</country>
          <region />
        </postal>
        <email>rsto@fastmailteam.com</email>
        <uri>https://www.fastmail.com</uri>
      </address>
    </author>
    <date year="2020" month="June" day="15" />
    <area>Applications</area>
    <workgroup>Calendaring extensions</workgroup>
    <keyword>JSON</keyword>
    <keyword>iCalendar</keyword>
    <keyword>calendar</keyword>
    <keyword>events</keyword>
    <keyword>date</keyword>
    <keyword>time</keyword>
    <abstract>
      <t>This specification defines a data model and JSON representation of calendar data that can be used for storage and data exchange in a calendaring and scheduling environment. It aims to be an alternative and, over time, successor to the widely deployed iCalendar data format, and to be unambiguous, extendable, and simple to process. In contrast to the jCal format, which is also JSON-based, JSCalendar is not a direct mapping from iCalendar, but defines the data model independently and expands semantics where appropriate.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction" title="Introduction">
      <t>This document defines a data model for calendar event and task objects, or groups of such objects, in electronic calendar applications and systems. The format aims to be unambiguous, extendable and simple to process.</t>

      <t>The key design considerations for this data model are as follows:
        <list style="symbols">
          <t>The attributes of the calendar entry represented must be described as simple key-value pairs. Simple events are simple to represent; complex events can be modelled accurately.</t>
          <t>Wherever possible, there should be only one way to express the desired semantics, reducing complexity.</t>
          <t>The data model should avoid ambiguities, which often lead to interoperability issues between implementations.</t>
          <t>The data model should be compatible with the iCalendar data format <xref target="RFC5545" /> <xref target="RFC7986" /> and extensions, but the specification should add new attributes where the iCalendar format currently lacks expressivity, and drop seldom-used, obsolete, or redundant properties. This means translation with no loss of semantics should be easy with most common iCalendar files.</t>
          <t>Extensions, such as new properties and components, should not require updates to this document.</t>
        </list>
      </t>

      <t>The representation of this data model is defined in the I-JSON format <xref target="RFC7493" />, which is a strict subset of the JavaScript Object Notation (JSON) Data Interchange Format <xref target="RFC8259" />. Using JSON is mostly a pragmatic choice: its widespread use makes JSCalendar easier to adopt, and the ready availability of production-ready JSON implementations eliminates a whole category of parser-related interoperability issues, which iCalendar has often suffered from.</t>

      <section anchor="relation-to-icalendar" title="Motivation and Relation to iCalendar and jCal">
        <t>The iCalendar data format <xref target="RFC5545" />, a widely deployed interchange format for calendaring and scheduling data, has served calendaring vendors for a long while, but contains some ambiguities and pitfalls that can not be overcome without backward-incompatible changes.</t>

        <t>Sources of implementation errors include the following:
          <list style="symbols">
            <t>iCalendar defines various formats for local times, UTC time, and dates.</t>
            <t>iCalendar requires custom time zone definitions within a single calendar component.</t>
            <t>iCalendarâ€™s definition of recurrence rules is ambiguous and has resulted in differing understandings even between experienced calendar developers.</t>
            <t>The iCalendar format itself causes interoperability issues due to misuse of CRLF-terminated strings, line continuations, and subtle differences among iCalendar parsers.</t>
          </list>
        </t>

        <t>In recent years, many new products and services have appeared that wish to use a JSON representation of calendar data within their APIs. The JSON format for iCalendar data, <xref target="RFC7265">jCal</xref>, is a direct mapping between iCalendar and JSON. In its effort to represent full iCalendar semantics, it inherits all the same pitfalls and uses a complicated JSON structure.</t>

        <t>As a consequence, since the standardization of jCal, the majority of implementations and service providers either kept using iCalendar, or came up with their own proprietary JSON representations, which are incompatible with each other and often suffer from common pitfalls, such as storing event start times in UTC (which become incorrect if the timezone's rules change in the future). JSCalendar meets the demand for JSON-formatted calendar data that is free of such known problems and provides a standard representation as an alternative to the proprietary formats.</t>
      </section>

      <section anchor="notational-conventions" title="Notational Conventions">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119" /> <xref target="RFC8174" /> when, and only when, they appear in all capitals, as shown here.</t>

        <t>The underlying format used for this specification is JSON. Consequently, the terms "object" and "array" as well as the four primitive types (strings, numbers, booleans, and null) are to be interpreted as described in Section 1 of <xref target="RFC8259" />.</t>

        <t>Some examples in this document contain "partial" JSON documents used for illustrative purposes. In these examples, three periods "..." are used to indicate a portion of the document that has been removed for compactness.</t>
      </section>

      <section anchor="type-signatures" title="Type Signatures">
        <t>Type signatures are given for all JSON values in this document. The following conventions are used:</t>

        <t><list style="symbols">
          <t><spanx style="verb">*</spanx> - The type is undefined (the value could be any type, although permitted values may be constrained by the context of this value).</t>
          <t><spanx style="verb">String</spanx> - The JSON string type.</t>
          <t><spanx style="verb">Number</spanx> - The JSON number type.</t>
          <t><spanx style="verb">Boolean</spanx> - The JSON boolean type.</t>
          <t><spanx style="verb">A[B]</spanx> - A JSON object where the keys are all of type <spanx style="verb">A</spanx>, and the values are all of type <spanx style="verb">B</spanx>.</t>
          <t><spanx style="verb">A[]</spanx> - An array of values of type
            <spanx style="verb">A</spanx>.</t>
          <t><spanx style="verb">A|B</spanx> - The value is either of type
            <spanx style="verb">A</spanx> or of type
            <spanx style="verb">B</spanx>.</t>
        </list></t>

        <t>Other types may also be given, with their representations defined elsewhere in this document.</t>
      </section>

      <section anchor="data-types" title="Data Types">
        <t>In addition to the standard JSON data types, the following data types are used in this specification:</t>

        <section anchor="type-Int" title="Int">
          <t>Where <spanx style="verb">Int</spanx> is given as a data type, it means an integer in the range -2^53+1 &lt;= value &lt;= 2^53-1, the safe range for integers stored in a floating-point double, represented as a JSON <spanx style="verb">Number</spanx>.</t>
        </section>

        <section anchor="type-UnsignedInt" title="UnsignedInt">
          <t>Where <spanx style="verb">UnsignedInt</spanx> is given as a data type, it means an integer in the range 0 &lt;= value &lt;= 2^53-1, represented as a JSON <spanx style="verb">Number</spanx>.</t>
        </section>

        <section anchor="type-UTCDateTime" title="UTCDateTime">
          <t>This is a string in <xref target="RFC3339" /> <spanx style="verb">date-time</spanx> format, with the further restrictions that any letters MUST be in uppercase, the time component MUST be included and the time offset MUST be the character <spanx style="verb">Z</spanx>. Fractional second values MUST NOT be included unless non-zero and MUST NOT have trailing zeros, to ensure there is only a single representation for each date-time. </t>

          <t>For example <spanx style="verb">2010-10-10T10:10:10.003Z</spanx> is OK, but <spanx style="verb">2010-10-10T10:10:10.000Z</spanx> is invalid and is correctly encoded as <spanx style="verb">2010-10-10T10:10:10Z</spanx>.</t>
        </section>

        <section anchor="type-LocalDateTime" title="LocalDateTime">
          <t>This is a date-time string with no time zone/offset information. It is otherwise in the same format as UTCDateTime, including fractional seconds. For example <spanx style="verb">2006-01-02T15:04:05</spanx> and <spanx style="verb">2006-01-02T15:04:05.003</spanx> are both valid. The time zone to associate the LocalDateTime with comes from an associated property, or if no time zone is associated it defines <spanx style="verb">floating time</spanx>. Floating date-times are not tied to any specific time zone. Instead, they occur in each time zone at the given wall-clock time (as opposed to the same instant point in time).</t>
        </section>

        <section anchor="type-Duration" title="Duration">
          <t>Where Duration is given as a type, it means a length of time represented by a subset of ISO8601 duration format, as specified by the following ABNF <xref target="RFC5234" />:</t>

          <figure>
            <artwork><![CDATA[    dur-secfrac = "." 1*DIGIT
    dur-second  = 1*DIGIT [dur-secfrac] "S"
    dur-minute  = 1*DIGIT "M" [dur-second]
    dur-hour    = 1*DIGIT "H" [dur-minute]
    dur-time    = "T" (dur-hour / dur-minute / dur-second)
    dur-day     = 1*DIGIT "D"
    dur-week    = 1*DIGIT "W"

    duration    = "P" (dur-day [dur-time] / dur-time / dur-week)]]></artwork>
          </figure>

          <t>In addition, the duration MUST NOT include fractional second values unless the fraction is non-zero.</t>
        </section>

        <section anchor="type-SignedDuration" title="SignedDuration">
          <t>A SignedDuration represents a length of time that may be positive or negative and is typically used to express the offset of a point in time relative to an associated time. It is represented as a Duration, optionally preceded by a sign character. It is specified by the following ABNF:</t>

          <figure>
            <artwork><![CDATA[    signed-duration = ["+" / "-"] duration]]></artwork>
          </figure>

          <t>A negative sign indicates a point in time at or before the associated time, a positive or no sign a time at or after the associated time.</t>
        </section>

        <section anchor="type-Id" title="Id">
          <t>Where <spanx style="verb">Id</spanx> is given as a data type, it means a <spanx style="verb">String</spanx> of at least 1 and a maximum of 255 octets in size, and it MUST only contain characters from the "URL and Filename Safe" base64url alphabet, as defined in Section 5 of <xref target="RFC4648" />, excluding the pad character (<spanx style="verb">=</spanx>). This means the allowed characters are the ASCII alphanumeric characters (<spanx style="verb">A-Za-z0-9</spanx>), hyphen (<spanx style="verb">-</spanx>), and underscore (<spanx style="verb">_</spanx>).</t>

          <t>Unless otherwise specified, Ids are arbitrary and only have meaning within the object where they are being used. Ids need not be unique among different objects. For example, two JSEvent objects might use the same ids in their respective <spanx style="verb">links</spanx> properties. Or within the same JSEvent object the same Id could appear in the <spanx style="verb">participants</spanx> and <spanx style="verb">alerts</spanx> properties. These situations do not imply any semantic connections among the objects. <vspace blankLines="1" /> Nevertheless, a UUID is typically a good choice.</t>
        </section>

        <section anchor="type-PatchObject" title="PatchObject">
          <t>A PatchObject is of type <spanx style="verb">String[*]</spanx>, and represents an unordered set of patches on a JSON object.
          Each key is a path represented in a subset of JSON pointer format <xref target="RFC6901" />. The paths have an implicit leading <spanx style="verb">/</spanx>, so each key is prefixed with <spanx style="verb">/</spanx> before applying the JSON pointer evaluation algorithm.</t>

          <t>A patch within a PatchObject is only valid if all of the following conditions apply:</t>

          <t><list style="numbers">
            <t>The pointer MUST NOT insert/delete from an array; the array MUST be replaced in its entirety instead.</t>
            <t>When evaluating a path, all parts prior to the last (i.e., the value after the final slash) MUST exist.</t>
            <t>There MUST NOT be two patches in the PatchObject where the pointer of one is a prefix of the pointer of the other, e.g., <spanx style="verb">alerts/foo/offset</spanx> and <spanx style="verb">alerts</spanx>.</t>
            <t>The value for the patch MUST be valid for the property being set (of the correct type and obeying any other applicable restrictions), or if null the property MUST be optional.</t>
          </list></t>

          <t>The value associated with each pointer is either:
            <list style="symbols">
              <t>null: Remove the property at the given path from the patched object. If the property is not present in the object, this a no-op.</t>
              <t>Anything else: Set the value for the property to this value (this may be a replacement or addition to the object being patched).</t>
            </list>
          </t>

          <t>Implementations MUST reject in its entirety a PatchObject if any of its patches is invalid.  Implementations MUST NOT apply partial patches.</t>
        </section>

        <section anchor="timezones" title="Time Zones">
          <t>By default, time zones in JSCalendar are identified by their names in the IANA Time Zone Database <xref target="TZDB" />, and the zone rules of the respective zone records apply.</t>

          <t>Implementations MAY embed the definitions of custom time zones in the <spanx style="verb">timeZones</spanx> property (see <xref target="prop-timeZones" />).</t>
         </section>
         <section anchor="type-Relation" title="Relation">
             <t>A Relation object defines the relation to other objects, using a possibly empty set of relation types. The object that defines this relation is the linking object, while the other object is the linked object. The Relation object has the following properties:</t>
             <t><list style="symbols">
               <t>@type: <spanx style="verb">String</spanx> (mandatory)
                   <vspace blankLines="1" />
                   Specifies the type of this object. This MUST be <spanx style="verb">Relation</spanx>.
               </t>
               <t>relation: <spanx style="verb">String[Boolean]</spanx> (optional, default: empty Object)
               <vspace blankLines="1" />
               Describes how the linked object is related to the linking object. The relation is defined as a set of relation types. If empty, the relationship between the two objects is unspecified.
               <vspace blankLines="1" />
               Keys in the set MUST be one of the following values, or specified in the property definition where the Relation object is used, or a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:
               <list style="symbols">
                   <t><spanx style="verb">first</spanx>: The linked object is the first in a series the linking object is part of.</t>
                   <t><spanx style="verb">next</spanx>: The linked object is the next in a series the linking object is part of.</t>
                   <t><spanx style="verb">child</spanx>: The linked object is a subpart of the linking object.</t>
                   <t><spanx style="verb">parent</spanx>: The linking object is a subpart of the linked object.</t>
               </list>
               The value for each key in the set MUST be true.</t>
            </list></t>
         </section>
      </section>
    </section>

    <section anchor="jscalendar-objects" title="JSCalendar Objects">
      <t>This section describes the calendar object types specified by JSCalendar.</t>

      <section anchor="jsevent" title="JSEvent">
        <t>Media type: <spanx style="verb">application/jscalendar+json;type=jsevent</spanx></t>

        <t>A JSEvent represents a scheduled amount of time on a calendar, typically a meeting, appointment, reminder or anniversary. It is required to start at a certain point in time and typically has a non-zero duration. Multiple participants may partake in the event at multiple locations.</t>

        <t>The <xref target="prop-type">@type</xref> property value MUST be <spanx style="verb">jsevent</spanx>.</t>
      </section>

      <section anchor="jstask" title="JSTask">
        <t>Media type: <spanx style="verb">application/jscalendar+json;type=jstask</spanx></t>

        <t>A JSTask represents an action-item, assignment, to-do or work item. It may start and be due at certain points in time, may take some estimated time to complete, and may recur, none of which is required.</t>

        <t>The <xref target="prop-type">@type</xref> property value MUST be <spanx style="verb">jstask</spanx>.</t>
      </section>

      <section anchor="jsgroup" title="JSGroup">
        <t>Media type: <spanx style="verb">application/jscalendar+json;type=jsgroup</spanx></t>

        <t>A JSGroup is a collection of <xref target="jsevent">JSEvent</xref> and/or <xref target="jstask">JSTask</xref> objects. Typically, objects are grouped by topic (e.g., by keywords) or calendar membership.</t>

        <t>The <xref target="prop-type">@type</xref> property value MUST be <spanx style="verb">jsgroup</spanx>.</t>
      </section>
    </section>

    <section anchor="structure-of-jscalendar-objects" title="Structure of JSCalendar Objects">
      <t>A JSCalendar object is a JSON object, which MUST be valid I-JSON (a stricter subset of JSON), as specified in <xref target="RFC8259" />. Property names and values are case-sensitive.</t>

      <t>The object has a collection of properties, as specified in the following sections. Properties are specified as being either mandatory or optional. Optional properties may have a default value, if explicitly specified in the property definition.</t>

      <section anchor="normalization" title="Normalization and Equivalence">
        <t>JSCalendar aims to provide unambiguous definitions for value types and properties, but does not define a general normalization or equivalence method for JSCalendar objects and types. This is because the notion of equivalence might range from byte-level equivalence to semantic equivalence, depending on the respective use case.

        <vspace blankLines="1" />

        Normalization of JSCalendar objects is hindered because of the following reasons:

        <list style="symbols">
          <t>Custom JSCalendar properties may contain arbitrary JSON values, including arrays. However, equivalence of arrays might or might not depend on the order of elements, depending on the respective property definition.</t>
          <t>Several JSCalendar property values are defined as URIs and media types, but normalization of these types is inherently protocol- and scheme-specific, depending on the use-case of the equivalence definition (see Section 6 of <xref target="RFC3986" />).</t>
        </list>

        Considering this, the definition of equivalence and normalization is left to client and server implementations and to be negotiated by a calendar exchange protocol or defined elsewhere.</t>
      </section>

      <section anchor="custom-properties" title="Vendor-specific Property Extensions and Values">
        <t>Vendors MAY add additional properties to the calendar object to support their custom features. The names of these properties MUST be prefixed with a domain name controlled by the vendor to avoid conflict, e.g., <spanx style="verb">example.com/customprop</spanx>.</t>

        <t>Some JSCalendar properties allow vendor-specific value extensions. Such vendor-specific values MUST be prefixed with a domain name controlled by the vendor, e.g., <spanx style="verb">example.com/customrel</spanx>.</t>

        <t>Vendors are strongly encouraged to register any new property values or extensions that are useful to other systems as well, rather than use a vendor-specific prefix.</t>
      </section>
    </section>

    <section anchor="jscalendar-props" title="Common JSCalendar Properties">
      <t>This section describes the properties that are common to the various JSCalendar object types. Specific JSCalendar object types may only support a subset of these properties. The object type definitions in <xref target="jscalendar-object-props" /> describe the set of supported properties per type.</t>

      <section anchor="metadata-properties" title="Metadata Properties">
        <section anchor="prop-type" title="@type">
          <t>Type: <spanx style="verb">String</spanx> (mandatory).</t>
          <t>Specifies the type which this object represents. This MUST be one of the following values:
            <list style="symbols">
              <t><spanx style="verb">jsevent</spanx>: a JSCalendar event (<xref target="jsevent" />).</t>
              <t><spanx style="verb">jstask</spanx>: a JSCalendar task (<xref target="jstask" />).</t>
              <t><spanx style="verb">jsgroup</spanx>: a JSCalendar group (<xref target="jsgroup" />).</t>
            </list>
          </t>
        </section>

        <section anchor="prop-uid" title="uid">
          <t>Type: <spanx style="verb">String</spanx> (mandatory).</t>
          <t>A globally unique identifier, used to associate the object as the same across different systems, calendars and views. The value of this property MUST be unique across all JSCalendar objects, even if they are of different type. <xref target="RFC4122" /> describes a range of established algorithms to generate universally unique identifiers (UUID). UUID version 4, described in Section 4.4 of <xref target="RFC4122" />, is RECOMMENDED.</t>

          <t>For compatibility with <xref target="RFC5545" /> UIDs, implementations MUST be able to receive and persist values of at least 255 octets for this property, but they MUST NOT truncate values in the middle of a UTF-8 multi-octet sequence.</t>
        </section>
        <section anchor="prop-relatedTo" title="relatedTo">
          <t>Type: <spanx style="verb">String[Relation]</spanx> (optional).</t>

          <t>Relates the object to other JSCalendar objects. This is represented as a map of the UIDs of the related objects to information about the relation.</t>

          <t>If an object is split to make a "this and future" change to a recurrence, the original object MUST be truncated to end at the previous occurrence before this split, and a new object created to represent all the occurrences after the split. A <spanx style="verb">next</spanx> relation MUST be set on the original object's relatedTo property for the UID of the new object. A <spanx style="verb">first</spanx> relation for the UID of the first object in the series MUST be set on the new object. Clients can then follow these UIDs to get the complete set of objects if the user wishes to modify them all at once.</t>
        </section>

        <section anchor="prop-prodId" title="prodId">
          <t>Type: <spanx style="verb">String</spanx> (optional).</t>

          <t>The identifier for the product that last updated the JSCalendar object. This should be set whenever the data in the object is modified (i.e., whenever the "updated" property is set).</t>

          <t>The vendor of the implementation SHOULD ensure that this is a globally unique identifier, using some technique such as an FPI value, as defined in [ISO.9070.1991]. It MUST only use characters of an iCalendar TEXT data value (see Section 3.3.11 of <xref target="RFC5545" />).</t>

          <t>This property SHOULD NOT be used to alter the interpretation of a JSCalendar object beyond the semantics specified in this document. For example, it is not to be used to further the understanding of non-standard properties, a practice that is knows to cause long-term interoperability problems.</t>
        </section>

        <section anchor="prop-created" title="created">
          <t>Type: <spanx style="verb">UTCDateTime</spanx> (optional).</t>

          <t>The date and time this object was initially created.</t>
        </section>

        <section anchor="prop-updated" title="updated">
          <t>Type: <spanx style="verb">UTCDateTime</spanx> (mandatory).</t>

          <t>The date and time the data in this object was last modified (or its creation date/time if not modified since).</t>
        </section>

        <section anchor="prop-sequence" title="sequence">
          <t>Type: <spanx style="verb">UnsignedInt</spanx> (optional, default: 0).</t>

          <t>Initially zero, this MUST be incremented by one every time a change is made to the object, except if the change only modifies the <spanx style="verb">participants</spanx> property (see <xref target="prop-participants" />).</t>

          <t>This is used as part of iTIP <xref target="RFC5546" /> to know which version of the object a scheduling message relates to.</t>
        </section>

        <section anchor="prop-method" title="method">
          <t>Type: <spanx style="verb">String</spanx> (optional).</t>

          <t>The iTIP <xref target="RFC5546" /> method, in lowercase. This MUST only be present if the JSCalendar object represents an iTIP scheduling message.</t>
        </section>
      </section>

      <section anchor="whatwhere-properties" title="What and Where Properties">
        <section anchor="prop-title" title="title">
          <t>Type: <spanx style="verb">String</spanx> (optional, default: empty String).</t>

          <t>A short summary of the object.</t>
        </section>

        <section anchor="prop-description" title="description">
          <t>Type: <spanx style="verb">String</spanx> (optional, default: empty String).</t>

          <t>A longer-form text description of the object. The content is formatted according to the <spanx style="verb">descriptionContentType</spanx> property.</t>
        </section>

        <section anchor="prop-descriptionContentType" title="descriptionContentType">
          <t>Type: <spanx style="verb">String</spanx> (optional, default: <spanx style="verb">text/plain</spanx>).</t>

          <t>Describes the media type <xref target="RFC6838" /> of the contents of the <spanx style="verb">description</spanx> property. Media types MUST be sub-types of type <spanx style="verb">text</spanx>, and SHOULD be <spanx style="verb">text/plain</spanx> or <spanx style="verb">text/html</spanx> <xref target="MIME" />. They MAY include parameters and the <spanx style="verb">charset</spanx> parameter value MUST be <spanx style="verb">utf-8</spanx>, if specified. Descriptions of type <spanx style="verb">text/html</spanx> MAY contain <spanx style="verb">cid</spanx> URLs <xref target="RFC2392" /> to reference links in the calendar object by use of the <spanx style="verb">cid</spanx> property of the Link object.</t>
        </section>

        <section anchor="prop-showWithoutTime" title="showWithoutTime">
          <t>Type: <spanx style="verb">Boolean</spanx> (optional, default: false).</t>

          <t>Indicates that the time is not important to display to the user when rendering this calendar object. An example of this is an event that conceptually occurs all day or across multiple days, such as "New Year's Day" or "Italy Vacation". While the time component is important for free-busy calculations and checking for scheduling clashes, calendars may choose to omit displaying it and/or display the object separately to other objects to enhance the user's view of their schedule.</t>

          <t>Such events are also commonly known as "all-day" events.</t>
        </section>

        <section anchor="prop-locations" title="locations">
          <t>Type: <spanx style="verb">Id[Location]</spanx> (optional).</t>

          <t>A map of location ids to Location objects, representing locations associated with the object.</t>

          <t>A Location object has the following properties. It MUST have at least one property other than the <spanx style="verb">relativeTo</spanx> property.</t>

          <t><list style="symbols">
            <t>@type: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            Specifies the type of this object. This MUST be <spanx style="verb">Location</spanx>.
            </t>
            <t>name: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            The human-readable name of the location.</t>

            <t>description: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            Human-readable, plain-text instructions for accessing this location. This may be an address, set of directions, door access code, etc.</t>

            <t>locationTypes: <spanx style="verb">String[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            A set of one or more location types that describe this location. All types MUST be from the Location Types Registry <xref target="LOCATIONTYPES" /> as defined in <xref target="RFC4589" />. The set is represented as a map, with the keys being the location types. The value for each key in the map MUST be true.
            </t>

            <t>relativeTo: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            Specifies the relation between this location and the time of the JSCalendar object. This is primarily to allow events representing travel to specify the location of departure (at the start of the event) and location of arrival (at the end); this is particularly important if these locations are in different time zones, as a client may wish to highlight this information for the user.
            <vspace blankLines="1" />
            This MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value. Any value the client or server doesn't understand should be treated the same as if this property is omitted.
            <list style="symbols">
              <t><spanx style="verb">start</spanx>: The event/task described by this JSCalendar object occurs at this location at the time the event/task starts.</t>
              <t><spanx style="verb">end</spanx>: The event/task described by this JSCalendar object occurs at this location at the time the event/task ends.</t>
            </list></t>

            <t>timeZone: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            A time zone for this location. See also <xref target="timezones" />.</t>

            <t>coordinates: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            A <spanx style="verb">geo:</spanx> URI <xref target="RFC5870" /> for the location.</t>

            <t>linkIds: <spanx style="verb">Id[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            A set of link ids for links to alternative representations of this location. Each key in the set MUST be the id of a Link object defined in the <spanx style="verb">links</spanx> property of this calendar object. The value for each key in the set MUST be true. If there are no links, this MUST be omitted (rather than specified as an empty set).
            <vspace blankLines="1" />
            For example, an alternative representation could be in vCard format.</t>
          </list></t>
        </section>

        <section anchor="prop-virtualLocations" title="virtualLocations">
          <t>Type: <spanx style="verb">Id[VirtualLocation]</spanx> (optional).</t>

          <t>A map of ids to VirtualLocation objects, representing virtual locations, such as video conferences or chat rooms, associated with the object.</t>

          <t>A VirtualLocation object has the following properties.</t>
          <t><list style="symbols">
            <t>@type: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            Specifies the type of this object. This MUST be <spanx style="verb">VirtualLocation</spanx>.</t>
            <t>name: <spanx style="verb">String</spanx> (optional, default: empty String)
            <vspace blankLines="1" />
            The human-readable name of the virtual location.</t>

            <t>description: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            Human-readable plain-text instructions for accessing this location. This may be an address, set of directions, door access code, etc.</t>

            <t>uri: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            A URI that represents how to connect to this virtual location.
            <vspace blankLines="1" />
            This may be a telephone number (represented using the <spanx style="verb">tel:</spanx> scheme, e.g., <spanx style="verb">tel:+1-555-555-555</spanx>) for a teleconference, a web address for online chat, or any custom URI.</t>
          </list></t>
        </section>

        <section anchor="prop-links" title="links">
          <t>Type: <spanx style="verb">Id[Link]</spanx> (optional).</t>

          <t>A map of link ids to Link objects, representing external resources associated with the object.</t>

          <t>A Link object has the following properties:</t>

          <t><list style="symbols">
            <t>@type: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            Specifies the type of this object. This MUST be <spanx style="verb">Link</spanx>.</t>
            <t>href: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            A URI from which the resource may be fetched.
            <vspace blankLines="1" />
            This MAY be a <spanx style="verb">data:</spanx> URL <xref target="RFC2397" />, but it is recommended that the file be hosted on a server to avoid embedding arbitrarily large data in JSCalendar object instances.</t>

            <t>cid: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            This MUST be a valid <spanx style="verb">content-id</spanx> value according to the definition of Section 2 in <xref target="RFC2392" />. The value MUST be unique within this Link object but has no meaning beyond that. It MAY be different from the link id for this Link object.</t>

            <t>contentType: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            The media type <xref target="RFC6838" /> of the resource, if known.</t>

            <t>size: <spanx style="verb">UnsignedInt</spanx> (optional)
            <vspace blankLines="1" />
            The size, in octets, of the resource when fully decoded (i.e., the number of octets in the file the user would download), if known. Note that this is an informational estimate, and implementations must be prepared to handle the actual size being quite different when the resource is fetched.</t>

            <t>rel: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            Identifies the relation of the linked resource to the object. If set, the value MUST be a relation type from the IANA registry <xref target="LINKRELS" />, as established in <xref target="RFC8288" />.
            <vspace blankLines="1" />
            Links with a rel of <spanx style="verb">enclosure</spanx> MUST be considered by the client as attachments for download.
            <vspace blankLines="1" />
            Links with a rel of <spanx style="verb">describedby</spanx> MUST be considered by the client to be an alternative representation of the description.
            <vspace blankLines="1" />
            Links with a rel of <spanx style="verb">icon</spanx> MUST be considered by the client to be an image that it may use when presenting the calendar data to a user. The <spanx style="verb">display</spanx> property may be set to indicate the purpose of this image.</t>

            <t>display: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            Describes the intended purpose of a link to an image. If set, the <spanx style="verb">rel</spanx> property MUST be set to <spanx style="verb">icon</spanx>. The value MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:

            <list style="symbols">
              <t><spanx style="verb">badge</spanx>: an image meant to be displayed alongside the title of the object.</t>

              <t><spanx style="verb">graphic</spanx>: a full image replacement for the object itself.</t>

              <t><spanx style="verb">fullsize</spanx>: an image that is used to enhance the object.</t>

              <t><spanx style="verb">thumbnail</spanx>: a smaller variant of <spanx style="verb">fullsize</spanx> to be used when space for the image is constrained.</t>
            </list></t>

            <t>title: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            A human-readable plain-text description of the resource.</t>
          </list></t>
        </section>

        <section anchor="prop-locale" title="locale">
          <t>Type: <spanx style="verb">String</spanx> (optional).</t>

          <t>The language tag as defined in <xref target="RFC5646" /> that best describes the locale used for the text in the calendar object, if known.</t>
        </section>

        <section anchor="prop-keywords" title="keywords">
          <t>Type: <spanx style="verb">String[Boolean]</spanx> (optional).</t>

          <t>A set of keywords or tags that relate to the object. The set is represented as a map, with the keys being the keywords. The value for each key in the map MUST be true.</t>
        </section>

        <section anchor="prop-categories" title="categories">
          <t>Type: <spanx style="verb">String[Boolean]</spanx> (optional).</t>

          <t>A set of categories that relate to the calendar object. The set is represented as a map, with the keys being the categories specified as URIs. The value for each key in the map MUST be true.</t>

          <t>In contrast to keywords, categories typically are structured. For example, a vendor owning the domain <spanx style="verb">example.com</spanx> might define the categories <spanx style="verb">http://example.com/categories/sports/american-football</spanx> and <spanx style="verb">http://example.com/categories/music/r-b</spanx>.</t>
        </section>

        <section anchor="prop-color" title="color">
          <t>Type: <spanx style="verb">String</spanx> (optional).</t>

          <t>A color clients MAY use when displaying this calendar object. The value is a color name taken from the set of names defined in Section 4.3 of CSS Color Module Level 3 <xref target="COLORS" />, or an RGB value in hexadecimal notation, as defined in Section 4.2.1 of CSS Color Module Level 3.</t>
        </section>
      </section>

      <section anchor="recurrence-props" title="Recurrence Properties">
        <t>Some events and tasks occur at regular or irregular intervals. Rather than having to copy the data for every occurrence there can be a master event with a recurrence rule, and/or overrides that add extra dates or exceptions to the rule.</t>

        <section anchor="prop-recurrenceId" title="recurrenceId">
          <t>Type: <spanx style="verb">LocalDateTime</spanx> (optional).</t>

          <t>If present, this JSCalendar object represents one occurrence of a recurring JSCalendar object. If present the <spanx style="verb">recurrenceRules</spanx> and <spanx style="verb">recurrenceOverrides</spanx> properties MUST NOT be present.</t>

          <t>The value is a date-time either produced by the <spanx style="verb">recurrenceRules</spanx> of the master event, or added as a key to the <spanx style="verb">recurrenceOverrides</spanx> property of the master event.</t>
        </section>

        <section anchor="prop-recurrenceRules" title="recurrenceRules">
          <t>Type: <spanx style="verb">RecurrenceRule[]</spanx> (optional).</t>

          <t>Defines a set of recurrence rules (repeating patterns) for recurring calendar objects.</t>

          <t>A JSEvent recurs by applying the recurrence rules to the <spanx style="verb">start</spanx> date-time.</t>

          <t>A JSTask recurs by applying the recurrence rules to the <spanx style="verb">start</spanx> date-time, if defined, otherwise it recurs by the <spanx style="verb">due</spanx> date-time, if defined. If the task defines neither a <spanx style="verb">start</spanx> nor <spanx style="verb">due</spanx> date-time, it MUST NOT define a <spanx style="verb">recurrenceRules</spanx> property.</t>

          <t>If multiple recurrence rules are given, each rule is to be applied and then the union of the results used, ignoring any duplicates.</t>

          <t>A RecurrenceRule object is a JSON object mapping of a RECUR value type in iCalendar <xref target="RFC5545" /> <xref target="RFC7529" /> and has the same semantics. It has the following properties:

              <list style="symbols">
            <t>@type: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            Specifies the type of this object. This MUST be <spanx style="verb">RecurrenceRule</spanx>.</t>
            <t>frequency: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            The time span covered by each iteration of this recurrence rule (see <xref target="recurrence-semantics" /> for full semantics). This MUST be one of the following values:

            <list style="symbols">
              <t><spanx style="verb">yearly</spanx></t>
              <t><spanx style="verb">monthly</spanx></t>
              <t><spanx style="verb">weekly</spanx></t>
              <t><spanx style="verb">daily</spanx></t>
              <t><spanx style="verb">hourly</spanx></t>
              <t><spanx style="verb">minutely</spanx></t>
              <t><spanx style="verb">secondly</spanx></t>
            </list>

            This is the FREQ part from iCalendar, converted to lowercase.</t>

            <t>interval: <spanx style="verb">UnsignedInt</spanx> (optional, default: 1)
            <vspace blankLines="1" />
            The interval of iteration periods at which the recurrence repeats. If included, it MUST be an integer &gt;= 1.
            <vspace blankLines="1" />
            This is the INTERVAL part from iCalendar.</t>

            <t>rscale: <spanx style="verb">String</spanx> (optional, default: "gregorian")
            <vspace blankLines="1" />
            The calendar system in which this recurrence rule operates, in lowercase. This MUST be either a CLDR-registered calendar system name <xref target="CLDR" />, or a vendor-specific value.
            <vspace blankLines="1" />
            This is the RSCALE part from iCalendar <xref target="RFC7529">RSCALE</xref>, converted to lowercase.</t>

            <t>skip: <spanx style="verb">String</spanx> (optional, default: "omit")
            <vspace blankLines="1" />
            The behaviour to use when the expansion of the recurrence produces invalid dates. This property only has an effect if the frequency is "yearly" or "monthly". It MUST be one of the following values:

            <list style="symbols">
              <t><spanx style="verb">omit</spanx></t>
              <t><spanx style="verb">backward</spanx></t>
              <t><spanx style="verb">forward</spanx></t>
            </list>

            This is the SKIP part from iCalendar <xref target="RFC7529">RSCALE</xref>, converted to lowercase.</t>

            <t>firstDayOfWeek: <spanx style="verb">String</spanx> (optional, default: "mo")
            <vspace blankLines="1" />
            The day on which the week is considered to start, represented as a lowercase abbreviated two-letter English day of the week. If included, it MUST be one of the following values:

            <list style="symbols">
              <t><spanx style="verb">mo</spanx></t>
              <t><spanx style="verb">tu</spanx></t>
              <t><spanx style="verb">we</spanx></t>
              <t><spanx style="verb">th</spanx></t>
              <t><spanx style="verb">fr</spanx></t>
              <t><spanx style="verb">sa</spanx></t>
              <t><spanx style="verb">su</spanx></t>
            </list>

            This is the WKST part from iCalendar.</t>

            <t>byDay: <spanx style="verb">NDay[]</spanx> (optional)
            <vspace blankLines="1" />
            Days of the week on which to repeat. An <spanx style="verb">NDay</spanx> object has the following properties:

            <list style="symbols">
              <t>day: <spanx style="verb">String</spanx> (mandatory)
              <vspace blankLines="1" />
              A day of the week on which to repeat; the allowed values are the same as for the <spanx style="verb">firstDayOfWeek</spanx> RecurrenceRule property.
              <vspace blankLines="1" />
              This is the day-of-the-week of the BYDAY part in iCalendar, converted to lowercase.</t>
              <t>nthOfPeriod: <spanx style="verb">Int</spanx> (optional)
              <vspace blankLines="1" />
              If present, rather than representing every occurrence of the weekday defined in the <spanx style="verb">day</spanx> property, it represents only a specific instance within the recurrence period. The value can be positive or negative, but MUST NOT be zero. A negative integer means nth-last of period.
              <vspace blankLines="1" />
              This is the ordinal part of the BYDAY value in iCalendar (e.g., 1 or -3).</t>
            </list></t>

            <t>byMonthDay: <spanx style="verb">Int[]</spanx> (optional)
            <vspace blankLines="1" />
            Days of the month on which to repeat. Valid values are between 1 and the maximum number of days any month may have in the calendar given by the "rscale" property, and the negative values of these numbers. For example, in the Gregorian calendar valid values are 1 to 31 and -31 to -1. Negative values offset from the end of the month. The array MUST have at least one entry if included.
            <vspace blankLines="1" />
            This is the BYMONTHDAY part in iCalendar.</t>

            <t>byMonth: <spanx style="verb">String[]</spanx> (optional)
            <vspace blankLines="1" />
            The months in which to repeat. Each entry is a string representation of a number, starting from "1" for the first month in the calendar (e.g., "1" means January with the Gregorian calendar), with an optional "L" suffix (see <xref target="RFC7529" />) for leap months (this MUST be uppercase, e.g., "3L"). The array MUST have at least one entry if included.
            <vspace blankLines="1" />
            This is the BYMONTH part from iCalendar.</t>

            <t>byYearDay: <spanx style="verb">Int[]</spanx> (optional)
            <vspace blankLines="1" />
            The days of the year on which to repeat. Valid values are between 1 and the maximum number of days any year may have in the calendar given by the "rscale" property, and the negative values of these numbers. For example, in the Gregorian calendar valid values are 1 to 366 and -366 to -1. Negative values offset from the end of the year. The array MUST have at least one entry if included.
            <vspace blankLines="1" />
            This is the BYYEARDAY part from iCalendar.</t>

            <t>byWeekNo: <spanx style="verb">Int[]</spanx> (optional)
            <vspace blankLines="1" />
            Weeks of the year in which to repeat. Valid values are between 1 and the maximum number of weeks any year may have in the calendar given by the "rscale" property, and the negative values of these numbers. For example, in the Gregorian calendar valid values are 1 to 53 and -53 to -1. The array MUST have at least one entry if included.
            <vspace blankLines="1" />
            This is the BYWEEKNO part from iCalendar.</t>

            <t>byHour: <spanx style="verb">UnsignedInt[]</spanx> (optional)
            <vspace blankLines="1" />
            The hours of the day in which to repeat. Valid values are 0 to 23. The array MUST have at least one entry if included. This is the BYHOUR part from iCalendar.</t>

            <t>byMinute: <spanx style="verb">UnsignedInt[]</spanx> (optional)
            <vspace blankLines="1" />
            The minutes of the hour in which to repeat. Valid values are 0 to 59. The array MUST have at least one entry if included.
            <vspace blankLines="1" />
            This is the BYMINUTE part from iCalendar.</t>

            <t>bySecond: <spanx style="verb">UnsignedInt[]</spanx> (optional)
            <vspace blankLines="1" />
            The seconds of the minute in which to repeat. Valid values are 0 to 60. The array MUST have at least one entry if included.
            <vspace blankLines="1" />
            This is the BYSECOND part from iCalendar.</t>

            <t>bySetPosition: <spanx style="verb">Int[]</spanx> (optional)
            <vspace blankLines="1" />
            The occurrences within the recurrence interval to include in the final results. Negative values offset from the end of the list of occurrences. The array MUST have at least one entry if included. This is the BYSETPOS part from iCalendar.</t>

            <t>count: <spanx style="verb">UnsignedInt</spanx> (optional)
            <vspace blankLines="1" />
            The number of occurrences at which to range-bound the recurrence. This MUST NOT be included if an <spanx style="verb">until</spanx> property is specified.
            <vspace blankLines="1" />
            This is the COUNT part from iCalendar.</t>
            <t>until: <spanx style="verb">LocalDateTime</spanx> (optional)
            <vspace blankLines="1" />
            The date-time at which to finish recurring. The last occurrence is on or before this date-time. This MUST NOT be included if a <spanx style="verb">count</spanx> property is specified. Note: if not specified otherwise for a specific JSCalendar object, this date is to be interpreted in the time zone specified in the JSCalendar object's <spanx style="verb">timeZone</spanx> property.
            <vspace blankLines="1" />
            This is the UNTIL part from iCalendar.</t>
          </list></t>

          <section anchor="recurrence-semantics" title="Interpreting recurrence rules">
            <t>A recurrence rule specifies a set of date-times for recurring calendar objects. A recurrence rule has the following semantics. Note, wherever "year", "month" or "day of month" is used, this is within the calendar system given by the "rscale" property, which defaults to "gregorian" if omitted.

            <list style="numbers">
              <t>A set of candidates is generated. This is every second within a period defined by the frequency property value:

              <list style="symbols">
                <t><spanx style="verb">yearly</spanx>: every second from midnight on the 1st day of a year (inclusive) to midnight the 1st day of the following year (exclusive).
                <vspace blankLines="1" />
                If skip is not "omit", the calendar system has leap months and there is a byMonth property, generate candidates for the leap months even if they don't occur in this year.
                <vspace blankLines="1" />
                If skip is not "omit" and there is a byMonthDay property, presume each month has the maximum number of days any month may have in this calendar system when generating candidates, even if it's more than this month actually has.</t>

                <t><spanx style="verb">monthly</spanx>: every second from midnight on the 1st day of a month (inclusive) to midnight on the 1st of the following month (exclusive).
                <vspace blankLines="1" />
                If skip is not "omit" and there is a byMonthDay property, presume the month has the maximum number of days any month may have in this calendar system when generating candidates, even if it's more than this month actually has.</t>

                <t><spanx style="verb">weekly</spanx>: every second from midnight (inclusive) on the first day of the week (as defined by the firstDayOfWeek property, or Monday if omitted), to midnight 7 days later (exclusive).</t>

                <t><spanx style="verb">daily</spanx>: every second from midnight at the start of the day (inclusive) to midnight at the end of the day (exclusive).</t>

                <t><spanx style="verb">hourly</spanx>: every second from the beginning of the hour (inclusive) to the beginning of the next hour (exclusive).</t>

                <t><spanx style="verb">minutely</spanx>: every second from the beginning of the minute (inclusive) to the beginning of the next minute (exclusive).</t>

                <t><spanx style="verb">secondly</spanx>: the second itself, only.</t>
              </list></t>

              <t>Each date-time candidate is compared against all of the byX properties of the rule except bySetPosition. If any property in the rule does not match the date-time, it is eliminated. Each byX property is an array; the date-time matches the property if it matches any of the values in the array. The properties have the following semantics:

              <list style="symbols">
                <t>byMonth: the date-time is in the given month.</t>

                <t>byWeekNo: the date-time is in the nth week of the year. Negative numbers mean the nth last week of the year. This corresponds to weeks according to week numbering as defined in ISO.8601.2004, with a week defined as a seven day period, starting on the firstDayOfWeek property value or Monday if omitted. Week number one of the calendar year is the first week that contains at least four days in that calendar year.
                <vspace blankLines="1" />
                If the date-time is not valid (this may happen when generating candidates with a skip property in effect), it is always eliminated by this property.</t>

                <t>byYearDay: the date-time is on the nth day of year. Negative numbers mean the nth last day of the year.
                <vspace blankLines="1" />
                If the date-time is not valid (this may happen when generating candidates with a skip property in effect), it is always eliminated by this property.</t>

                <t>byMonthDay: the date-time is on the given day of the month. Negative numbers mean the nth last day of the month.</t>

                <t>byDay: the date-time is on the given day of the week. If the day is prefixed by a number, it is the nth occurrence of that day of the week within the month (if frequency is monthly) or year (if frequency is yearly). Negative numbers means nth last occurrence within that period.</t>

                <t>byHour: the date-time has the given hour value.</t>

                <t>byMinute: the date-time has the given minute value.</t>

                <t>bySecond: the date-time has the given second value.</t>
              </list>

              If a skip property is defined and is not "omit", there may be candidates that do not correspond to valid dates (e.g., 31st February in the Gregorian calendar). In this case, the properties MUST be considered in the order above and:

              <list style="numbers">
                <t>After applying the byMonth filter, if the candidate's month is invalid for the given year, increment it (if skip is "forward") or decrement it (if skip is "backward") until a valid month is found, incrementing/decrementing the year as well if passing through the beginning/end of the year. This only applies to calendar systems with leap months.</t>
                <t>After applying the byMonthDay filter, if the day of the month is invalid for the given month and year, change the date to the first day of the next month (if skip is "forward") or the last day of the current month (if skip is "backward").</t>
                <t>If any valid date produced after applying the skip is already a candidate, eliminate the duplicate. (For example after adjusting, 30th February and 31st February would both become the same "real" date, so one is eliminated as a duplicate.)</t>
              </list>
            </t>
              <t>If a bySetPosition property is included, this is now applied to the ordered list of remaining dates. This property specifies the indexes of date-times to keep; all others should be eliminated. Negative numbers are indexes from the end of the list, with -1 being the last item.</t>

              <t>Any date-times before the start date of the event are eliminated (see below for why this might be needed).</t>

              <t>If a skip property is included and is not "omit", eliminate any date-times that have already been produced by previous iterations of the algorithm. (This is not possible if skip is "omit".)</t>

              <t>If further dates are required (we have not reached the until date, or count limit) skip the next (interval - 1) sets of candidates, then continue from step 1.</t>
            </list>

            When determining the set of occurrence dates for an event or task, the following extra rules must be applied:

            <list style="numbers">
              <t>The initial date-time to which the rule is applied (the <spanx style="verb">start</spanx> date-time for events; the <spanx style="verb">start</spanx> or <spanx style="verb">due</spanx> date-time for tasks) is always the first occurrence in the expansion (and is counted if the recurrence is limited by a "count" property), even if it would normally not match the rule.</t>

              <t>The first set of candidates to consider is that which would contain the initial date-time. This means the first set may include candidates before the initial date-time; such candidates are eliminated from the results in step (4) as outlined before.</t>

              <t>The following properties MUST be implicitly added to the rule under the given conditions:

              <list style="symbols">
                <t>If frequency is not <spanx style="verb">secondly</spanx> and no bySecond property: Add a bySecond property with the sole value being the seconds value of the initial date-time.</t>

                <t>If frequency is not <spanx style="verb">secondly</spanx> or <spanx style="verb">minutely</spanx>, and no byMinute property: Add a byMinute property with the sole value being the minutes value of the initial date-time.</t>

                <t>If frequency is not <spanx style="verb">secondly</spanx>, <spanx style="verb">minutely</spanx> or <spanx style="verb">hourly</spanx> and no byHour property: Add a byHour property with the sole value being the hours value of the initial date-time.</t>

                <t>If frequency is <spanx style="verb">weekly</spanx> and no byDay property: Add a byDay property with the sole value being the day-of-the-week of the initial date-time.</t>

                <t>If frequency is <spanx style="verb">monthly</spanx> and no byDay property and no byMonthDay property: Add a byMonthDay property with the sole value being the day-of-the-month of the initial date-time.</t>

                <t>If frequency is <spanx style="verb">yearly</spanx> and no byYearDay property:

                <list style="symbols">
                  <t>If there are no byMonth or byWeekNo properties, and either there is a byMonthDay property or there is no byDay property: Add a byMonth property with the sole value being the month of the initial date-time.</t>

                  <t>If there is no byMonthDay, byWeekNo or byDay properties: Add a byMonthDay property with the sole value being the day-of-the-month of the initial date-time.</t>

                  <t>If there is a byWeekNo property and no byMonthDay or byDay properties: Add a byDay property with the sole value being the day-of-the-week of the initial date-time.</t>
                </list></t>
              </list></t>
            </list></t>
          </section>
        </section>

        <section anchor="prop-recurrenceOverrides" title="recurrenceOverrides">
          <t>Type: <spanx style="verb">LocalDateTime[PatchObject]</spanx> (optional).</t>

          <t>A map of the recurrence ids (the date-time produced by the recurrence rule) to an object of patches to apply to the generated occurrence object.</t>

          <t>If the recurrence id does not match a date-time from the recurrence rule (or no rule is specified), it is to be treated as an additional occurrence (like an RDATE from iCalendar). The patch object may often be empty in this case.</t>

          <t>If the patch object defines the <spanx style="verb">excluded</spanx> property value to be true, then the recurring calendar object does not occur at the recurrence id date-time (like an EXDATE from iCalendar). Such a patch object MUST NOT patch any other property.</t>

          <t>By default, an occurrence inherits all properties from the main object except the start (or due) date-time, which is shifted to match the recurrence id LocalDateTime. However, individual properties of the occurrence can be modified by a patch, or multiple patches. It is valid to patch the <spanx style="verb">start</spanx> property value, and this patch takes precedence over the value generated from the recurrence id. Both the recurrence id as well as the patched <spanx style="verb">start</spanx> date-time may occur before the original JSCalendar object's <spanx style="verb">start</spanx> or <spanx style="verb">due</spanx> date.</t>

          <t>A pointer in the PatchObject MUST be ignored if it starts with one of the following prefixes:

          <list style="symbols">
            <t>@type</t>
            <t>method</t>
            <t>privacy</t>
            <t>prodId</t>
            <t>recurrenceId</t>
            <t>recurrenceOverrides</t>
            <t>recurrenceRules</t>
            <t>relatedTo</t>
            <t>replyTo</t>
            <t>uid</t>
          </list></t>
        </section>

        <section anchor="prop-excluded" title="excluded">
          <t>Type: <spanx style="verb">Boolean</spanx> (optional, default: false).</t>

          <t>Defines if this object is an overridden, excluded instance of a recurring JSCalendar object (see <xref target="prop-recurrenceOverrides" />). If this property value is true, this calendar object instance MUST be removed from the occurrence expansion. The absence of this property or its default value false indicates that this instance MUST be included in the occurrence expansion.</t>
        </section>
      </section>

      <section anchor="sharing-scheduling-properties" title="Sharing and Scheduling Properties">
        <section anchor="prop-priority" title="priority">
          <t>Type: <spanx style="verb">Int</spanx> (optional, default: 0).</t>

          <t>Specifies a priority for the calendar object. This may be used as part of scheduling systems to help resolve conflicts for a time period.</t>
          <t>The priority is specified as an integer in the range 0 to 9. A value of 0 specifies an undefined priority, for which the treatment will vary by situation. A value of 1 is the highest priority. A value of 2 is the second highest priority. Subsequent numbers specify a decreasing ordinal priority. A value of 9 is the lowest priority. Other integer values are reserved for future use.</t>
        </section>

        <section anchor="prop-freeBusyStatus" title="freeBusyStatus">
          <t>Type: <spanx style="verb">String</spanx> (optional, default: <spanx style="verb">busy</spanx>).</t>
          <t>Specifies how this calendar object should be treated when calculating free-busy state. This MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:

          <list style="symbols">
            <t><spanx style="verb">free</spanx>: The object should be ignored when calculating whether the user is busy.</t>

            <t><spanx style="verb">busy</spanx>: The object should be included when calculating whether the user is busy.</t>
          </list></t>
        </section>

        <section anchor="prop-privacy" title="privacy">
          <t>Type: <spanx style="verb">String</spanx> (optional, default: <spanx style="verb">public</spanx>).</t>

          <t>Calendar objects are normally collected together and may be shared with other users. The privacy property allows the object owner to indicate that it should not be shared, or should only have the time information shared but the details withheld. Enforcement of the restrictions indicated by this property are up to the API via which this object is accessed.</t>

          <t>This property MUST NOT affect the information sent to scheduled participants; it is only interpreted when the object is shared as part of a shared calendar.</t>

          <t>The value MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value. Any value the client or server doesn't understand should be preserved but treated as equivalent to <spanx style="verb">private</spanx>.

          <list style="symbols">
            <t><spanx style="verb">public</spanx>: The full details of the object are visible to those whom the object's calendar is shared with.</t>

            <t><spanx style="verb">private</spanx>: The details of the object are hidden; only the basic time and metadata is shared. The following properties MAY be shared, any other properties MUST NOT be shared:

            <list style="symbols">
              <t>@type</t>
              <t>created</t>
              <t>due</t>
              <t>duration</t>
              <t>estimatedDuration</t>
              <t>freeBusyStatus</t>
              <t>privacy</t>
              <t>recurrenceOverrides. Only patches which apply to another permissible property are allowed to be shared.</t>
              <t>sequence</t>
              <t>showWithoutTime</t>
              <t>start</t>
              <t>timeZone</t>
              <t>timeZones</t>
              <t>uid</t>
              <t>updated</t>
            </list></t>

            <t><spanx style="verb">secret</spanx>: The object is hidden completely (as though it did not exist) when the calendar this object is in is shared.</t>
          </list></t>
        </section>

        <section anchor="prop-replyTo" title="replyTo">
          <t>Type: <spanx style="verb">String[String]</spanx> (optional).</t>

          <t>Represents methods by which participants may submit their RSVP response to the organizer of the calendar object. The keys in the property value are the available methods and MUST only contain ASCII alphanumeric characters (A-Za-z0-9). The value is a URI for the method specified in the key. Future methods may be defined in future specifications and registered with IANA; a calendar client MUST ignore any method it does not understand, but MUST preserve the method key and URI. This property MUST be omitted if no method is defined (rather than being specified as an empty object).</t>

          <t>The following methods are defined:

          <list style="symbols">
            <t><spanx style="verb">imip</spanx>: The organizer accepts an iMIP <xref target="RFC6047" /> response at this email address. The value MUST be a <spanx style="verb">mailto:</spanx> URI.</t>

            <t><spanx style="verb">web</spanx>: Opening this URI in a web browser will provide the user with a page where they can submit a reply to the organizer.</t>

            <t><spanx style="verb">other</spanx>: The organizer is identified by this URI but the method for submitting the response is undefined.</t>
            </list></t>
        </section>

        <section anchor="prop-participants" title="participants">
          <t>Type: <spanx style="verb">Id[Participant]</spanx> (optional).</t>

          <t>A map of participant ids to participants, describing their participation in the calendar object.</t>

          <t>If this property is set and any participant has a sendTo property, then the <spanx style="verb">replyTo</spanx> property of this calendar object MUST define at least one reply method.</t>

          <t>A Participant object has the following properties:

          <list style="symbols">
            <t>@type: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            Specifies the type of this object. This MUST be <spanx style="verb">Participant</spanx>.</t>

            <t>name: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            The display name of the participant (e.g., "Joe Bloggs").</t>

            <t>email: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            The email address for the participant.</t>

            <t>description: <spanx style="verb">String</spanx> (optional).
            <vspace blankLines="1" />
            A plain text description of this participant. For example, this may include more information about their role in the event or how best to contact them.</t>

            <t>sendTo: <spanx style="verb">String[String]</spanx> (optional)
            <vspace blankLines="1" />
            Represents methods by which the participant may receive the invitation and updates to the calendar object.
            <vspace blankLines="1" />
            The keys in the property value are the available methods and MUST only contain ASCII alphanumeric characters (A-Za-z0-9). The value is a URI for the method specified in the key. Future methods may be defined in future specifications and registered with IANA; a calendar client MUST ignore any method it does not understand, but MUST preserve the method key and URI. This property MUST be omitted if no method is defined (rather than being specified as an empty object).
            <vspace blankLines="1" />
            The following methods are defined:
            <list style="symbols">
              <t><spanx style="verb">imip</spanx>: The participant accepts an iMIP <xref target="RFC6047" /> request at this email address. The value MUST be a <spanx style="verb">mailto:</spanx> URI. It MAY be different from the value of the participant's <spanx style="verb">email</spanx> property.</t>

              <t><spanx style="verb">other</spanx>: The participant is identified by this URI but the method for submitting the invitation is undefined.</t>
            </list></t>

            <t>kind: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            What kind of entity this participant is, if known.
            <vspace blankLines="1" />
            This MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value. Any value the client or server doesn't understand should be treated the same as if this property is omitted.

            <list style="symbols">
              <t><spanx style="verb">individual</spanx>: a single person</t>

              <t><spanx style="verb">group</spanx>: a collection of people invited as a whole</t>

              <t><spanx style="verb">location</spanx>: a physical location that needs to be scheduled, e.g., a conference room</t>

              <t><spanx style="verb">resource</spanx>: a non-human resource other than a location, such as a projector</t>
            </list></t>

            <t>roles: <spanx style="verb">String[Boolean]</spanx> (mandatory)
            <vspace blankLines="1" />
            A set of roles that this participant fulfills.
            <vspace blankLines="1" />
            At least one role MUST be specified for the participant. The keys in the set MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:

            <list style="symbols">
              <t><spanx style="verb">owner</spanx>: The participant is an owner of the object. This signifies they have permission to make changes to it that affect the other participants. Non-owner participants may only change properties that just affect themself (for example setting their own alerts or changing their rsvp status).</t>
              <t><spanx style="verb">attendee</spanx>: The participant is expected to attend.</t>
              <t><spanx style="verb">optional</spanx>: The participant is invited but not required.</t>
              <t><spanx style="verb">informational</spanx>: The participant is copied for informational reasons, and is not expected to attend.</t>
              <t><spanx style="verb">chair</spanx>: The participant is in charge of the event/task when it occurs.</t>
              <t><spanx style="verb">contact</spanx>: The participant is someone that may be contacted for information about the event.</t>
            </list>

            The value for each key in the set MUST be true. It is expected that no more than one of the roles "attendee", "optional", or "informational" be present; if more than one are given, "optional" takes precedence over "informational", and "attendee" takes precedence over both. Roles that are unknown to the implementation MUST be preserved.</t>

            <t>locationId: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            The location at which this participant is expected to be attending.
            <vspace blankLines="1" />
            If the value does not correspond to any location id in the
            <spanx style="verb">locations</spanx> property of the JSCalendar object, this MUST be treated the same as if the participant's locationId were omitted.</t>

            <t>language: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            The language tag as defined in <xref target="RFC5646" /> that best describes the participant's preferred language, if known.</t>

            <t>participationStatus: <spanx style="verb">String</spanx> (optional, default: <spanx style="verb">needs-action</spanx>)
            <vspace blankLines="1" />
            The participation status, if any, of this participant.
            <vspace blankLines="1" />
            The value MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:

            <list style="symbols">
              <t><spanx style="verb">needs-action</spanx>: No status yet set by the participant.</t>

              <t><spanx style="verb">accepted</spanx>: The invited participant will participate.</t>

              <t><spanx style="verb">declined</spanx>: The invited participant will not participate.</t>

              <t><spanx style="verb">tentative</spanx>: The invited participant may participate.</t>

              <t><spanx style="verb">delegated</spanx>: The invited participant has delegated their attendance to another participant, as specified in the delegatedTo property.</t>
            </list></t>

            <t>participationComment: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            A note from the participant to explain their participation status.</t>

            <t>expectReply: <spanx style="verb">Boolean</spanx> (optional, default: false)
            <vspace blankLines="1" />
            If true, the organizer is expecting the participant to notify them of their participation status.</t>

            <t>scheduleAgent: <spanx style="verb">String</spanx> (optional, default: <spanx style="verb">server</spanx>)
            <vspace blankLines="1" />
            Who is responsible for sending scheduling messages with this calendar object to the participant.
            <vspace blankLines="1" />
            The value MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:

            <list style="symbols">
              <t><spanx style="verb">server</spanx>: The calendar server will send the scheduling messages.</t>

              <t><spanx style="verb">client</spanx>: The calendar client will send the scheduling messages.</t>

              <t><spanx style="verb">none</spanx>: No scheduling messages are to be sent to this participant.</t>
            </list></t>

            <t>scheduleSequence: <spanx style="verb">UnsignedInt</spanx> (optional, default: 0)
            <vspace blankLines="1" />
            The sequence number of the last response from the participant. If defined, this MUST be a non-negative integer.
            <vspace blankLines="1" />
            This can be used to determine whether the participant has sent a new RSVP following significant changes to the calendar object, and to determine if future responses are responding to a current or older view of the data.</t>

            <t>scheduleUpdated: <spanx style="verb">UTCDateTime</spanx> (optional)
            <vspace blankLines="1" />
            The timestamp for the most recent response from this participant.
            <vspace blankLines="1" />
            This is the <spanx style="verb">updated</spanx> property of the last response when using iTIP. It can be compared to the <spanx style="verb">updated</spanx> property in future responses to detect and discard older responses delivered out of order.</t>

            <t>invitedBy: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            The participant id of the participant who invited this one, if known.</t>

            <t>delegatedTo: <spanx style="verb">String[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            A set of participant ids that this participant has delegated their participation to. Each key in the set MUST be the id of a participant. The value for each key in the set MUST be true. If there are no delegates, this MUST be omitted (rather than specified as an empty set).</t>

            <t>delegatedFrom: <spanx style="verb">String[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            A set of participant ids that this participant is acting as a delegate for. Each key in the set MUST be the id of a participant. The value for each key in the set MUST be true. If there are no delegators, this MUST be omitted (rather than specified as an empty set).</t>

            <t>memberOf: <spanx style="verb">String[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            A set of group participants that were invited to this calendar object, which caused this participant to be invited due to their membership in the group(s). Each key in the set MUST be the id of a participant. The value for each key in the set MUST be true. If there are no groups, this MUST be omitted (rather than specified as an empty set).</t>

            <t>linkIds: <spanx style="verb">String[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            A set of links to more information about this participant, for example in vCard format. The keys in the set MUST be the id of a Link object in the calendar object's <spanx style="verb">links</spanx> property. The value for each key in the set MUST be true. If there are no links, this MUST be omitted (rather than specified as an empty set).</t>

             <t>progress: <spanx style="verb">String</spanx> (optional; only allowed for participants of a JSTask). Represents the progress of the participant for this task. It MUST NOT be set if the <spanx style="verb">participationStatus</spanx> of this participant is any value other than <spanx style="verb">accepted</spanx>. See <xref target="prop-progress" /> for allowed values and semantics.</t>

            <t>progressUpdated: <spanx style="verb">UTCDateTime</spanx> (optional; only allowed for participants of a JSTask). Specifies the date-time the progress property was last set on this participant. See <xref target="prop-progressUpdated" /> for allowed values and semantics.</t>

            <t>percentComplete: <spanx style="verb">Number</spanx> (optional; only allowed for participants of a JSTask). Represents the percent completion of the participant for this task. The property value MUST be a positive integer between 0 and 100.</t>
          </list></t>
        </section>
      </section>

      <section anchor="alerts-properties" title="Alerts Properties">
        <section anchor="useDefaultAlerts" title="useDefaultAlerts">
          <t>Type: <spanx style="verb">Boolean</spanx> (optional, default: false).</t>

          <t>If true, use the user's default alerts and ignore the value of the <spanx style="verb">alerts</spanx> property. Fetching user defaults is dependent on the API from which this JSCalendar object is being fetched, and is not defined in this specification. If an implementation cannot determine the user's default alerts, or none are set, it MUST process the alerts property as if <spanx style="verb">useDefaultAlerts</spanx> is set to false.</t>
        </section>

        <section anchor="prop-alerts" title="alerts">
          <t>Type: <spanx style="verb">Id[Alert]</spanx> (optional).</t>

          <t>A map of alert ids to Alert objects, representing alerts/reminders to display or send to the user for this calendar object.</t>

          <t>An Alert Object has the following properties:

          <list style="symbols">
            <t>@type: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            Specifies the type of this object. This MUST be <spanx style="verb">Alert</spanx>.
            </t>
            <t>trigger: <spanx style="verb">OffsetTrigger|AbsoluteTrigger|UnknownTrigger</spanx> (mandatory)
            <vspace blankLines="1" />
            Defines when to trigger the alert. New types may be defined in future documents.
            <vspace blankLines="1" />
            An <spanx style="verb">OffsetTrigger</spanx> object has the following properties:
            <list style="symbols">
              <t>@type: <spanx style="verb">String</spanx> (mandatory)
              <vspace blankLines="1" />
              Specifies the type of this object. This MUST be <spanx style="verb">OffsetTrigger</spanx>.
              </t>
              <t>offset: <spanx style="verb">SignedDuration</spanx> (mandatory).
              <vspace blankLines="1" />
              Defines the offset at which to trigger the alert relative to the time property defined in the <spanx style="verb">relativeTo</spanx> property of the alert. Negative durations signify alerts before the time property, positive durations signify alerts after. If the calendar object does not define a time zone, the user's default time zone SHOULD be used when determining the offset, if known. Otherwise, the time zone to use is implementation specific.</t>

              <t>relativeTo: <spanx style="verb">String</spanx> (optional, default: <spanx style="verb">start</spanx>)
              <vspace blankLines="1" />
              Specifies the time property that the alert offset is relative to. The value MUST be one of:

              <list style="symbols">
                <t><spanx style="verb">start</spanx>: triggers the alert relative to the start of the calendar object</t>
                <t><spanx style="verb">end</spanx>: triggers the alert relative to the end/due time of the calendar object</t>
              </list></t>
            </list>

            An <spanx style="verb">AbsoluteTrigger</spanx> object has the following properties:
            <list style="symbols">
              <t>@type: <spanx style="verb">String</spanx> (mandatory)
              <vspace blankLines="1" />
              Specifies the type of this object. This MUST be <spanx style="verb">AbsoluteTrigger</spanx>.
              </t>
              <t>when: <spanx style="verb">UTCDateTime</spanx> (mandatory).
              <vspace blankLines="1" />
              Defines a specific UTC date-time when the alert is triggered.</t>
            </list>

            An <spanx style="verb">UnknownTrigger</spanx> object is an object that contains a <spanx style="verb">@type</spanx> property whose value is not recognized (i.e., not <spanx style="verb">OffsetTrigger</spanx> or <spanx style="verb">AbsoluteTrigger</spanx>), plus zero or more other properties. This is for compatibility with client extensions and future specifications. Implementations SHOULD NOT trigger for trigger types they do not understand, but MUST preserve them.</t>

            <t>acknowledged: <spanx style="verb">UTCDateTime</spanx> (optional)
            <vspace blankLines="1" />
            This records when an alert was last acknowledged. This is set when the user has dismissed the alert; other clients that sync this property SHOULD automatically dismiss or suppress duplicate alerts (alerts with the same alert id that triggered on or before this date-time).
            <vspace blankLines="1" />
            For a recurring calendar object, the <spanx style="verb">acknowledged</spanx> property of the parent object MUST be updated, unless the alert is already overridden in the <spanx style="verb">recurrenceOverrides</spanx> property.
            <vspace blankLines="1" />
            Certain kinds of alert action may not provide feedback as to when the user sees them, for example email based alerts. For those kinds of alerts, this property SHOULD be set immediately when the alert is triggered and the action successfully carried out.</t>

            <t>relatedTo: <spanx style="verb">String[Relation]</spanx> (optional)
            <vspace blankLines="1" />
            Relates this alert to other alerts in the same JSCalendar object. If the user wishes to snooze an alert, the application SHOULD create an alert to trigger after snoozing. All snooze alerts SHOULD set a relation to the identifier of the original alert. The Relation object SHOULD set the <spanx style="verb">parent</spanx> relation type.</t>

            <t>action: <spanx style="verb">String</spanx> (optional, default: <spanx style="verb">display</spanx>)
            <vspace blankLines="1" />
            Describes how to alert the user.
            <vspace blankLines="1" />
            The value MUST be at most one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:

            <list style="symbols">
              <t><spanx style="verb">display</spanx>: The alert should be displayed as appropriate for the current device and user context.</t>

              <t><spanx style="verb">email</spanx>: The alert should trigger an email sent out to the user, notifying about the alert. This action is typically only appropriate for server implementations.</t>
            </list></t>
          </list></t>
        </section>
      </section>

      <section anchor="localized-props" title="Multilingual Properties">
        <section anchor="prop-localizations" title="localizations">
          <t>Type: <spanx style="verb">String[PatchObject]</spanx> (optional).</t>

          <t>A map of language tags <xref target="RFC5646" /> to patch objects, which localize the calendar object into the locale of the respective language tag.</t>

          <t>See the description of <xref target="type-PatchObject">PatchObject</xref> for the structure of the PatchObject. The patches are applied to the top-level calendar object. In addition, the <spanx style="verb">locale</spanx> property of the patched object is set to the language tag. All pointers for patches MUST end with one of the following suffixes; any patch that does not follow this MUST be ignored unless otherwise specified in a future RFC:

          <list style="symbols">
            <t>title</t>
            <t>description</t>
            <t>name</t>
          </list>

          A patch MUST NOT have the prefix <spanx style="verb">recurrenceOverrides</spanx>; any localization of the override MUST be a patch to the localizations property inside the override instead.

          For example, a patch to <spanx style="verb">locations/abcd1234/title</spanx> is permissible, but a patch to <spanx style="verb">uid</spanx> or <spanx style="verb">recurrenceOverrides/2018-01-05T14:00:00/title</spanx> is not.</t>

          <t>Note that this specification does not define how to maintain validity of localized content. For example, a client application changing a JSCalendar object's title property might also need to update any localizations of this property. Client implementations SHOULD provide the means to manage localizations, but how to achieve this is specific to the application's workflow and requirements.</t>
        </section>
      </section>

      <section anchor="timezone-props" title="Time Zone Properties">
        <section anchor="prop-timeZone" title="timeZone">
          <t>Type: <spanx style="verb">String|null</spanx> (optional, default: null).</t>

          <t>Identifies the time zone the object is scheduled in, or null for floating time. This is either a name from the IANA Time Zone Database <xref target="TZDB" /> or the id of a custom time zone from the <spanx style="verb">timeZones</spanx> property (see <xref target="timezones" />). If omitted, this MUST be presumed to be null (i.e., floating time).</t>
        </section>

        <section anchor="prop-timeZones" title="timeZones">
          <t>Type: <spanx style="verb">String[TimeZone]</spanx> (optional).</t>

          <t>Maps identifiers of custom time zones to their time zone definitions. The following restrictions apply for each key in the map:

          <list style="symbols">
            <t>It MUST start with the <spanx style="verb">/</spanx> character (ASCII decimal 47; also see Sections 3.2.19 of <xref target="RFC5545" /> and 3.6. of <xref target="RFC7808" /> for discussion of the forward slash character in time zone identifiers).</t>

            <t>It MUST be a valid <spanx style="verb">paramtext</spanx> value as specified in Section 3.1. of <xref target="RFC5545" />.</t>

            <t>At least one other property in the same JSCalendar object MUST reference a time zone using this identifier (i.e., orphaned time zones are not allowed).</t>
          </list>

          An identifier need only be unique to this JSCalendar object. A JSCalendar object may be part in a hierarchy of other JSCalendar objects (say, a JSEvent is an entry in a JSGroup). In this case, the set of time zones is the sum of the time zone definitions of this object and its parent objects. If multiple time zones with the same identifier exist, then the definition closest to the calendar object in relation to its parents MUST be used. (In context of JSEvent, a time zone definition in its timeZones property has precedence over a definition of the same id in the JSGroup). Time zone definitions in any children of the calendar object MUST be ignored. </t>

          <t>A TimeZone object maps a VTIMEZONE component from iCalendar <xref target="RFC5545" /> and the semantics are as defined there. A valid time zone MUST define at least one transition rule in the <spanx style="verb">standard</spanx> or <spanx style="verb">daylight</spanx> property. Its properties are:

          <list style="symbols">
            <t>@type: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            Specifies the type of this object. This MUST be <spanx style="verb">TimeZone</spanx>.
            </t>
            <t>tzId: <spanx style="verb">String</spanx> (mandatory).
            <vspace blankLines="1" />
            The TZID property from iCalendar.</t>

            <t>lastModified: <spanx style="verb">UTCDateTime</spanx> (optional)
            <vspace blankLines="1" />
            The LAST-MODIFIED property from iCalendar.</t>

            <t>url: <spanx style="verb">String</spanx> (optional)
            <vspace blankLines="1" />
            The TZURL property from iCalendar.</t>

            <t>validUntil: <spanx style="verb">UTCDateTime</spanx> (optional)
            <vspace blankLines="1" />
            The TZUNTIL property from iCalendar specified in <xref target="RFC7808" />.</t>

            <t>aliases: <spanx style="verb">String[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            Maps the TZID-ALIAS-OF properties from iCalendar specified in <xref target="RFC7808" /> to a JSON set of aliases. The set is represented as an object, with the keys being the aliases. The value for each key in the set MUST be true.</t>

            <t>standard: <spanx style="verb">TimeZoneRule[]</spanx> (optional)
            <vspace blankLines="1" />
            The STANDARD sub-components from iCalendar. The order MUST be preserved during conversion.</t>

            <t>daylight: <spanx style="verb">TimeZoneRule[]</spanx> (optional).
            <vspace blankLines="1" />
            The DAYLIGHT sub-components from iCalendar. The order MUST be preserved during conversion.</t>
          </list></t>

          <t>A TimeZoneRule object maps a STANDARD or DAYLIGHT sub-component from iCalendar, with the restriction that at most one recurrence rule is allowed per rule. It has the following properties:

          <list style="symbols">
            <t>@type: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            Specifies the type of this object. This MUST be <spanx style="verb">TimeZoneRule</spanx>.
            </t>
            <t>start: <spanx style="verb">LocalDateTime</spanx> (mandatory)
            <vspace blankLines="1" />
            The DTSTART property from iCalendar.</t>

            <t>offsetTo: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            The TZOFFSETTO property from iCalendar.</t>

            <t>offsetFrom: <spanx style="verb">String</spanx> (mandatory)
            <vspace blankLines="1" />
            The TZOFFSETFROM property from iCalendar.</t>

            <t>recurrenceRule: <spanx style="verb">RecurrenceRule</spanx> (optional)
            <vspace blankLines="1" />
            The RRULE property mapped as specified in <xref target="prop-recurrenceRules" />. During recurrence rule evaluation, the <spanx style="verb">until</spanx> property value MUST be interpreted as a local time in the UTC time zone.</t>

            <t>recurrenceDates: <spanx style="verb">LocalDateTime[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            Maps the RDATE properties from iCalendar to a JSON set. The set is represented as an object, with the keys being the recurrence dates. The value for each key in the set MUST be true.</t>

            <t>names: <spanx style="verb">String[Boolean]</spanx> (optional)
            <vspace blankLines="1" />
            Maps the TZNAME properties from iCalendar to a JSON set. The set is represented as an object, with the keys being the names. The value for each key in the set MUST be true.</t>

            <t>comments: <spanx style="verb">String[]</spanx> (optional). Maps the COMMENT properties from iCalendar. The order MUST be preserved during conversion.</t>
          </list></t>
        </section>
      </section>
    </section>

    <section anchor="jscalendar-object-props" title="Type-specific JSCalendar Properties">
      <section anchor="jsevent-props" title="JSEvent Properties">
        <t>In addition to the common JSCalendar object <xref target="jscalendar-props">properties</xref> a JSEvent has the following properties:</t>

        <section anchor="prop-start-jsevent" title="start">
          <t>Type: <spanx style="verb">LocalDateTime</spanx> (mandatory).</t>

          <t>The date/time the event starts in the event's time zone (as specified in the <spanx style="verb">timeZone</spanx> property, see <xref target="prop-timeZone" />).</t>
        </section>

        <section anchor="prop-duration" title="duration">
          <t>Type: <spanx style="verb">Duration</spanx> (optional, default: <spanx style="verb">PT0S</spanx>).</t>

          <t>The zero or positive duration of the event in the event's start time zone.</t>

          <t>Note that a duration specified using weeks or days does not always correspond to an exact multiple of 24 hours. The number of hours/minutes/seconds may vary if it overlaps a period of discontinuity in the event's time zone, for example a change from standard time to daylight-savings time. Leap seconds MUST NOT be considered when computing an exact duration. When computing an exact duration, the greatest order time components MUST be added first, that is, the number of days MUST be added first, followed by the number of hours, number of minutes, and number of seconds. Fractional seconds MUST be added last. These semantics match the iCalendar DURATION value type (<xref target="RFC5545" />, Section 3.3.6).</t>

          <t>A JSEvent MAY involve start and end locations that are in different time zones (e.g., a trans-continental flight). This can be expressed using the <spanx style="verb">relativeTo</spanx> and <spanx style="verb">timeZone</spanx> properties of the JSEvent's Location objects (see <xref target="prop-locations" />).</t>
        </section>

        <section anchor="prop-status-jsevent" title="status">
          <t>Type: <spanx style="verb">String</spanx> (optional, default: <spanx style="verb">confirmed</spanx>).</t>

          <t>The scheduling status (<xref target="sharing-scheduling-properties" />) of a JSEvent. If set, it MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:

          <list style="symbols">
            <t><spanx style="verb">confirmed</spanx>: Indicates the event is definitely happening.</t>
            <t><spanx style="verb">cancelled</spanx>: Indicates the event has been cancelled.</t>
            <t><spanx style="verb">tentative</spanx>: Indicates the event may happen.</t>
          </list></t>
        </section>
      </section>

      <section anchor="jstask-props" title="JSTask Properties">
        <t>In addition to the common JSCalendar object <xref target="jscalendar-props">properties</xref> a JSTask has the following properties:</t>

        <section anchor="prop-due" title="due">
          <t>Type: <spanx style="verb">LocalDateTime</spanx> (optional).</t>

          <t>The date/time the task is due in the task's time zone.</t>
        </section>

        <section anchor="prop-start-jstask" title="start">
          <t>Type: <spanx style="verb">LocalDateTime</spanx> (optional).</t>

          <t>The date/time the task should start in the task's time zone.</t>
        </section>

        <section anchor="prop-estimatedDuration" title="estimatedDuration">
          <t>Type: <spanx style="verb">Duration</spanx> (optional).</t>

          <t>Specifies the estimated positive duration of time the task takes to complete.</t>
        </section>

        <section anchor="prop-progress" title="progress">
          <t>Type: <spanx style="verb">String</spanx> (optional).</t>

          <t>Defines the progress of this task. If omitted, the default progress (<xref target="sharing-scheduling-properties" />) of a JSTask is defined as follows (in order of evaluation):

          <list style="symbols">
            <t><spanx style="verb">completed</spanx>: if the <spanx style="verb">progress</spanx> property value of all participants is
              <spanx style="verb">completed</spanx>.</t>
            <t><spanx style="verb">failed</spanx>: if at least one <spanx style="verb">progress</spanx> property value of a participant is <spanx style="verb">failed</spanx>.</t>
            <t><spanx style="verb">in-process</spanx>: if at least one <spanx style="verb">progress</spanx> property value of a participant is <spanx style="verb">in-process</spanx>.</t>
            <t><spanx style="verb">needs-action</spanx>: If none of the other criteria match.</t>
          </list></t>

          <t>If set, it MUST be one of the following values, a value registered in the IANA JSCalendar Enum Registry, or a vendor-specific value:

          <list style="symbols">
            <t><spanx style="verb">needs-action</spanx>: Indicates the task needs action.</t>
            <t><spanx style="verb">in-process</spanx>: Indicates the task is in process.</t>
            <t><spanx style="verb">completed</spanx>: Indicates the task is completed.</t>
            <t><spanx style="verb">failed</spanx>: Indicates the task failed.</t>
            <t><spanx style="verb">cancelled</spanx>: Indicates the task was cancelled.</t>
          </list></t>
        </section>

        <section anchor="prop-progressUpdated" title="progressUpdated">
          <t>Type: <spanx style="verb">UTCDateTime</spanx> (optional).</t>

          <t>Specifies the date/time the <spanx style="verb">progress</spanx> property of either the task overall (<xref target="prop-progress" />) or a specific participant (<xref target="prop-participants" />) was last updated.</t>

          <t>If the task is recurring and has future instances, a client may want to keep track of the last progress update timestamp of a specific task recurrence, but leave other instances unchanged. One way to achieve this is by overriding the progressUpdated property in the task <spanx style="verb">recurrenceOverrides</spanx> property. However, this could produce a long list of timestamps for regularly recurring tasks. An alternative approach is to split the JSTask into a current, single instance of JSTask with this instance progress update time and a future recurring instance. See also <xref target="prop-relatedTo" /> on splitting.</t>
        </section>
      </section>

      <section anchor="jsgroup-props" title="JSGroup Properties">
        <t>JSGroup supports the following common <xref target="jscalendar-props">JSCalendar properties</xref>:
        <list style="symbols">
          <t>@type</t>
          <t>categories</t>
          <t>color</t>
          <t>created</t>
          <t>description</t>
          <t>descriptionContentType</t>
          <t>keywords</t>
          <t>links</t>
          <t>locale</t>
          <t>prodId</t>
          <t>timeZones</t>
          <t>title</t>
          <t>updated</t>
          <t>uid</t>
        </list>

        In addition, the following JSGroup-specific properties are supported:</t>

        <section anchor="prop-entries" title="entries">
          <t>Type: <spanx style="verb">(JSTask|JSEvent)[]</spanx> (mandatory).</t>

          <t>A collection of group members. Implementations MUST ignore entries of unknown type.</t>
        </section>

        <section anchor="prop-source" title="source">
          <t>Type: <spanx style="verb">String</spanx> (optional).</t>

          <t>The source from which updated versions of this group may be retrieved from. The value MUST be a URI.</t>
        </section>
      </section>
    </section>

    <section anchor="examples" title="Examples">
      <t>The following examples illustrate several aspects of the JSCalendar data model and format. The examples may omit mandatory or additional properties, which is indicated by a placeholder property with key <spanx style="verb">...</spanx>. While most of the examples use calendar event objects, they are also illustrative for tasks.</t>
      <!-- EXAMPLES START -->
<section anchor="example-simple-event" title="Simple event">
    <t>
    This example illustrates a simple one-time event. It specifies a one-time event that begins on January 15, 2018 at 1pm New York local time and ends after 1 hour.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "@type": "jsevent",
  "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f1",
  "updated": "2018-01-15T18:00:00Z",
  "title": "Some event",
  "start": "2018-01-15T13:00:00",
  "timeZone": "America/New_York",
  "duration": "PT1H"
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-simple-task" title="Simple task">
    <t>
    This example illustrates a simple task for a plain to-do item.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "@type": "jstask",
  "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f2",
  "updated": "2018-01-15T18:00:00Z",
  "title": "Do something"
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-simple-group" title="Simple group">
    <t>
    This example illustrates a simple calendar object group that contains an event and a task.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "@type": "jsgroup",
  "uid": "2a358cee-6489-4f14-a57f-c104db4dc343",
  "updated": "2018-01-15T18:00:00Z",
  "name": "A simple group",
  "entries": [{
    "@type": "jsevent",
    "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f1",
    "updated": "2018-01-15T18:00:00Z",
    "title": "Some event",
    "start": "2018-01-15T13:00:00",
    "timeZone": "America/New_York",
    "duration": "PT1H"
  },
  "2a358cee-6489-4f14-a57f-c104db4dc2f2": {
    "@type": "jstask",
    "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f2",
    "updated": "2018-01-15T18:00:00Z",
    "title": "Do something"
  }]
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-all-day-event" title="All-day event">
    <t>
    This example illustrates an event for an international holiday. It specifies an all-day event on April 1 that occurs every year since the year 1900.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "April Fool's Day",
  "showWithoutTime": true,
  "start": "1900-04-01T00:00:00",
  "duration": "P1D",
  "recurrenceRules": [{
    "@type": "RecurrenceRule",
    "frequency": "yearly"
  }]
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-due-task" title="Task with a due date">
    <t>
    This example illustrates a task with a due date. It is a reminder to buy groceries before 6pm Vienna local time on January 19, 2018. The calendar user expects to need 1 hour for shopping.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Buy groceries",
  "due": "2018-01-19T18:00:00",
  "timeZone": "Europe/Vienna",
  "estimatedDuration": "PT1H"
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-zoned-event-endtz" title="Event with end time-zone">
    <t>
    This example illustrates the use of end time-zones by use of an international flight. The flight starts on April 1, 2018 at 9am in Berlin local time. The duration of the flight is scheduled at 10 hours 30 minutes. The time at the flights destination is in the same time-zone as Tokyo. Calendar clients could use the end time-zone to display the arrival time in Tokyo local time and highlight the time-zone difference of the flight. The location names can serve as input for navigation systems.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Flight XY51 to Tokyo",
  "start": "2018-04-01T09:00:00",
  "timeZone": "Europe/Berlin",
  "duration": "PT10H30M",
  "locations": {
    "2a358cee-6489-4f14-a57f-c104db4dc2f1": {
      "@type": "Location",
      "rel": "start",
      "name": "Frankfurt Airport (FRA)"
    },
    "c2c7ac67-dc13-411e-a7d4-0780fb61fb08": {
      "@type": "Location",
      "rel": "end",
      "name": "Narita International Airport (NRT)",
      "timeZone": "Asia/Tokyo"
    }
  }
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-floating-event" title="Floating-time event (with recurrence)">
    <t>
    This example illustrates the use of floating-time. Since January 1, 2018, a calendar user blocks 30 minutes every day to practice Yoga at 7am local time, in whatever time-zone the user is located on that date.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Yoga",
  "start": "2018-01-01T07:00:00",
  "duration": "PT30M",
  "recurrenceRules": [{
    "@type": "RecurrenceRule",
    "frequency": "daily"
  }]
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-multi-location-event" title="Event with multiple locations and localization">
    <t>
    This example illustrates an event that happens at both a physical and a virtual location. Fans can see a live concert on premises or online. The event title and descriptions are localized.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Live from Music Bowl: The Band",
  "description": "Go see the biggest music event ever!",
  "locale": "en",
  "start": "2018-07-04T17:00:00",
  "timeZone": "America/New_York",
  "duration": "PT3H",
  "locations": {
    "c0503d30-8c50-4372-87b5-7657e8e0fedd": {
      "@type": "Location",
      "name": "The Music Bowl",
      "description": "Music Bowl, Central Park, New York",
      "coordinates": "geo:40.7829,-73.9654"
    }
  },
  "virtualLocations": {
    "6f3696c6-1e07-47d0-9ce1-f50014b0041a": {
      "@type": "VirtualLocation",
      "name": "Free live Stream from Music Bowl",
      "uri": "https://stream.example.com/the_band_2018"
    }
  },
  "localizations": {
    "de": {
      "title": "Live von der Music Bowl: The Band!",
      "description": "Schau dir das grÃ¶ÃŸte Musikereignis an!",
      "virtualLocations/6f3696c6-1e07-47d0-9ce1-f50014b0041a/name":
                              "Gratis Live-Stream aus der Music Bowl"
    }
  }
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-recurring-overrides" title="Recurring event with overrides">
    <t>
    This example illustrates the use of recurrence overrides. A math course at a University is held for the first time on January 8, 2018 at 9am London time and occurs every week until June 25, 2018. Each lecture lasts for one hour and 30 minutes and is located at the Mathematics department. This event has exceptional occurrences: at the last occurrence of the course is an exam, which lasts for 2 hours and starts at 10am. Also, the location of the exam differs from the usual location. On April 2 no course is held. On January 5 at 2pm is an optional introduction course, that occurs before the first regular lecture.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Calculus I",
  "start": "2018-01-08T09:00:00",
  "timeZone": "Europe/London",
  "duration": "PT1H30M",
  "locations": {
    "2a358cee-6489-4f14-a57f-c104db4dc2f1": {
      "@type": "Location",
      "title": "Math lab room 1",
      "description": "Math Lab I, Department of Mathematics"
    }
  },
  "recurrenceRules": [{
    "@type": "RecurrenceRule",
    "frequency": "weekly",
    "until": "2018-06-25T09:00:00"
  }],
  "recurrenceOverrides": {
    "2018-01-05T14:00:00": {
      "title": "Introduction to Calculus I (optional)"
    },
    "2018-04-02T09:00:00": {
      "excluded": "true"
    },
    "2018-06-25T09:00:00": {
      "title": "Calculus I Exam",
      "start": "2018-06-25T10:00:00",
      "duration": "PT2H",
      "locations": {
        "2a358cee-6489-4f14-a57f-c104db4dc2f1": {
          "@type": "Location",
          "title": "Big Auditorium",
          "description": "Big Auditorium, Other Road"
        }
      }
    }
  }
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-recurring-participants" title="Recurring event with participants">
    <t>
    This example illustrates scheduled events. A team meeting occurs every week since January 8, 2018 at 9am Johannesburg time. The event owner also chairs the event. Participants meet in a virtual meeting room. An attendee has accepted the invitation, but on March 8, 2018 he is unavailable and declined participation for this occurrence.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "FooBar team meeting",
  "start": "2018-01-08T09:00:00",
  "timeZone": "Africa/Johannesburg",
  "duration": "PT1H",
  "virtualLocations": {
    "2a358cee-6489-4f14-a57f-c104db4dc2f1": {
      "@type": "VirtualLocation",
      "name": "ChatMe meeting room",
      "uri": "https://chatme.example.com?id=1234567"
    }
  },
  "recurrenceRules": [{
    "@type": "RecurrenceRule",
    "frequency": "weekly"
  }],
  "replyTo": {
    "imip": "mailto:6489-4f14-a57f-c1@schedule.example.com"
  },
  "participants": {
    "dG9tQGZvb2Jhci5xlLmNvbQ": {
      "@type": "Participant",
      "name": "Tom Tool",
      "email": "tom@foobar.example.com",
      "sendTo": {
        "imip": "mailto:6489-4f14-a57f-c1@calendar.example.com"
      },
      "participationStatus": "accepted",
      "roles": {
        "attendee": true
      }
    },
    "em9lQGZvb2GFtcGxlLmNvbQ": {
      "@type": "Participant",
      "name": "Zoe Zelda",
      "email": "zoe@foobar.example.com",
      "sendTo": {
        "imip": "mailto:zoe@foobar.example.com"
      },
      "participationStatus": "accepted",
      "roles": {
        "owner": true,
        "attendee": true,
        "chair": true
      }
    },
    "...": ""
  },
  "recurrenceOverrides": {
    "2018-03-08T09:00:00": {
      "participants/dG9tQGZvb2Jhci5xlLmNvbQ/participationStatus":
                                                          "declined"
    }
  }
}
          ]]></artwork>
    </figure>
</section>
      <!-- EXAMPLES END -->
    </section>

    <section anchor="security-considerations" title="Security Considerations">
      <t>Calendaring and scheduling information is very privacy-sensitive. Its transmission must be done carefully to protect it from possible threats, such as eavesdropping, replay, message insertion, deletion, modification, and man-in-the-middle attacks.</t>

      <t>The data being stored and transmitted may be used in systems with real world consequences. For example, a home automation system may turn an alarm on and off. Or a coworking space may charge money to the organiser of an event that books one of their meeting rooms. Such systems must be careful to authenticate all data they receive to prevent them from being subverted.</t>

      <t>This document just defines the data format; such considerations are primarily the concern of the API or method of storage and transmission of such files.</t>

      <section anchor="sec-recurrences" title="Expanding Recurrences">
        <t>A recurrence rule may produce infinite occurrences of an event. Implementations MUST handle expansions carefully to prevent accidental or deliberate resource exhaustion.</t>
        <t>Conversely, a recurrence rule may be specified that does not expand to anything. It is not always possible to tell this through static analysis of the rule, so implementations MUST be careful to avoid getting stuck in infinite loops, or otherwise exhausting resources while searching for the next occurrence.</t>
      </section>

      <section anchor="json-parsing" title="JSON Parsing">
        <t>The Security Considerations of <xref target="RFC8259"/> apply to the use of JSON as the data interchange format.
        </t>

        <t>As for any serialization format, parsers need to thoroughly check the syntax of the supplied data. JSON uses opening and closing tags for several types and structures, and it is possible that the end of the supplied data will be reached when scanning for a matching closing tag; this is an error condition, and implementations need to stop scanning at the end of the supplied data.</t>

        <t>JSON also uses a string encoding with some escape sequences to encode special characters within a string. Care is needed when processing these escape sequences to ensure that they are fully formed before the special processing is triggered, with special care taken when the escape sequences appear adjacent to other (non-escaped) special characters or adjacent to the end of data (as in the previous paragraph).</t>

        <t>If parsing JSON into a non-textual structured data format, implementations may need to allocate storage to hold JSON string elements.  Since JSON does not use explicit string lengths, the risk of denial of service due to resource exhaustion is small, but implementations may still wish to place limits on the size of allocations they are willing to make in any given context, to avoid untrusted data causing excessive memory allocation.</t>
      </section>

      <section anchor="uri-values" title="URI Values">
        <t>Several JSCalendar properties contain URIs as values, and processing these properties requires extra care. Section 7 of <xref target="RFC3986" /> discusses security risks related to URIs.</t>
        <t>A maliciously constructed JSCalendar object may contain a very large number of URIs. In the case of published calendars with a large number of subscribers, such objects could be widely distributed. Implementations should be careful to limit the automatic fetching of linked resources to reduce the risk of this being an amplification vector for a denial-of-service attack.</t>
      </section>

      <section anchor="spam" title="Spam">
        <t>Calendar systems may receive JSCalendar files from untrusted sources, in particular as attachments to emails. This can be a vector for an attacker to inject spam into a user's calendar. This may confuse, annoy, and mislead users, or overwhelm their calendar with bogus events, preventing them from seeing legitimate ones.</t>
        <t>Heuristic, statistical or machine-learning-based filters can be effective in filtering out spam. Authentication mechanisms such as DKIM <xref target="RFC6376" /> can help establish the source of messages and associate the data with existing relationships (such as an address book contact). Misclassifications are always possible however, and providing a feedback mechanism for users to quickly correct this is advised.</t>
      </section>

      <section anchor="duplication" title="Duplication">
        <t>It is important for calendar systems to maintain the UID of an event when updating it to avoid unexpected duplication of events. When the UID changes, consumers of the data may not remove the previous version of the event if it has a different UID. This can lead to a confusing situation for the user, with many variations of the event and no indication of which one is correct. Care must be taken by consumers of the data to remove old events where possible to avoid an accidental denial-of-service attack due to the volume of data.</t>
      </section>

      <section anchor="timezonesec" title="Time Zones">
        <t>Events recur in a particular time zone. When this differs from the user's current time zone, it may unexpectedly cause an occurrence to shift in time for that user due to a daylight savings change in the event's time zone. A maliciously crafted event could attempt to confuse users with such an event to ensure a meeting is missed.</t>
      </section>
    </section>

<section anchor="iana-considerations" title="IANA Considerations">
<section anchor="iana-mime-type" title="Media Type Registration">

  <t>This document defines a media type for use with JSCalendar data formatted in JSON.</t>

  <t><list style="hanging">
    <t hangText="Type name:">application</t>
    <t hangText="Subtype name:">jscalendar+json</t>
    <t hangText="Required parameters:">type
        <vspace blankLines="1" />
        The <spanx style="verb">type</spanx> parameter conveys the type of the JSCalendar data in the body part, with the value being one of <spanx style="verb">jsevent</spanx>, <spanx style="verb">jstask</spanx>, or <spanx style="verb">jsgroup</spanx>. The parameter MUST NOT occur more than once. It MUST match the value of the <spanx style="verb">@type</spanx> property of the JSON-formatted JSCalendar object in the body.</t>
    <t hangText="Optional parameters:">none</t>
    <t hangText="Encoding considerations:">
        Same as encoding considerations of application/json as specified in <xref target="RFC8259">RFC8529, Section 11</xref>.</t>
    <t hangText="Security considerations:"> See <xref target="security-considerations" /> of this document.</t>
    <t hangText="Interoperability considerations:">This media type provides an alternative to iCalendar, jCal and proprietary JSON-based calendaring data formats.</t>
    <t hangText="Published specification:">This specification.</t>
    <t hangText="Applications that use this media type:">Applications that currently make use of the text/calendar and application/calendar+json media types can use this as an alternative. Similarly, applications that use the application/json media type to transfer calendaring data can use this to further specify the content.</t>
    <t hangText="Fragment identifier considerations:">N/A</t>
    <t hangText="Additional information:">
        <list style="hanging">
            <t hangText="Magic number(s):">N/A</t>
            <t hangText="File extensions(s):">N/A</t>
            <t hangText="Macintosh file type code(s):">N/A</t>
        </list>
    </t>
    <t hangText="Person &amp; email address to contact for further information:">calsify@ietf.org</t>
    <t hangText="Intended usage:">COMMON</t>
    <t hangText="Restrictions on usage:">N/A</t>
    <t hangText="Author:">See the "Author's Address" section of this document.</t>
    <t hangText="Change controller:">IETF</t>
  </list></t>
</section>

<section anchor="iana-property-registry" title='Creation of "JSCalendar Properties" Registry'>
  <t>The IANA will create the "JSCalendar Properties" registry to allow interoperability of extensions to JSCalendar objects.</t>

  <t>This registry follows the Expert Review process (<xref target="RFC8126"/>, Section 4.5). If the &quot;intended use&quot; field is <spanx style="verb">common</spanx>, sufficient documentation is required to enable interoperability. Preliminary community review for this registry is optional but strongly encouraged.</t>

  <t>A registration can have an intended use of <spanx style="verb">common</spanx>, <spanx style="verb">reserved</spanx>, or <spanx style="verb">obsolete</spanx>. The IANA will list common-use registrations prominently and separately from those with other intended use values.</t>

  <t>A <spanx style="verb">reserved</spanx> registration reserves a property name without assigning semantics to avoid name collisions with future extensions or protocol use.</t>

  <t>An <spanx style="verb">obsolete</spanx> registration denotes a property that is no longer expected to be added by up-to-date systems. A new property has probably been defined covering the obsolete property's semantics.</t>

  <t>The JSCalendar property registration procedure is not a formal standards process but rather an administrative procedure intended to allow community comment and sanity checking without excessive time delay. It is designed to encourage vendors to document and register new properties they add for use cases not covered by the original standard, leading to increased interoperability.</t>

  <section anchor="iana-property-registry-preliminary-community-review" title="Preliminary Community Review">
    <t>Notice of a potential new registration SHOULD be sent to the Calext mailing list &lt;calsify@ietf.org&gt; for review. This mailing list is appropriate to solicit community feedback on a proposed new property.</t>

    <t>Properties registrations must be marked with their intended use: "common", "reserved" or "obsolete".</t>

    <t>The intent of the public posting to this list is to solicit comments and feedback on the choice of the property name, the unambiguity of the specification document, and a review of any interoperability or security considerations. The submitter may submit a revised registration proposal or abandon the registration completely at any time.</t>
  </section>

  <section anchor="iana-property-registry-submit-request-to-iana" title="Submit Request to IANA">
    <t>Registration requests can be sent to &lt;iana@iana.org&gt;.</t>
  </section>

  <section anchor="iana-property-registry-designated-expert-review" title="Designated Expert Review">
    <t>The primary concern of the designated expert (DE) is preventing name collisions and encouraging the submitter to document security and privacy considerations. For a common-use registration, the DE is expected to confirm that suitable documentation, as described in Section 4.6 of <xref target="RFC8126"/>, is available to ensure interoperability. That documentation will usually be in an RFC, but simple definitions are likely to use a web/wiki page, and if a sentence or two is deemed sufficient it could be described in the registry itself. The DE should also verify that the property name does not conflict with work that is active or already published within the IETF. A published specification is not required for reserved or obsolete registrations.</t>

    <t>The DE will either approve or deny the registration request and publish a notice of the decision to the Calext WG mailing list or its successor, as well as inform IANA. A denial notice must be justified by an explanation, and, in the cases where it is possible, concrete suggestions on how the request can be modified so as to become acceptable should be provided.</t>
  </section>

  <section anchor="iana-property-registry-change-procedures" title="Change Procedures">
    <t>Once a JSCalendar property has been published by the IANA, the change controller may request a change to its definition. The same procedure that would be appropriate for the original registration request is used to process a change request.</t>

    <t>JSCalendar property registrations may not be deleted; properties that are no longer believed appropriate for use can be declared obsolete by a change to their &quot;intended use&quot; field; such properties will be clearly marked in the lists published by the IANA.</t>

    <t>Significant changes to a JSCalendar property's definition should be requested only when there are serious omissions or errors in the published specification, as such changes may cause interoperability issues. When review is required, a change request may be denied if it renders entities that were valid under the previous definition invalid under the new definition.</t>

    <t>The owner of a JSCalendar property may pass responsibility to another person or agency by informing the IANA; this can be done without discussion or review.</t>
  </section>

  <section anchor="iana-property-registry-template" title="JSCalendar Properties Registry Template">
    <t><list style="symbols">
      <t>Property Name: The name of the property. The property name MUST NOT already be registered for any of the object types listed in the "Property Context" field of this registration. Other object types MAY already have registered a different property with the same name.</t>
      <t>Property Type: The type of this property, using type signatures as specified in <xref target="type-signatures"/>. The property type MUST be registed in the Type Registry.</t>
      <t>Property Context: A comma-separated list of JSCalendar object types this property is allowed on.</t>
      <t>Reference or Description: A brief description or RFC number and section reference where the property is specified (omitted for "reserved" property names).</t>
      <t>Intended Use: Common, reserved, or obsolete.</t>
      <t>Change Controller: (<spanx style="verb">IETF</spanx> for IETF-stream RFCs).</t>
  </list></t>
  </section>

  <section anchor="iana-property-registry-contents" title="Initial Contents for the JSCalendar Properties Registry">
    <t>The following table lists the initial entries of the JSCalendar Properties registry. All properties are for common-use. All RFC section references are for this document. The change controller for all these properties is "IETF".</t>

    <texttable anchor="table-iana-property-registry">
      <ttcol align='left'>Property Name</ttcol>
      <ttcol align='left'>Property Type</ttcol>
      <ttcol align='left'>Property Context</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>

      <c>@type</c>
      <c>String</c>
      <c>JSEvent, JSTask, JSGroup, AbsoluteTrigger, Alert, Link, Location, OffsetTrigger, Participant, RecurrenceRule, Relation, TimeZone, VirtualLocation</c>
      <c><xref target="prop-type"/>, <xref target="prop-alerts"/>, <xref target="prop-links"/>, <xref target="prop-locations"/>, <xref target="prop-participants"/>, <xref target="prop-recurrenceRules"/>, <xref target="prop-relatedTo"/>, <xref target="prop-timeZones"/>, <xref target="prop-virtualLocations"/></c>

      <c>acknowledged</c>
      <c>UTCDateTime</c>
      <c>Alert</c>
      <c><xref target="prop-alerts"/></c>

      <c>action</c>
      <c>String</c>
      <c>Alert</c>
      <c><xref target="prop-alerts"/></c>

      <c>alerts</c>
      <c>Id[Alert]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-alerts"/></c>

      <c>byDay</c>
      <c>NDay[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>byHour</c>
      <c>UnsignedInt[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>byMinute</c>
      <c>UnsignedInt[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>byMonth</c>
      <c>String[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>byMonthDay</c>
      <c>Int[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>bySecond</c>
      <c>UnsignedInt[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>bySetPosition</c>
      <c>Int[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>byWeekNo</c>
      <c>Int[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>byYearDay</c>
      <c>Int[]</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>categories</c>
      <c>String[Boolean]</c>
      <c>JSEvent, JSTask, JSGroup</c>
      <c><xref target="prop-categories"/></c>

      <c>cid</c>
      <c>String</c>
      <c>Link</c>
      <c><xref target="prop-links"/></c>

      <c>color</c>
      <c>String</c>
      <c>JSEvent, JSTask, JSGroup</c>
      <c><xref target="prop-color"/></c>

      <c>contentType</c>
      <c>String</c>
      <c>Link</c>
      <c><xref target="prop-links"/></c>

      <c>coordinates</c>
      <c>String</c>
      <c>Location</c>
      <c><xref target="prop-locations"/></c>

      <c>count</c>
      <c>UnsignedInt</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>created</c>
      <c>UTCDateTime</c>
      <c>JSEvent, JSTask, JSGroup</c>
      <c><xref target="prop-created"/></c>

      <c>delegatedFrom</c>
      <c>String[Boolean]</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>delegatedTo</c>
      <c>String[Boolean]</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>description</c>
      <c>String</c>
      <c>JSEvent, JSTask, Location, Participant, VirtualLocation</c>
      <c><xref target="prop-description"/>, <xref target="prop-locations"/>, <xref target="prop-participants"/>, <xref target="prop-virtualLocations"/></c>

      <c>descriptionContentType</c>
      <c>String</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-descriptionContentType"/></c>

      <c>display</c>
      <c>String</c>
      <c>Link</c>
      <c><xref target="prop-links"/></c>

      <c>due</c>
      <c>LocalDateTime</c>
      <c>JSTask</c>
      <c><xref target="prop-due"/></c>

      <c>duration</c>
      <c>Duration</c>
      <c>JSEvent</c>
      <c><xref target="prop-duration"/></c>

      <c>email</c>
      <c>String</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>entries</c>
      <c>(JSTask|JSEvent)[]</c>
      <c>JSGroup</c>
      <c><xref target="prop-entries"/></c>

      <c>estimatedDuration</c>
      <c>Duration</c>
      <c>JSTask</c>
      <c><xref target="prop-estimatedDuration"/></c>

      <c>excluded</c>
      <c>Boolean</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-excluded"/></c>

      <c>expectReply</c>
      <c>Boolean</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>firstDayOfWeek</c>
      <c>String</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>freeBusyStatus</c>
      <c>String</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-freeBusyStatus"/></c>

      <c>frequency</c>
      <c>String</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>href</c>
      <c>String</c>
      <c>Link</c>
      <c><xref target="prop-links"/></c>

      <c>interval</c>
      <c>UnsignedInt</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>invitedBy</c>
      <c>String</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>keywords</c>
      <c>String[Boolean]</c>
      <c>JSEvent, JSTask, JSGroup</c>
      <c><xref target="prop-keywords"/></c>

      <c>kind</c>
      <c>String</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>language</c>
      <c>String</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>linkIds</c>
      <c>Id[Boolean]</c>
      <c>Location, Participant</c>
      <c><xref target="prop-locations"/>, <xref target="prop-participants"/></c>

      <c>links</c>
      <c>Id[Link]</c>
      <c>JSGroup, JSEvent, JSTask</c>
      <c><xref target="prop-links"/></c>

      <c>locale</c>
      <c>String</c>
      <c>JSGroup, JSEvent, JSTask</c>
      <c><xref target="prop-links"/></c>

      <c>localizations</c>
      <c>String[PatchObject]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-localizations"/></c>

      <c>locationId</c>
      <c>String</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>locations</c>
      <c>Id[Location]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-locations"/></c>

      <c>locationTypes</c>
      <c>String[Boolean]</c>
      <c>Location</c>
      <c><xref target="prop-locations"/></c>

      <c>memberOf</c>
      <c>String[Boolean]</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>method</c>
      <c>String</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-method"/></c>

      <c>name</c>
      <c>String</c>
      <c>Location, VirtualLocation, Participant</c>
      <c><xref target="prop-locations"/>, <xref target="prop-virtualLocations"/>, <xref target="prop-participants"/></c>

      <c>offset</c>
      <c>SignedDuration</c>
      <c>OffsetTrigger</c>
      <c><xref target="prop-alerts"/></c>

      <c>participants</c>
      <c>Id[Participant]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-participants"/></c>

      <c>participationComment</c>
      <c>String</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>participationStatus</c>
      <c>String</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>priority</c>
      <c>Int</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-priority"/></c>

      <c>privacy</c>
      <c>String</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-privacy"/></c>

      <c>prodId</c>
      <c>String</c>
      <c>JSEvent, JSTask, JSGroup</c>
      <c><xref target="prop-prodId"/></c>

      <c>progress</c>
      <c>String</c>
      <c>JSTask, Participant</c>
      <c><xref target="prop-progress"/></c>

      <c>progressUpdated</c>
      <c>UTCDateTime</c>
      <c>JSTask, Participant</c>
      <c><xref target="prop-progressUpdated"/></c>

      <c>recurrenceId</c>
      <c>LocalDateTime</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-recurrenceId"/></c>

      <c>recurrenceOverrides</c>
      <c>LocalDateTime[PatchObject]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-recurrenceOverrides"/></c>

      <c>recurrenceRules</c>
      <c>RecurrenceRule[]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>rel</c>
      <c>String</c>
      <c>Link</c>
      <c><xref target="prop-links"/></c>

      <c>relatedTo</c>
      <c>String[Relation]</c>
      <c>JSEvent, JSTask, Alert</c>
      <c><xref target="prop-relatedTo"/>, <xref target="prop-alerts"/></c>

      <c>relation</c>
      <c>String[Boolean]</c>
      <c>Relation</c>
      <c><xref target="type-Relation"/></c>

      <c>relativeTo</c>
      <c>String</c>
      <c>OffsetTrigger, Location</c>
      <c><xref target="prop-alerts"/>, <xref target="prop-locations"/></c>

      <c>replyTo</c>
      <c>String[String]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-replyTo"/></c>

      <c>roles</c>
      <c>String[Boolean]</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>rscale</c>
      <c>String</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>scheduleAgent</c>
      <c>String</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>scheduleSequence</c>
      <c>UnsignedInt</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>scheduleUpdated</c>
      <c>UTCDateTime</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>sendTo</c>
      <c>String[String]</c>
      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>sequence</c>
      <c>UnsignedInt</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-sequence"/></c>

      <c>showWithoutTime</c>
      <c>Boolean</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-showWithoutTime"/></c>

      <c>size</c>
      <c>UnsignedInt</c>
      <c>Link</c>
      <c><xref target="prop-links"/></c>

      <c>skip</c>
      <c>String</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>source</c>
      <c>String</c>
      <c>JSGroup</c>
      <c><xref target="prop-source"/></c>

      <c>start</c>
      <c>LocalDateTime</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-start-jsevent"/>, <xref target="prop-start-jstask"/></c>

      <c>status</c>
      <c>String</c>
      <c>JSEvent</c>
      <c><xref target="prop-status-jsevent"/></c>

      <c>timeZone</c>
      <c>String|null</c>
      <c>JSEvent, JSTask, Location</c>
      <c><xref target="prop-timeZone"/>, <xref target="prop-locations"/></c>

      <c>timeZones</c>
      <c>String[TimeZone]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-timeZones"/></c>

      <c>title</c>
      <c>String</c>
      <c>JSEvent, JSTask, JSGroup, Link</c>
      <c><xref target="prop-title"/></c>

      <c>trigger</c>
      <c>OffsetTrigger|AbsoluteTrigger|UnknownTrigger</c>
      <c>Alert</c>
      <c><xref target="prop-alerts"/></c>

      <c>uid</c>
      <c>String</c>
      <c>JSEvent, JSTask, JSGroup</c>
      <c><xref target="prop-uid"/></c>

      <c>until</c>
      <c>LocalDateTime</c>
      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>updated</c>
      <c>UTCDateTime</c>
      <c>JSEvent, JSTask, JSGroup</c>
      <c><xref target="prop-updated"/></c>

      <c>uri</c>
      <c>String</c>
      <c>VirtualLocation</c>
      <c><xref target="prop-virtualLocations"/></c>

      <c>useDefaultAlerts</c>
      <c>Boolean</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="useDefaultAlerts"/></c>

      <c>virtualLocations</c>
      <c>Id[VirtualLocation]</c>
      <c>JSEvent, JSTask</c>
      <c><xref target="prop-virtualLocations"/></c>

      <c>when</c>
      <c>UTCDateTime</c>
      <c>AbsoluteTrigger</c>
      <c><xref target="prop-alerts"/></c>
    </texttable>
  </section>
</section>

<section anchor="iana-type-registry" title='Creation of "JSCalendar Types" Registry'>
  <t>The IANA will create the "JSCalendar Types" registry to avoid name collisions and provide a complete reference for all data types used for JSCalendar property values. The registration process is the same as for the JSCalendar Properties registry, as defined in <xref target="iana-property-registry"/>.</t>

  <section anchor="iana-type-registry-template" title="JSCalendar Types Registry Template">
    <t><list style="symbols">
      <t>Type Name: The name of the type.</t>
      <t>Reference or Description: A brief description or RFC number and section reference where the Type is specified (may be omitted for "reserved" type names).</t>
      <t>Intended Use: Common, reserved, or obsolete.</t>
      <t>Change Controller: (<spanx style="verb">IETF</spanx> for IETF-stream RFCs).</t>
  </list></t>
  </section>

  <section anchor="iana-type-registry-contents" title="Initial Contents for the JSCalendar Types Registry">
    <t>The following table lists the initial entries of the JSCalendar Types registry. All properties are for common-use. All RFC section references are for this document. The change controller for all these properties is "IETF".</t>

    <texttable anchor="table-iana-type-registry">
      <ttcol align='left'>Type Name</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>

      <c>Alert</c>
      <c><xref target="prop-alerts"/></c>

      <c>Boolean</c>
      <c><xref target="type-signatures"/></c>

      <c>Duration</c>
      <c><xref target="type-Duration"/></c>

      <c>Id</c>
      <c><xref target="type-Id"/></c>

      <c>Int</c>
      <c><xref target="type-Int"/></c>

      <c>LocalDateTime</c>
      <c><xref target="type-LocalDateTime"/></c>

      <c>Link</c>
      <c><xref target="prop-links"/></c>

      <c>Location</c>
      <c><xref target="prop-locations"/></c>

      <c>Number</c>
      <c><xref target="type-signatures"/></c>

      <c>Participant</c>
      <c><xref target="prop-participants"/></c>

      <c>PatchObject</c>
      <c><xref target="type-PatchObject"/></c>

      <c>RecurrenceRule</c>
      <c><xref target="prop-recurrenceRules"/></c>

      <c>Relation</c>
      <c><xref target="type-Relation"/></c>

      <c>SignedDuration</c>
      <c><xref target="type-SignedDuration"/></c>

      <c>String</c>
      <c><xref target="type-signatures"/></c>

      <c>TimeZone</c>
      <c><xref target="prop-timeZones"/></c>

      <c>TimeZoneRule</c>
      <c><xref target="prop-timeZones"/></c>

      <c>UnsignedInt</c>
      <c><xref target="type-UnsignedInt"/></c>

      <c>UTCDateTime</c>
      <c><xref target="type-UTCDateTime"/></c>

      <c>VirtualLocation</c>
      <c><xref target="prop-virtualLocations"/></c>
    </texttable>
  </section>
</section>

<section anchor="iana-enum-registry" title='Creation of "JSCalendar Enum Values" Registry'>
  <t>The IANA will create the "JSCalendar Enum Values" registry to allow interoperable extension of semantics for properties with enumerable values. Each such property will have a subregistry of allowed values. The registration process for a new enum value or adding a new enumerable property is the same as for the JSCalendar Properties registry, as defined in <xref target="iana-property-registry"/>.</t>

  <section anchor="iana-enum-registry-registry-template" title="JSCalendar Enum Property Template">
    <t>This template is for adding a subregistry for a new enumerable property to the JSCalendar Enum registry.</t>

    <t><list style="symbols">
      <t>Registry Name: This MUST be of the form "Enum Values for {property-name} (Context: {context})" where:
      <vspace blankLines="1" />
      {property-name} is the name(s) of the property or properties where these values may be used. This MUST be registered in the JSCalendar Properties registry.
      <vspace blankLines="1" />
      {context} is the list of allowed object types where the property or properties may appear, as registered in the JSCalendar Properties registry. This disambiguates where there may be two distinct properties with the same name in different contexts.</t>
      <t>Change Controller: (<spanx style="verb">IETF</spanx> for properties defined in IETF-stream RFCs).</t>
      <t>Initial Contents: The initial list of defined values for this enum, using the template defined in <xref target="iana-enum-registry-value-template"/>.</t>
    </list></t>
  </section>

  <section anchor="iana-enum-registry-value-template" title="JSCalendar Enum Value Template">
    <t>This template is for adding a new enum value to a subregistry in the JSCalendar Enum registry.</t>

    <t><list style="symbols">
      <t>Enum Value: The verbatim value of the enum.</t>
      <t>Reference or Description: A brief description or RFC number and section reference for the semantics of this value.</t>
    </list></t>
  </section>

  <section anchor="iana-enum-registry-contents" title="Initial Contents for the JSCalendar Enum Registry">

    <t>For each subregistry created in this section, all RFC section references are for this document and the change controller is IETF.</t>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for action (Context: Alert)</t>

    <texttable anchor="table-iana-enum-alert-action">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>display</c>
      <c><xref target="prop-alerts"/></c>
      <c>email</c>
      <c><xref target="prop-alerts"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for display (Context: Link)</t>

    <texttable anchor="table-iana-enum-link-display">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>badge</c>
      <c><xref target="prop-links"/></c>
      <c>graphic</c>
      <c><xref target="prop-links"/></c>
      <c>fullsize</c>
      <c><xref target="prop-links"/></c>
      <c>thumbnail</c>
      <c><xref target="prop-links"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for freeBusyStatus (Context: JSEvent, JSTask)</t>

    <texttable anchor="table-iana-enum-freeBusyStatus">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>free</c>
      <c><xref target="prop-freeBusyStatus"/></c>
      <c>busy</c>
      <c><xref target="prop-freeBusyStatus"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for kind (Context: Participant)</t>

    <texttable anchor="table-iana-enum-participant-kind">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>individual</c>
      <c><xref target="prop-participants"/></c>
      <c>group</c>
      <c><xref target="prop-participants"/></c>
      <c>resource</c>
      <c><xref target="prop-participants"/></c>
      <c>location</c>
      <c><xref target="prop-participants"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for participationStatus (Context: Participant)</t>

    <texttable anchor="table-iana-enum-participationStatus">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>needs-action</c>
      <c><xref target="prop-participants"/></c>
      <c>accepted</c>
      <c><xref target="prop-participants"/></c>
      <c>declined</c>
      <c><xref target="prop-participants"/></c>
      <c>tenative</c>
      <c><xref target="prop-participants"/></c>
      <c>delegated</c>
      <c><xref target="prop-participants"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for privacy (Context: JSEvent, JSTask)</t>

    <texttable anchor="table-iana-enum-privacy">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>public</c>
      <c><xref target="prop-privacy"/></c>
      <c>private</c>
      <c><xref target="prop-privacy"/></c>
      <c>secret</c>
      <c><xref target="prop-privacy"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for progress (Context: JSTask, Participant)</t>

    <texttable anchor="table-iana-enum-status-jstask">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>needs-action</c>
      <c><xref target="prop-progress"/></c>
      <c>in-process</c>
      <c><xref target="prop-progress"/></c>
      <c>completed</c>
      <c><xref target="prop-progress"/></c>
      <c>failed</c>
      <c><xref target="prop-progress"/></c>
      <c>cancelled</c>
      <c><xref target="prop-progress"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for relation (Context: Relation)</t>

    <texttable anchor="table-iana-enum-relation">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>first</c>
      <c><xref target="type-Relation"/></c>
      <c>next</c>
      <c><xref target="type-Relation"/></c>
      <c>child</c>
      <c><xref target="type-Relation"/></c>
      <c>parent</c>
      <c><xref target="type-Relation"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for relativeTo (Context: OffsetTrigger, Location)</t>

    <texttable anchor="table-iana-enum-offsetTrigger-relativeTo">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>start</c>
      <c><xref target="prop-alerts"/></c>
      <c>end</c>
      <c><xref target="prop-alerts"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for roles (Context: Participant)</t>

    <texttable anchor="table-iana-enum-participant-role">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>owner</c>
      <c><xref target="prop-participants"/></c>
      <c>attendee</c>
      <c><xref target="prop-participants"/></c>
      <c>optional</c>
      <c><xref target="prop-participants"/></c>
      <c>informational</c>
      <c><xref target="prop-participants"/></c>
      <c>chair</c>
      <c><xref target="prop-participants"/></c>
      <c>contact</c>
      <c><xref target="prop-participants"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for scheduleAgent (Context: Participant)</t>

    <texttable anchor="table-iana-enum-participant-scheduleagent">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>server</c>
      <c><xref target="prop-participants"/></c>
      <c>client</c>
      <c><xref target="prop-participants"/></c>
      <c>none</c>
      <c><xref target="prop-participants"/></c>
    </texttable>

    <t>------------------------------------------------------------</t>

    <t>Enum Values for status (Context: JSEvent)</t>

    <texttable anchor="table-iana-enum-status-jsevent">
      <ttcol align='left'>Enum Value</ttcol>
      <ttcol align='left'>Reference or Description</ttcol>
      <c>confirmed</c>
      <c><xref target="prop-status-jsevent"/></c>
      <c>cancelled</c>
      <c><xref target="prop-status-jsevent"/></c>
      <c>tentative</c>
      <c><xref target="prop-status-jsevent"/></c>
    </texttable>

  </section>
</section>
</section>

    <section anchor="acknowledgments" title="Acknowledgments">
      <t>The authors would like to thank the members of CalConnect for their valuable contributions. This specification originated from the work of the API technical committee of CalConnect, the Calendaring and Scheduling Consortium.</t>
    </section>
  </middle>
  <back>
    <references title="Normative References">
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2392.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2397.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3339.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4589.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5545.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5646.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5870.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6838.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6901.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7493.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml"?>
      <reference anchor="CLDR" target="http://cldr.unicode.org/">
        <front>
          <title>Unicode Common Locale Data Repository</title>
          <author />
          <date />
        </front>
      </reference>
      <reference anchor="TZDB" target="https://www.iana.org/time-zones">
        <front>
          <title>IANA Time Zone Database</title>
          <author />
          <date />
        </front>
      </reference>
      <reference anchor="COLORS" target="https://www.w3.org/TR/css-color-3/">
        <front>
          <title>CSS Color Module</title>
          <author />
          <date />
        </front>
      </reference>
    </references>
    <references title="Informative References">
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4122.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5546.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6047.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6376.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7265.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7529.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7808.xml"?>
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7986.xml"?>
      <reference anchor="LOCATIONTYPES" target="https://www.iana.org/assignments/location-type-registry/location-type-registry.xhtml">
        <front>
          <title>IANA Location Types Registry</title>
          <author />
          <date />
        </front>
      </reference>
      <reference anchor="LINKRELS" target="https://www.iana.org/assignments/link-relations/link-relations.xhtml">
        <front>
          <title>IANA Link Relation Types</title>
          <author />
          <date />
        </front>
      </reference>
      <reference anchor="MIME" target="https://www.iana.org/assignments/media-types/media-types.xhtml">
        <front>
          <title>IANA Media Types</title>
          <author />
          <date />
        </front>
      </reference>
    </references>
  </back>
</rfc>
