<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc ipr="trust200902" category="std" docName="draft-ietf-calext-jscalendar-11">
    <?rfc toc="yes"?>
    <?rfc symrefs="yes"?>
    <?rfc sortrefs="yes"?>
    <?rfc compact="no"?>
    <?rfc subcompact="no"?>
    <?rfc private=""?>
    <?rfc topblock="yes"?>
    <?rfc comments="no"?>

    <front>
        <title abbrev="JSCalendar">JSCalendar: A JSON representation of calendar data</title>
        <author initials="N.M." surname="Jenkins" fullname="Neil Jenkins">
            <organization>FastMail</organization>
            <address>
                <postal>
                    <street>PO Box 234</street>
                    <street>Collins St West</street>
                    <city>Melbourne</city>
                    <code>VIC 8007</code>
                    <country>Australia</country>
                    <region/>
                </postal>
                <phone/>
                <email>neilj@fastmailteam.com</email>
                <uri>https://www.fastmail.com</uri>
            </address>
        </author>
        <author initials="R." surname="Stepanek" fullname="Robert Stepanek">
            <organization>FastMail</organization>
            <address>
                <postal>
                    <street>PO Box 234</street>
                    <street>Collins St West</street>
                    <city>Melbourne</city>
                    <code>VIC 8007</code>
                    <country>Australia</country>
                    <region/>
                </postal>
                <email>rsto@fastmailteam.com</email>
                <uri>https://www.fastmail.com</uri>
            </address>
        </author>
        <date year="2018" month="December" day="10"/>
        <area>Applications</area>
        <workgroup>Calendaring extensions</workgroup>
        <keyword>JSON</keyword>
        <keyword>iCalendar</keyword>
        <keyword>calendar</keyword>
        <keyword>events</keyword>
        <keyword>date</keyword>
        <keyword>time</keyword>
        <abstract>
            <t>
                This specification defines a data model and JSON representation of calendar data that can be used
                for storage and data exchange in a calendaring and scheduling environment. It aims to be an
		alternative to the widely deployed iCalendar data format and to be unambiguous,
		extendable and simple to process. In contrast to the JSON-based jCal format, it
		is not a direct mapping from iCalendar and expands semantics where appropriate.
            </t>
        </abstract>
    </front>

    <middle>
        <section anchor="introduction" title="Introduction">
            <t>
              This document defines a data model for calendar event and task objects, or groups
              of such objects, in electronic calendar applications and systems. It aims to be unambiguous,
              extendable and simple to process.
            </t>
            <t>
                The key design considerations for this data model are as follows:
                <list style="symbols">
                    <t>
                        The attributes of the calendar entry represented must be described as a simple key-value pair,
                        reducing complexity of its representation.
                    </t>
                    <t>
                      The data model should avoid all ambiguities and make it difficult
                      to make mistakes during implementation.
                    </t>
                    <t>
                        Most of the initial set of attributes should be taken from the iCalendar data format
                        (<xref target="RFC5545"/>, also see <xref target="relation-to-icalendar"/>), but
                        the specification should add new attributes or value types, or not support existing
                        ones, where appropriate. Conversion between the data formats need not fully preserve
                        semantic meaning.
                    </t>
                    <t>
                        Extensions, such as new properties and components, MUST NOT lead to requiring an update to this
                        document.
                    </t>
                </list>
              </t>
              <t>
                  The representation of this
                  data model is defined in the I-JSON format <xref target="RFC7493"/>, which is a strict subset
                  of the JavaScript Object Notation (JSON) Data Interchange Format <xref target="RFC8259"/>.
                  Using JSON is mostly a pragmatic choice: its widespread use makes JSCalendar easier to adopt, and the ready availability of production-ready JSON implementations eliminates a whole category of parser-related interoperability issues.
                </t>
            <section anchor="relation-to-icalendar" title="Relation to the iCalendar format">
                <t>
                    The iCalendar data format <xref target="RFC5545"/>, a widely deployed interchange format for calendaring
                    and scheduling data, has served calendaring vendors for a long while, but contains some ambiguities and
                    pitfalls that can not be overcome without backward-incompatible changes.
                </t>
                <t>
                    For example, iCalendar defines various formats for local times, UTC time and dates, which
                    confuses new users. Other sources for errors are the requirement for custom time zone definitions
                    within a single calendar component, as well as the iCalendar format itself; the latter causing
                    interoperability issues due to misuse of CR LF terminated strings, line continuations and subtle
                    differences between iCalendar parsers. Lastly, up until recently the iCalendar format did not have a way to express a concise difference between two calendar components, which results in verbose exchanges during
                    scheduling.
                </t>
            </section>
            <section anchor="relation-to-jcal" title="Relation to the jCal format">
                <t>
                    The JSON format for iCalendar data, <xref target="RFC7265">jCal</xref>, is a direct
		    mapping between iCalendar and JSON. It does not attempt to extend or update iCalendar semantics, and consequently does not address the issues outlined in <xref target="relation-to-icalendar"/>.
                </t>
                <t>
			Since the standardization of jCal, the majority of implementations and service providers either kept using iCalendar, or came up with their own proprietary JSON representation, which often are incompatible with each other. JSCalendar is intended to meet this demand for JSON formatted calendar data, and to provide a standard representation as an alternative to new proprietary formats.
                </t>
            </section>
            <section anchor="notational-conventions" title="Notational Conventions">
                <t>
                    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
                    "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in
                    <xref target="RFC2119"/>.
                </t>
                <t>
                    The underlying format used for this specification is JSON. Consequently, the terms "object" and
                    "array" as well as the four primitive types (strings, numbers, booleans, and null) are to be
                    interpreted as described in Section 1 of <xref target="RFC8259"/>.
                </t>
                <t>Some examples in this document contain "partial" JSON documents used for illustrative purposes. In
                    these examples, three periods "..." are used to indicate a portion of the document that has been
		    removed for compactness. In this document, property and object definitions are formatted
		    like <spanx style="strong">this</spanx> and are referred to in other sections
		    like <spanx style="emph">this</spanx>. Verbatim text is formatted like <spanx style="verb">this</spanx>.
                </t>
            </section>
        </section>

        <section anchor="jscalendar-objects" title="JSCalendar objects">
            <t>
                This section describes the calendar object types specified by JSCalendar.
            </t>
            <section anchor="jsevent" title="JSEvent">
                <t>
                    MIME type: <spanx style="verb">application/jscalendar+json;type=jsevent</spanx>
                </t>
                <t>
                    A JSEvent represents a scheduled amount of time on a calendar, typically a meeting, appointment,
                    reminder or anniversary. Multiple participants may partake in the event at multiple locations.
                </t>
                <t>
                    The <xref target="type">@type</xref> property value MUST be <spanx style="verb">jsevent</spanx>.

                </t>
            </section>

            <section anchor="jstask" title="JSTask">
                <t>
                    MIME type: <spanx style="verb">application/jscalendar+json;type=jstask</spanx>
                </t>
                <t>
                    A JSTask represents an action-item, assignment, to-do or work item .
                </t>
                <t>
                    The <xref target="type">@type</xref> property value MUST be <spanx style="verb">jstask</spanx>.
                </t>
                <t>
                    A JSTask may start and be due at certain points in time, may take some estimated time to complete
                    and may recur; none of which is required. This notably differs from <xref target="jsevent">
                    JSEvent</xref> which is required to start at a certain point in time and typically takes some
                    non-zero duration to complete.
                </t>
            </section>

            <section anchor="jsgroup" title="JSGroup">
                <t>
                    MIME type: <spanx style="verb">application/jscalendar+json;type=jsgroup</spanx>
                </t>
                <t>
                    A JSGroup is a collection of <xref target="jsevent">JSEvent</xref> and
                    <xref target="jstask">JSTask</xref> objects. Typically, objects are grouped by topic
                    (e.g. by keywords) or calendar membership.
                </t>
                <t>
                    The <xref target="type">@type</xref> property value MUST be <spanx style="verb">jsgroup</spanx>.
                </t>
            </section>
        </section>

        <section anchor="structure-of-jscalendar-objects" title="Structure of JSCalendar objects">
            <t>
                A JSCalendar object is a JSON object, which MUST be valid I-JSON (a stricter subset of JSON), as
                specified in <xref target="RFC8259"/>. Property names and values are case-sensitive.
            </t>
            <t>
                The object has a collection of properties, as specified in the following sections. Unless otherwise
                specified, all properties are mandatory. Optional properties may have a default value, if explicitly
                specified in the property definition.
            </t>
            <section anchor="type-signatures" title="Type signatures">
                <t>
                    Types signatures are given for all JSON objects in this document. The following conventions are
                    used:
                </t>
                <t>
                    <list style="symbols">
                        <t>
                            <spanx style="verb">Boolean|String</spanx>:
                            The value is either a JSON <spanx style="verb">Boolean</spanx> value, or a JSON
                            <spanx style="verb">String</spanx> value.
                        </t>
                        <t>
                            <spanx style="verb">Foo</spanx>:
                            Any name that is not a native JSON type means an object for which the properties (and
                            their types) are defined elsewhere within this document.
                        </t>
                        <t>
                            <spanx style="verb">Foo[]</spanx>:
                            An array of objects of type <spanx style="verb">Foo</spanx>.
                        </t>
                        <t>
                            <spanx style="verb">String[Foo]</spanx>:
                            A JSON <spanx style="verb">Object</spanx> being used as a map (associative array), where
                            all the values are of type <spanx style="verb">Foo</spanx>.
                        </t>
                    </list>
                </t>
            </section>
            <section anchor="data-types" title="Data Types">
                <t>
                    In addition to the standard JSON data types, the following data types are used in this
                    specification:
                </t>
                <section anchor="utcdate-type" title="UTCDate">
                    <t>
                        This is a string in
                        <xref target="RFC3339"/>
                        <spanx style="verb">date-time</spanx>
                        format, with the further restrictions that any letters
                        MUST be in upper-case, the time component MUST be included and the time MUST be in UTC.
                        Fractional second values MUST NOT be included unless non-zero and MUST NOT have
                        trailing zeros, to ensure there is only a single representation for each date-time.
                        <vspace blankLines="1"/>
                        For example
                        <spanx style="verb">2010-10-10T10:10:10.003Z</spanx> is OK, but
                        <spanx style="verb">2010-10-10T10:10:10.000Z</spanx> is invalid and MUST be
                        encoded as <spanx style="verb">2010-10-10T10:10:10Z</spanx>.
                    </t>
                    <t>
                        In common notation, it should be of the form <spanx style="verb">YYYY-MM-DDTHH:MM:SSZ</spanx>.
                    </t>
                </section>
                <section anchor="localdate-type" title="LocalDate">
                    <t>
                        This is a date-time string <spanx style="emph">with no time zone/offset information</spanx>.
                        It is otherwise in the same format as UTCDate: <spanx style="verb">
                        YYYY-MM-DDTHH:MM:SS</spanx>. The time zone to associate the LocalDate with comes from an
                        associated property, or if no time zone is associated it defines
                        <spanx style="emph">floating time</spanx>. Floating date-times are not tied to any specific
                        time zone. Instead, they occur in every timezone at the same <spanx style="emph">wall-clock</spanx>
                        time (as opposed to the same instant point in time).
                    </t>
                </section>
                <section anchor="duration-type" title="Duration">
                    <t>
                        A <spanx style="strong">Duration</spanx> is represented by a
                        subset of ISO8601 duration format, as specified by the following
                        ABNF:
                    </t>
                    <figure>
                        <artwork><![CDATA[
    dur-secfrac = "." 1*DIGIT
    dur-second  = 1*DIGIT [dur-secfrac] "S"
    dur-minute  = 1*DIGIT "M" [dur-second]
    dur-hour    = 1*DIGIT "H" [dur-minute]
    dur-time    = "T" (dur-hour / dur-minute / dur-second)
    dur-day     = 1*DIGIT "D"
    dur-week    = 1*DIGIT "W"

    duration    = "P" (dur-day [dur-time] / dur-time / dur-week)
    ]]></artwork>
                    </figure>
                    <t>
                        In addition, the duration MUST NOT include fractional second values unless the fraction is non-zero.
                    </t>
                    <t>
                        A <spanx style="strong">SignedDuration</spanx> is represented
                        as a duration, optionally preceeded by a sign character. It
                        typically is used to express the offset of a point in time
                        relative to an associated time.
                        It is specified by the following ABNF:
                    </t>
                    <figure>
                        <artwork><![CDATA[
    signed-duration = (["+"] / "-") duration
    ]]></artwork>
                    </figure>
                    <t>
                        A negative sign indicates a point in time
                        at or <spanx style="emph">before</spanx> the associated time,
                        a positive or no sign a time at or
                        <spanx style="emph">after</spanx> the associated time.
                    </t>
                </section>
                <section anchor="patchobject-type" title="PatchObject">
                    <t>
                        A <spanx style="strong">PatchObject</spanx> is of type <spanx style="verb">
                        String[*|null]</spanx>, and represents an unordered set of patches on a JSON object.
                        The keys are a path in a subset of
                        <xref target="RFC6901"/>
                        JSON pointer format, with an implicit leading <spanx style="verb">/</spanx> (i.e. prefix each
                        key with <spanx style="verb">/</spanx> before applying the JSON pointer evaluation algorithm).
                    </t>
                    <t>
                        A patch within a PatchObject is only valid, if all of the following conditions apply:
                    </t>
                    <t>
                        <list style="numbers">
                            <t>
                                The pointer MUST NOT reference inside an array (i.e. it MUST NOT insert/delete from an array;
                                the array MUST be replaced in its entirety instead).
                            </t>
                            <t>
                                When evaluating a path, all parts prior to the last (i.e. the value after the final slash) MUST
                                exist.
                            </t>
                            <t>
                                There MUST NOT be two patches in the PatchObject where the pointer of one is the prefix of the
                                pointer of the other, e.g. <spanx style="verb">alerts/foo/offset</spanx> and <spanx style="verb">
                                alerts</spanx>.
                            </t>
                        </list>
                    </t>
                    <t>
                        The value associated with each pointer is either:
                        <list style="symbols">
                            <t>
                                <spanx style="verb">null</spanx>: Remove the property from the patched object. If not
                                present in the parent, this a no-op.
                            </t>
                            <t>
                                Anything else: The value to replace the inherited property on the patch object with (if
                                present) or add to the property (if not present).
                            </t>
                        </list>
                    </t>
                    <t>
                        Implementations MUST reject a PatchObject if any of its patches are invalid.
                    </t>
                  </section>
                  <section anchor="identifiers" title="Identifiers">
                      <t>
                          If not stated otherwise in the respective property definition, properties and object
                          keys that define identifiers MUST
                          be string values, MUST be at least 1 character and maximum 256 characters in size,
                          and MUST only contain characters from the
                          “URL and Filename safe” Base 64 Alphabet, as defined in section 5 of
                          <xref target="RFC4648"/>. This is the ASCII alphanumeric
                          characters (A-Za-z0-9), hyphen (-), and underscore (_). Note that <xref target="RFC7493"/>
                          requires string values be encoded in UTF-8, so the maximum size of an
                          identifier according to this definition is 256 octets.
                          <vspace blankLines="1"/>. Identifiers in object maps need not be universally unique,
                          e.g. two calendar objects MAY use the same identifiers in their respective
                          <spanx style="emph">links</spanx> properties.
                          <vspace blankLines="1"/>
                          Nevertheless, a UUID typically is a good choice.
                      </t>
                  </section>
                  <section anchor="timezones" title="Time Zones">
                      <t>
                        By default, time zones in JSCalendar are identified by their name in the
                        <eref target="https://www.iana.org/time-zones">IANA Time Zone Database</eref>,
                        and the zone rules of the respective zone record apply.
                        Other identifiers MUST start with a solidus character (ASCII decimal 47),
                        and lookup or evaluation of their zone rules are out of scope of this
                        specification. Also see section 3.2.19 of <xref target="RFC5545"/> and
                        section 3.6. of <xref target="RFC7808"/> for discussion of such identifiers.
                      </t>
                </section>
                <section anchor="normalization" title="Normalization and equivalence">
                    <t>
                        JSCalendar aims to provide unambiguous definitions for value types and
                        properties, but does not define a general normalization or equivalence method for
                        JSCalendar objects and types. This is because the notion of equivalence might range
                        from byte-level equivalence to semantic equivalence, depending on the
                        respective use case (for example, the CalDAV protocol
                        <xref target="RFC4791"/> requires octet equivalence of the encoded calendar
                        object to determine ETag equivalence).
                        <vspace blankLines="1"/>
                        Normalization of JSCalendar objects is hindered because of the following reasons:
                        <list style="symbols">
                            <t>
                                Custom JSCalendar properties may contain arbitrary JSON values,
                                including arrays. However, equivalence of arrays might or might not
                                depend on the order of elements, depending on the respective property
                                definition.
                            </t>
                            <t>
                                Several JSCalendar property values are defined as URIs
                                and MIME types, but normalization of these types is inherently
                                protocol and scheme-specific, depending on the use-case of the
                                equivalence definition (see section 6 of <xref target="RFC3986"/>).
                            </t>
                        </list>
                        Considering this, the definition of equivalence and
                        normalization is left to client and server implementations and to be negotiated
                        by a calendar exchange protocol or defined by another RFC.
                    </t>
                </section>
            </section>

            <section anchor="custom-properties" title="Custom property extensions and values">
                <t>
                    Vendors MAY add additional properties to the calendar object to support their custom features. The
                    names of these properties MUST be prefixed with a domain name controlled by the vendor to avoid
                    conflict, e.g. <spanx style="verb">example.com/customprop</spanx>.
                </t>
                <t>
                    Some JSCalendar properties allow vendor-specific value extensions. If so, vendor specific values
                    MUST be prefixed with a domain name controlled by the vendor,
                    e.g. <spanx style="verb">example.com/customrel</spanx>, unless otherwise noted.
                </t>
            </section>
        </section>

        <section anchor="jscalendar-props" title="Common JSCalendar properties">
            <t>
              This section describes the properties that are common to the various JSCalendar object
              types. Specific JSCalendar object types may only support a subset of these properties.
              The object type definitions in <xref target="jscalendar-object-props"/> describe the
              set of supported properties per type.
            </t>

            <section anchor="metadata-properties" title="Metadata properties">
                <section anchor="type" title="@type">
                    <t>
                        Type:
                        <spanx style="verb">String</spanx>
                    </t>
                    <t>
                        Specifies the type which this object represents.
                        This MUST be one of the following values,
                        registered in a future RFC, or a vendor-specific value:
                        <list style="symbols">
                            <t>
                                <spanx style="verb">jsevent</spanx>: a JSCalendar event (<xref target="jsevent"/>).
                            </t>
                            <t>
                                <spanx style="verb">jstask</spanx>: a JSCalendar task (<xref target="jstask"/>).
                            </t>
                            <t>
                                <spanx style="verb">jsgroup</spanx>: a JSCalendar group (<xref target="jsgroup"/>).
                            </t>
                        </list>
                    </t>
                    <t>
                        A valid JSCalendar object MUST include this property.
                    </t>
                </section>

                <section anchor="uid" title="uid">
                    <t>
                        Type:
                        <spanx style="verb">String</spanx>
                    </t>
                    <t>
                        A globally unique identifier, used to associate the object as the same across different systems,
                        calendars and views. The value of this property MUST be unique across <spanx style="emph">all</spanx>
                        JSCalendar objects, even if they are of different type.
                        <xref target="RFC4122"/> describes a range of established algorithms to generate universally unique
                        identifiers (UUID), and the random or pseudo-random version is recommended.
                        <vspace blankLines="1"/>
                        For compatibility with <xref target="RFC5545"/> UIDs, implementations MUST be able to receive and
                        persist values of at least 255 octets for this property, but they MUST NOT truncate values in the
                        middle of a UTF-8 multi-octet sequence.
                    </t>
                    <t>
                        A valid JSCalendar object MUST include this property.
                    </t>
                </section>

                <section anchor="relatedTo" title="relatedTo">
                    <t>
                        Type:
                        <spanx style="verb">String[Relation]</spanx> (optional)
                    </t>
                    <t>
                        Relates the object to other JSCalendar objects. This is represented as a map of the UIDs of
                        the related objects to information about the relation.
                    </t>
                    <t>
                        A <spanx style="strong">Relation</spanx> object has the following properties:
                    </t>
                    <t>
                        <list style="symbols">
                            <t>
                                <spanx style="strong">relation</spanx>: <spanx style="verb">String[Boolean]</spanx> (optional)
                                Describes how the linked object is related to this object as a set of relation types. If not null, the set MUST NOT be empty.
                                <vspace blankLines="1"/>
                                Keys in the set MUST be one of the following values, defined in a future specification or a vendor-specific value:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">first</spanx>: The linked object is the first in the series
                                        this object is part of.
                                    </t>
                                    <t>
                                        <spanx style="verb">next</spanx>: The linked object is the next in the series
                                        this object is part of.
                                    </t>
                                    <t>
                                        <spanx style="verb">child</spanx>: The linked object is a subpart of this
                                        object.
                                    </t>
                                    <t>
                                        <spanx style="verb">parent</spanx>: This object is part of the overall linked
                                        object.
                                    </t>
                                </list>
                                The value for each key in the set MUST be <spanx style="verb">true</spanx>.
                            </t>
                        </list>
                    </t>
                    <t>
                        If an object is split to make a "this and future" change to a recurrence, the original object
                        MUST be truncated to end at the previous occurrence before this split, and a new object
                        created to represent all the objects after the split.
                        A <spanx style="verb">next</spanx> relation
                        MUST be set on the original object's relatedTo property for the
                        UID of the new object. A <spanx style="verb">first</spanx>
                        relation for the UID of the first object in the
                        series MUST be set on the new object. Clients can then follow these UIDs to get the complete
                        set of objects if the user wishes to modify them all at once.
                    </t>
                </section>

                <section anchor="prodId" title="prodId">
                    <t>
                        Type:
                        <spanx style="verb">String</spanx> (optional)
                    </t>
                    <t>
                        The identifier for the product that created the JSCalendar object.
                    </t>
                    <t>
                        The vendor of the implementation SHOULD ensure that this is a globally unique identifier, using
                        some technique such as an FPI value, as defined in [ISO.9070.1991]. It MUST only use characters
                        of an iCalendar TEXT data value (see section 3.3.11 in <xref target="RFC5545"/>).
                    </t>
                    <t>
                        This property SHOULD NOT be used to alter the interpretation of an JSCalendar object beyond the
                        semantics specified in this document. For example, it is not to be used to further the
                        understanding of non-standard properties.
                    </t>
                </section>


                <section anchor="created" title="created">
                    <t>
                        Type:
                        <spanx style="verb">UTCDate</spanx> (optional)
                    </t>
                    <t>
                        The date and time this object was initially created.
                    </t>
                </section>

                <section anchor="updated" title="updated">
                    <t>
                        Type:
                        <spanx style="verb">UTCDate</spanx>
                    </t>
                    <t>
                        The date and time the data in this object was last modified.
                    </t>
                </section>

                <section anchor="sequence" title="sequence">
                    <t>
                        Type: <spanx style="verb">Number</spanx> (optional, default:<spanx style="verb">0</spanx>)
                    </t>
                    <t>
                        Initially zero, this MUST be a non-negative integer that is monotonically
                        incremented each time a change is made to the object.
                    </t>
                </section>

                <section anchor="method" title="method">
                    <t>
                        Type:
                        <spanx style="verb">String</spanx> (optional)
                    </t>
                    <t>
                        The iTIP (<xref target="RFC5546"/>) method, in lower-case. Used for scheduling.
                    </t>
                </section>

            </section>

            <section anchor="whatwhere-properties" title="What and where properties">

                <section anchor="title" title="title">
                    <t>
                        Type: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb"></spanx>)
                    </t>
                    <t>
                        A short summary of the object.
                    </t>
                </section>

                <section anchor="description" title="description">
                    <t>
                        Type: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb"></spanx>)
                    </t>
                    <t>
                        A longer-form text description of the object. The content is formatted according
                        to the <spanx style="emph">descriptionContentType</spanx> property.
                    </t>
                </section>

                <section anchor="descriptionContentType" title="descriptionContentType">
                    <t>
                        Type: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">text/plain</spanx>)
                    </t>
                    <t>
                        Describes the media type (<xref target="RFC6838"/>) of the
                        contents of the <spanx style="verb">description</spanx> property.
                        Media types MUST be sub-types of type <spanx style="verb">text</spanx>,
                        and SHOULD be <spanx style="verb">text/plain</spanx> or
                        <spanx style="verb">text/html</spanx> (<xref target="MIME"/>).
                        They MAY define parameters and the
                        <spanx style="verb">charset</spanx> parameter MUST be <spanx style="verb">utf-8</spanx>, if specified.
                        Descriptions of type <spanx style="verb">text/html</spanx> MAY contain
                        <spanx style="verb">cid</spanx> URLs
                        (<xref target="RFC2392"/>) to reference links in the calendar object by use of
                        the <spanx style="emph">cid</spanx> property of the <spanx style="emph">Link</spanx>
                        object.
                    </t>
                </section>

                <section anchor="locations" title="locations">
                    <t>
                        Type:
                        <spanx style="verb">String[Location]</spanx> (optional)
                    </t>
                    <t>
                        A map of location identifiers to Location objects, representing locations associated with the object.
                    </t>
                    <t>
                        A <spanx style="strong">Location</spanx> object has the following properties. It must define
                        at least one other property than <spanx style="emph">rel</spanx>.
                    </t>
                    <t>
                        <list style="symbols">
                            <t>
                                <spanx style="strong">name</spanx>:
                                <spanx style="verb">String</spanx> (optional, default:<spanx style="verb"></spanx>)
                                The human-readable name of the location.
                            </t>
                            <t>
                                <spanx style="strong">description</spanx>:
                                <spanx style="verb">String</spanx> (optional)
                                Human-readable, plain-text instructions for accessing this location. This may be an address, set of
                                directions, door access code, etc.
                            </t>
                            <t>
                                <spanx style="strong">rel</spanx>:
                                <spanx style="verb">String</spanx> (optional)
                                The relation type of this location to the JSCalendar object.
                                <vspace blankLines="1"/>
                                This MUST be either one of the following values, registered in a future RFC, or a
                                vendor-specific value. Any value the client or server doesn't understand should be
                                treated the same as if this property is omitted.
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">start</spanx>: The JSCalendar object starts at this
                                        location.
                                    </t>
                                    <t>
                                        <spanx style="verb">end</spanx>: The JSCalendar object ends at this location.
                                    </t>
                                </list>
                            </t>
                            <t>
                                <spanx style="strong">timeZone</spanx>:
                                <spanx style="verb">String</spanx> (optional)
                                A time zone for this location.
                            </t>
                            <t>
                                <spanx style="strong">coordinates</spanx>:
                                <spanx style="verb">String</spanx> (optional)
                                An
                                <xref target="RFC5870"/>
                                <spanx style="verb">geo:</spanx>
                                URI for the location.
                            </t>
                            <t>
                                <spanx style="strong">linkIds</spanx>:
                                <spanx style="verb">String[Boolean]</spanx> (optional)
				A set of link ids for links to alternate representations of this location.
				Each key in the set MUST be the identifier of a Link object defined in the <spanx style="emph">links</spanx> property of this calendar object.
                                The value for each key in the set MUST be <spanx style="verb">true</spanx>.
                                This MUST be omitted if none (rather than an empty set).

                                <vspace blankLines="1"/>
                                For example, an alternative representation could be in vCard format.
                            </t>
                        </list>
                    </t>
                </section>

                <section anchor="virtualLocations" title="virtualLocations">
                    <t>
                        Type:
                        <spanx style="verb">String[VirtualLocation]</spanx> (optional)
                    </t>
                    <t>
                        A map of identifiers to VirtualLocation objects, representing virtual locations, such as
                        video conferences or chat rooms, associated with the object.
                    </t>
                    <t>
                        A <spanx style="strong">VirtualLocation</spanx> object has the following properties.
                    </t>
                    <t>
                        <list style="symbols">
                            <t>
                                <spanx style="strong">name</spanx>:
                                <spanx style="verb">String</spanx> (optional, default:<spanx style="verb"></spanx>)
                                The human-readable name of the virtual location.
                            </t>
                            <t>
                                <spanx style="strong">description</spanx>:
                                <spanx style="verb">String</spanx> (optional)
                                Human-readable plain-text instructions for accessing this location. This may be an address, set of
                                directions, door access code, etc.
                            </t>
                            <t>
                                <spanx style="strong">uri</spanx>:
                                <spanx style="verb">String</spanx>
                                A URI that represents how to connect to this virtual location.
                                <vspace blankLines="1"/>
                                This may be a telephone number (represented as <spanx style="verb">
                                tel:+1-555-555-555</spanx>) for a teleconference, a web address for online chat, or any
                                custom URI.
                            </t>
                        </list>
                    </t>
                </section>

                <section anchor="links" title="links">
                    <t>
                        Type:
                        <spanx style="verb">String[Link]</spanx> (optional)
                    </t>
                    <t>
                        A map of link identifiers to Link objects, representing external resources associated with the object.
                    </t>

                    <t>
                        A <spanx style="strong">Link</spanx> object has the following properties:
                    </t>
                    <t>
                        <list style="symbols">
                            <t>
                                <spanx style="strong">href</spanx>:
                                <spanx style="verb">String</spanx>
                                A URI from which the resource may be fetched.
                                <vspace blankLines="1"/>
                                This MAY be a <spanx style="verb">data:</spanx> URL, but it is recommended that the file
                                be hosted on a server to avoid embedding arbitrarily large data in JSCalendar
                                object instances.
                            </t>
                            <t>
                                <spanx style="strong">cid</spanx>
                                <spanx style="verb">String</spanx> (optional)
                                This MUST be a valid <spanx style="verb">content-id</spanx>
                                value according to the definition of section 2 in <xref target="RFC2392"/>.
                                The identifier MUST be unique within
                                this JSCalendar object Link objects but has no meaning beyond that. Specifically,
                                it MAY be different from the link
                                identifier in the enclosing <spanx style="emph">links</spanx>
                                property.
                            </t>
                            <t>
                                <spanx style="strong">type</spanx>: <spanx style="verb">String</spanx> (optional)
                                The <xref target="RFC6838">content-type</xref> of the resource, if known.

                            </t>
                            <t>
                                <spanx style="strong">size</spanx>: <spanx style="verb">Number</spanx> (optional)
                                The size, in bytes, of the resource when fully decoded (i.e. the number of bytes in the
                                file the user would download), if known.
                            </t>
                            <t>
                                <spanx style="strong">rel</spanx>: <spanx style="verb">String</spanx> (optional)
                                Identifies the relation of the linked resource to the object. If set, the value MUST be a
                                registered relation type (see <xref target="RFC8288"/> and <eref
                                target="https://www.iana.org/assignments/link-relations/link-relations.xhtml">IANA Link Relations</eref>).
                                <vspace blankLines="1"/>
                                Links with a rel of <spanx style="verb">enclosure</spanx> SHOULD be considered by the
                                client as attachments for download.
                                <vspace blankLines="1"/>
                                Links with a rel of <spanx style="verb">describedby</spanx> SHOULD be considered by the
                                client to be an alternate representation of the description.
                                <vspace blankLines="1"/>
                                Links with a rel of <spanx style="verb">icon</spanx> SHOULD be considered by the client
                                to be an image that it MAY use when presenting the calendar data to a user. The
                                <spanx style="emph">display</spanx> property MAY be set to indicate the purpose
                                of this image.
                            </t>
                            <t>
                                <spanx style="strong">display</spanx>: <spanx style="verb">String</spanx> (optional)
                                Describes the intended purpose of a link to an image. If set,
                                the <spanx style="emph">rel</spanx> property MUST be set to <spanx style="verb">icon</spanx>.
                                The value MUST be either
                                one of the following values, registered in a future RFC, or a vendor-specific value:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">badge</spanx>: an image inline with the title of the object
                                    </t>
                                    <t>
                                        <spanx style="verb">graphic</spanx>: a full image replacement for the object
                                        itself
                                    </t>
                                    <t>
                                        <spanx style="verb">fullsize</spanx>: an image that is used to enhance the
                                        object
                                    </t>
                                    <t>
                                        <spanx style="verb">thumbnail</spanx>: a smaller variant of <spanx style="verb">
                                        fullsize
                                    </spanx> to be used when space for the image is constrained
                                    </t>
                                </list>
                            </t>
                            <t>
                                <spanx style="strong">title</spanx>: <spanx style="verb">String</spanx> (optional)
                                A human-readable plain-text description of the resource.
                            </t>
                        </list>
                    </t>
                </section>

                <section anchor="locale" title="locale">
                    <t>
                        Type:
                        <spanx style="verb">String</spanx> (optional)
                    </t>
                    <t>
                        The
                        <xref target="RFC5646"/>
                        language tag that best describes the locale used for the calendar object, if known.
                    </t>
                </section>

                <section anchor="keywords" title="keywords">
                    <t>
                        Type:
                        <spanx style="verb">String[Boolean]</spanx> (optional)
                    </t>
                    <t>
                        A set of keywords or tags that relate to the object.
                        The set is represented as a map, with the keys being the keywords.
                        The value for each key in the map MUST be <spanx style="verb">true</spanx>.
                    </t>
                </section>

                <section anchor="categories" title="categories">
                    <t>
                        Type:
                        <spanx style="verb">String[Boolean]</spanx> (optional)
                    </t>
                    <t>
                        A set of categories that relate to the calendar object.
                        The set is represented as a map, with the keys being the categories specified
                        as URIs. The value for each key in the map MUST be <spanx style="verb">true</spanx>.
                        <vspace blankLines="1"/>
                        In contrast to <spanx style="emph">keywords</spanx>, categories typically
                        are structured.
                        For example, a vendor owning the domain <spanx style="verb">example.com</spanx>
                        might define the categories
                        <spanx style="verb">http://example.com/categories/sports/american-football"</spanx>
                        and <spanx style="verb">http://example.com/categories/music/r-b</spanx>.
                    </t>
                </section>

                <section anchor="color" title="color">
                    <t>
                        Type:
                        <spanx style="verb">String</spanx> (optional)
                    </t>
                    <t>Specifies a color clients MAY use when displaying this calendar object. The value is a case-insensitive
                        color name taken from the CSS3 set of names, defined in Section 4.3 of <eref
                                target="https://www.w3.org/TR/2011/REC-css3-color-20110607/#svg-color">
                            W3C.REC-css3-color-20110607</eref> or a CSS3 RGB color hex value.
                    </t>
                </section>


              </section>

            <section anchor="recurrence-props" title="Recurrence properties">

                <section anchor="recurrenceRule" title="recurrenceRule">
                    <t>
                        Type:
                        <spanx style="verb">Recurrence</spanx>
                    </t>
                    <t>
                        Defines a recurrence rule (repeating pattern) for recurring calendar objects.
                    </t>
                    <t>
                        A <spanx style="strong">Recurrence</spanx> object is a JSON object mapping of a RECUR value type
                        in iCalendar, see
                        <xref target="RFC5545"/>
                        and<xref target="RFC7529"/>.
                        A JSEvent recurs by applying the recurrence rule (and <spanx style="emph">
                        recurrenceOverrides</spanx>) to the <spanx style="emph">start</spanx> date/time.
                        A JSTask recurs by applying the recurrence rule (and <spanx style="emph">recurrenceOverrides</spanx>) to its <spanx style="emph">start</spanx> date/time, if defined.
                        If the task does not define a start date-time, it recurs by its <spanx style="emph">due</spanx> date-time. If it neither defines a start
                        or due date-time, it MUST NOT define a <spanx style="emph">recurrenceRule</spanx>.
                    </t>
                    <t>
                        A Recurrence object has the following properties:
                        <list style="symbols">
                            <t>
                                <spanx style="strong">frequency</spanx>:
                                <spanx style="verb">String</spanx>
                                This MUST be one of the following values:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">yearly</spanx>
                                    </t>
                                    <t>
                                        <spanx style="verb">monthly</spanx>
                                    </t>
                                    <t>
                                        <spanx style="verb">weekly</spanx>
                                    </t>
                                    <t>
                                        <spanx style="verb">daily</spanx>
                                    </t>
                                    <t>
                                        <spanx style="verb">hourly</spanx>
                                    </t>
                                    <t>
                                        <spanx style="verb">minutely</spanx>
                                    </t>
                                    <t>
                                        <spanx style="verb">secondly</spanx>
                                    </t>
                                </list>
                                To convert from iCalendar, simply lower-case the FREQ part.

                            </t>
                            <t>
                                <spanx style="strong">interval</spanx>: <spanx style="verb">Number</spanx> (optional, default:<spanx style="verb">1</spanx>)
                                The INTERVAL part from iCal. If included, it MUST be an integer <spanx style="verb">x >=
                                1</spanx>.

                            </t>
                            <t>
                                <spanx style="strong">rscale</spanx>: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">"gregorian"</spanx>)
                                The RSCALE part from iCalendar <xref target="RFC7529">RSCALE</xref>, converted to
                                lower-case.

                            </t>
                            <t>
                                <spanx style="strong">skip</spanx>: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">"omit"</spanx>)
                                The SKIP part from iCalendar <xref target="RFC7529">RSCALE</xref>, converted to
                                lower-case.

                            </t>
                            <t>
                                <spanx style="strong">firstDayOfWeek</spanx>: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">"mo"</spanx>)
                                The WKST part from iCalendar, represented as a lower-case abbreviated two-letter English
                                day of the week.
                                If included, it MUST be one of the following values: <spanx style="verb">
                                "mo"|"tu"|"we"|"th"|"fr"|"sa"|"su"</spanx>.

                            </t>
                            <t>
                                <spanx style="strong">byDay</spanx>: <spanx style="verb">NDay[]</spanx> (optional)
                                An <spanx style="strong">NDay</spanx> object has the following properties:
                                <list style="symbols">
                                    <t>
                                        <spanx style="strong">day</spanx>: <spanx style="verb">String</spanx> The
                                        day-of-the-week part of the BYDAY value in iCalendar, lower-cased. MUST be one
                                        of the following values: <spanx style="verb">
                                        "mo"|"tu"|"we"|"th"|"fr"|"sa"|"su"</spanx>.
                                    </t>
                                    <t>
                                        <spanx style="strong">nthOfPeriod</spanx>: <spanx style="verb">Number</spanx> (optional)
                                        The ordinal part of the BYDAY value in iCalendar
                                        (e.g. <spanx style="verb">"+1"</spanx> or <spanx style="verb">"-3"</spanx>).
                                        If present, rather than representing every occurrence of the weekday defined
                                        in the <spanx style="emph">day</spanx> property of this <spanx style="emph">NDay</spanx>,
                                        it represents only a specific instance within the recurrence period.
                                        The value can be positive or negative, but MUST NOT be
                                        zero. A negative integer means nth-last of period.
                                    </t>

                                </list>

                            </t>
                            <t>
                                <spanx style="strong">byMonthDay</spanx>: <spanx style="verb">Number[]</spanx> (optional)
                                The BYMONTHDAY part from iCalendar. The array MUST have at least one entry if included.

                            </t>
                            <t>
                                <spanx style="strong">byMonth</spanx>: <spanx style="verb">String[]</spanx> (optional)
                                The BYMONTH part from iCalendar. Each entry is a string representation of a number,
                                starting from <spanx style="verb">1</spanx> for the first month in the calendar (e.g. <spanx
                                    style="verb">"1"
                            </spanx> means <spanx style="verb">"January"</spanx> with Gregorian calendar), with an
                                optional <spanx style="verb">"L"</spanx> suffix (see <xref target="RFC7529"/>) for
                                leap months (this MUST be upper-case, e.g. <spanx style="verb">"3L"</spanx>).
                                The array MUST have at least one entry if included.

                            </t>
                            <t>
                                <spanx style="strong">byYearDay</spanx>: <spanx style="verb">Number[]</spanx> (optional)
                                The BYYEARDAY part from iCalendar. The array MUST have at least one entry if included.

                            </t>
                            <t>
                                <spanx style="strong">byWeekNo</spanx>: <spanx style="verb">Number[]</spanx> (optional)
                                The BYWEEKNO part from iCalendar. The array MUST have at least one entry if included.

                            </t>
                            <t>
                                <spanx style="strong">byHour</spanx>: <spanx style="verb">Number[]</spanx> (optional)
                                The BYHOUR part from iCalendar. The array MUST have at least one entry if included.

                            </t>
                            <t>
                                <spanx style="strong">byMinute</spanx>: <spanx style="verb">Number[]</spanx> (optional)
                                The BYMINUTE part from iCalendar. The array MUST have at least one entry if included.

                            </t>
                            <t>
                                <spanx style="strong">bySecond</spanx>: <spanx style="verb">Number[]</spanx> (optional)
                                The BYSECOND part from iCalendar. The array MUST have at least one entry if included.

                            </t>
                            <t>
                                <spanx style="strong">bySetPosition</spanx>: <spanx style="verb">Number[]</spanx> (optional)
                                The BYSETPOS part from iCalendar. The array MUST have at least one entry if included.
                            </t>
                            <t>
                                <spanx style="strong">count</spanx>: <spanx style="verb">Number</spanx> (optional)
                                The COUNT part from iCalendar. This MUST NOT be included if an
                                <spanx style="emph">until</spanx> property is specified.

                            </t>
                            <t>
                                <spanx style="strong">until</spanx>: <spanx style="verb">LocalDate</spanx> (optional)
                                The UNTIL part from iCalendar. This MUST NOT be included if a
                                <spanx style="emph">count</spanx> property is specified. Note
                                that this date is presumed to be in the time zone specified in
                                <spanx style="emph">timeZone</spanx>. It is not a UTC time.
                                As in iCalendar, the until value bounds the recurrence rule inclusively.
                                To allow for using the same bound regardless of the
                                value of the <spanx style="emph">isAllDay</spanx> property, the
                                <spanx style="emph">until</spanx> date time MAY include non-zero time components
                                even for all-day calendar objects.
                            </t>
                        </list>

                    </t>
                    <t>
                        A recurrence rule specifies a set of set of date-times for recurring
                        calendar objects. A recurrence rule has the following semantics. Note,
                        wherever "year", "month" or "day of month" is used, this is within the
                        calendar system given by the "rscale" property, which defaults to
                        gregorian if omitted.

                        <list style="numbers">
                            <t>
                                A set of candidates is generated. This is every second within a
                                period defined by the frequency property:
                                <list style="symbols">
                                    <t>
                                        <spanx style="strong">yearly</spanx>:
                                        every second from midnight on the 1st day of a year
                                        (inclusive) to midnight the 1st day of the following year
                                        (exclusive).

                                        <vspace blankLines="1"/>

                                        If skip is not "omit", the calendar system has leap months
                                        and there is a byMonth property, generate candidates for the
                                        leap months even if they don't occur in this year.

                                        <vspace blankLines="1"/>

                                        If skip is not "omit" and there is a byMonthDay property,
                                        presume each month has the maximum number of days any month
                                        may have in this calendar system when generating candidates,
                                        even if it's more than this month actually has.
                                    </t>
                                    <t>
                                        <spanx style="strong">monthly</spanx>: every second from
                                        midnight on the 1st day of a month (inclusive) to midnight
                                        on the 1st of the following month (exclusive).

                                        <vspace blankLines="1"/>

                                        If skip is not "omit" and there is a byMonthDay property,
                                        presume the month has the maximum number of days any month
                                        may have in this calendar system when generating candidates,
                                        even if it's more than this month actually has.
                                    </t>
                                    <t>
                                        <spanx style="strong">weekly</spanx>: every second from
                                        midnight (inclusive) on the first day of the week (as
                                        defined by the firstDayOfWeek property, or Monday if
                                        omitted), to midnight 7 days later (exclusive).
                                    </t>
                                    <t>
                                        <spanx style="strong">daily</spanx>: every second from
                                        midnight at the start of the day (inclusive) to midnight
                                        at the end of the day (exclusive).
                                    </t>
                                    <t>
                                        <spanx style="strong">hourly</spanx>: every second from
                                        the beginning of the hour (inclusive) to the beginning
                                        of the next hour (exclusive).
                                    </t>
                                    <t>
                                        <spanx style="strong">minutely</spanx>: every second
                                        from the beginning of the minute (inclusive) to the
                                        beginning of the next minute (exclusive).
                                    </t>
                                    <t>
                                        <spanx style="strong">secondly</spanx>: the second
                                        itself, only.
                                    </t>
                                </list>
                            </t>
                            <t>
                                Each date-time candidate is compared against all of the byX
                                properties of the rule except bySetPosition. If any property in
                                the rule does not match the date-time, it is eliminated. Each
                                byX property is an array; the date-time matches the property if
                                it matches any of the values in the array. The properties have
                                the following semantics:
                                <list style="symbols">
                                    <t><spanx style="strong">byMonth</spanx>: the date-time is
                                        in the given month.
                                    </t>
                                    <t><spanx style="strong">byWeekNo</spanx>: the date-time is
                                        in the nth week of the year. Negative numbers mean the
                                        nth last week of the year. This corresponds to weeks
                                        according to week numbering as defined in ISO.8601.2004,
                                        with a week defined as a seven day period, starting on
                                        the firstDayOfWeek property value or Monday if omitted.
                                        Week number one of the calendar year is the first week
                                        that contains at least four days in that calendar year.

                                        <vspace blankLines="1"/>

                                        If the date-time is not valid (this may happen when
                                        generating candidates with a skip property in effect),
                                        it is always eliminated by this property.
                                    </t>
                                    <t><spanx style="strong">byYearDay</spanx>: the date-time is
                                        on the nth day of year. Negative numbers mean the nth
                                        last day of the year.

                                        <vspace blankLines="1"/>

                                        If the date-time is not valid (this may happen when
                                        generating candidates with a skip property in effect),
                                        it is always eliminated by this property.
                                    </t>
                                    <t><spanx style="strong">byMonthDay</spanx>: the date-time
                                        is on the given day of the month. Negative numbers mean
                                        the nth last day of the month.
                                    </t>
                                    <t><spanx style="strong">byDay</spanx>: the date-time is on
                                        the given day of the week. If the day is prefixed by a
                                        number, it is the nth occurrence of that day of the week
                                        within the month (if frequency is monthly) or year (if
                                        frequency is yearly). Negative numbers means nth last
                                        occurrence within that period.
                                    </t>
                                    <t><spanx style="strong">byHour</spanx>: the date-time has
                                        the given hour value.
                                    </t>
                                    <t><spanx style="strong">byMinute</spanx>: the date-time has
                                        the given minute value.
                                    </t>
                                    <t><spanx style="strong">bySecond</spanx>: the date-time has
                                        the given second value.
                                    </t>
                                </list>

                                If a skip property is defined and is not "omit", there may be
                                candidates that do not correspond to valid dates (e.g. 31st
                                Februrary in the gregorian calendar). In this case, the properties
                                MUST be considered in the order above and:

                                <list style="numbers">
                                    <t>After applying the byMonth filter, if the candidate's month is
                                        invalid for the given year increment it
                                        (if skip is "forward") or decrement it (if skip is
                                        "backward") until a valid month is found,
                                        incrementing/decrementing the year as well if you pass
                                        through the  beginning/end of the year. This only applies
                                        to calendar systems with leap months.</t>
                                    <t>After applying the byMonthDay filter, if the day of the month is
                                        invalid for the given month and year, change the date to the
                                        first day of the next month (if skip == "forward") or the last
                                        day of the current month (if skip == "backward").</t>
                                    <t>If any valid date produced after applying the skip is already a
                                        candidate, eliminate the duplicate. (For example after adjusting,
                                        30th Februrary and 31st February would both become the same
                                        "real" date, so one is eliminated as a duplicate.)</t>
                                </list>
                            </t>
                            <t>
                                If a bySetPosition property is included, this is now applied to
                                the ordered list of remaining dates (this property specifies the
                                indexes of date-times to keep; all others should be eliminated.
                                Negative numbers are indexes from the end of the list, with -1
                                being the last item).
                            </t>
                            <t>
                                Any date-times before the start date of the event are eliminated
                                (see below for why this might be needed).
                            </t>
                            <t>
                                If a skip property is included and is not "omit", eliminate any
                                date-times that have already been produced by previous iterations
                                of the algorithm. (This is not possible if skip == "omit".)
                            </t>
                            <t>
                                If further dates are required (we have not reached the until
                                date, or count limit) skip the next (interval - 1) sets of
                                candidates, then continue from step 1.
                            </t>
                        </list>
                      When determining the set of occurrence dates for an event or task, the
                      following extra rules must be applied:
                      <list style="numbers">
                        <t>
                          The start date-time is always the first occurrence in the expansion (and
                          is counted if the recurrence is limited by a "count" property), even if it
                          would normally not match the rule.
                        </t>
                        <t>
                          The first set of candidates to consider is that which would contain the
                          start date-time. This means the first set may include candidates before
                          the start; such candidates are eliminated from the results in step (4) as
                          outlined before.
                        </t>
                        <t>
                          The following properties MUST be implicitly added to the rule under the
                          given conditions:
                          <list style="symbols">
                            <t>
                              If frequency > <spanx style="verb">secondly</spanx> and no bySecond property:
                              Add a bySecond property with the sole value being the seconds value of
                              the start date-time.
                            </t>
                            <t>
                              If frequency > <spanx style="verb">minutely</spanx> and no byMinute property:
                              Add a byMinute property with the sole value being the minutes value of
                              the start date-time.
                            </t>
                            <t>
                              If frequency > <spanx style="verb">hourly</spanx> and no byHour property:
                              Add a byHour property with the sole value being the hours value of the
                              start date-time.
                            </t>
                            <t>
                              If frequency is <spanx style="verb">weekly</spanx> and no byDay property:
                              Add a byDay property with the sole value being the day-of-the-week of
                              the start date-time.
                            </t>
                            <t>
                              If frequency is <spanx style="verb">monthly</spanx> and no byDay property and no byMonthDay
                              property:
                              Add a byMonthDay property with the sole value being the
                              day-of-the-month of the start date-time.
                            </t>
                            <t>
                              If frequency is <spanx style="verb">yearly</spanx> and no byYearDay property:
                              <list style="symbols">
                                <t>
                                  if there are no byMonth or byWeekNo properties, and either there is a
                                  byMonthDay property or there is no byDay property: Add a byMonth property
                                  with the sole value being the month of the start date-time.
                                </t>
                                <t>
                                  if there is no byMonthDay, byWeekNo or byDay properties: Add a byMonthDay
                                  property with the sole value being the day-of-the-month of the start date-time.
                                </t>
                                <t>
                                  if there is a byWeekNo property and no byMonthDay or byDay properties:
                                  Add a byDay property with the sole value being the day-of-the-week of the
                                  start date-time.
                                </t>
                              </list>
                            </t>
                          </list>
                        </t>
                      </list>
                    </t>

                </section>

                <section anchor="recurrenceOverrides" title="recurrenceOverrides">
                    <t>
                        Type:
                        <spanx style="verb">LocalDate[PatchObject]</spanx> (optional)
                    </t>
                    <t>
                        A map of the recurrence-ids (the date-time of the start of the occurrence) to
                        an object of patches to apply to the generated occurrence object.
                    </t>
                    <t>
                        If the recurrence-id does not match an expanded start date from a recurrence rule, it is to be
                        treated as an additional occurrence (like an RDATE from iCalendar). The patch object may often
                        be empty in this case.
                    </t>
                    <t>
                      If the patch object defines the <spanx style="emph">excluded</spanx> property to be
                      <spanx style="verb">true</spanx>, then the recurring calendar object does not occur
                      at the recurrence-id date-time (like an EXDATE from iCalendar). Such a patch object
                      MUST NOT patch any other property.
                    </t>
                    <t>
                        By default, an occurrence inherits all properties from the main object except the start (or due)
                        date-time, which is shifted to the new start time of the LocalDate key. However, individual
                        properties of the occurrence can be modified by a patch, or multiple patches. It is valid to patch
                        the start property value, and this patch takes precedence over the LocalDate key. Both the LocalDate
                        key as well as the patched start date-time may occur before the original JSCalendar object's start or
                        due date.
                    </t>
                    <t>
                        A pointer in the PatchObject MUST NOT start with one of the following prefixes; any patch with
                        such a key MUST be ignored:
                        <list style="symbols">
                            <t>
                                @type
                            </t>
                            <t>
                                uid
                            </t>
                            <t>
                                relatedTo
                            </t>
                            <t>
                                prodId
                            </t>
                            <t>
                                method
                            </t>
                            <t>
                                isAllDay
                            </t>
                            <t>
                                recurrenceRule
                            </t>
                            <t>
                                recurrenceOverrides
                            </t>
                            <t>
                                replyTo
                            </t>
                        </list>
                    </t>
                </section>

              <section anchor="excluded" title="excluded">
                <t>
                  Type:
                  <spanx style="verb">Boolean</spanx> (optional, default:<spanx style="verb">false</spanx>)
                </t>
                <t>
                  Defines if this object is an overridden, excluded instance of a recurring
                  JSCalendar object (also see <xref target="recurrenceOverrides"/>). If this property
                  value is <spanx style="verb">true</spanx>, this calendar object instance MUST be
                  removed from the occurrence expansion.
                </t>
              </section>
            </section>


            <section anchor="sharing-scheduling-properties" title="Sharing and scheduling properties">

                <section anchor="priority" title="priority">
                    <t>
                        Type: <spanx style="verb">Number</spanx> (optional, default:<spanx style="verb">0</spanx>)
                    </t>
                    <t>Specifies a priority for the calendar object. This may be used as part of scheduling systems to help
                        resolve conflicts for a time period.
                    </t>
                    <t>
                        The priority is specified as an integer in the range 0 to 9. A value of 0 specifies an undefined
                        priority. A value of 1 is the highest priority. A value of 2 is the second highest priority.
                        Subsequent numbers specify a decreasing ordinal priority. A value of 9 is the lowest priority.
                        Other integer values are reserved for future use.
                    </t>
                </section>

                <section anchor="freeBusyStatus" title="freeBusyStatus">
                    <t>
                        Type: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">busy</spanx>)
                    </t>
                    <t>Specifies how this property should be treated when calculating free-busy state. The value MUST be
                        one of:
                        <list style="symbols">
                            <t>
                                <spanx style="verb">"free"</spanx>: The object should be ignored when calculating
                                whether the user is busy.
                            </t>
                            <t>
                                <spanx style="verb">"busy"</spanx>: The object should be included when calculating
                                whether the user is busy.
                            </t>
                        </list>

                    </t>
                </section>

                <section anchor="privacy" title="privacy">
                    <t>
                        Type: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">public</spanx>)
                    </t>
                    <t>
                        Calendar objects are normally collected together and may be shared with other users. The privacy
                        property allows the object owner to indicate that it should not be shared, or should only have
                        the time information shared but the details withheld.
                        Enforcement of the restrictions indicated by this property are up to the implementations.
                    </t>
                    <t>
                        This property MUST NOT affect the information sent to scheduled participants; it is only
                        interpreted when the object is shared as part of a shared calendar.
                    </t>
                    <t>
                        The value MUST be either one of the following values, registered in a future RFC, or a
                        vendor-specific value. Vendor specific values MUST be prefixed with a domain name controlled by
                        the vendor, e.g. <spanx style="verb">example.com/topsecret</spanx>. Any value the client or
                        server doesn't understand should be preserved but treated as equivalent to <spanx style="verb">
                        private</spanx>.
                        <list style="symbols">
                            <t>
                                <spanx style="verb">public</spanx>: The full details of the object are visible to those
                                whom the object's calendar is shared with.
                            </t>
                            <t>
                                <spanx style="verb">private</spanx>: The details of the object are hidden; only the
                                basic time and metadata is shared. Implementations MUST ensure the following
                                properties are stripped when the object is accessed by a sharee:
                                <list style="symbols">
                                    <t>
                                        title
                                    </t>
                                    <t>
                                        description
                                    </t>
                                    <t>
                                        locations
                                    </t>
                                    <t>
                                        links
                                    </t>
                                    <t>
                                        locale
                                    </t>
                                    <t>
                                        localizations
                                    </t>
                                    <t>
                                        participants
                                    </t>
                                    <t>
                                        replyTo
                                    </t>
                                </list>
                                In addition, any patches in <spanx style="verb">recurrenceOverrides</spanx> whose key is
                                prefixed with one of the above properties MUST be stripped.

                            </t>
                            <t>
                                <spanx style="verb">secret</spanx>: The object is hidden completely (as though it did
                                not exist) when the calendar is shared.
                            </t>
                        </list>

                    </t>
                </section>

                <section anchor="replyTo" title="replyTo">
                    <t>
                        Type:
                        <spanx style="verb">String[String]</spanx> (optional)
                    </t>
                    <t>
                        Represents methods by which participants may submit their RSVP response to
                        the organizer of the calendar object. The
                        keys in the property value are the available methods and MUST only
                        contain ASCII alphanumeric characters (A-Za-z0-9). The value is a URI to
                        use that method.
                        Future methods may be defined in future specifications; a calendar client
                        MUST ignore any
                        method it does not understand, but MUST preserve the method key and URI.
                        This property MUST be omitted if no method is defined (rather than an
                        empty object). If this property is set, the
                        <spanx style="emph">participants</spanx> property of this calendar object
                        MUST contain at least one participant.
                    </t>
                    <t>
                        The following methods are defined:
                        <list style="symbols">
                            <t>
                                <spanx style="verb">imip</spanx>: The organizer accepts an iMIP
                                <xref target="RFC6047"/>
                                response at this email address.
                                The value MUST be a <spanx style="verb">mailto:</spanx> URI.
                            </t>
                            <t>
                                <spanx style="verb">web</spanx>: Opening this URI in a web browser
                                will provide the user with a page where they can submit a reply
                                to the organizer.
                            </t>
                            <t>
                                <spanx style="verb">other</spanx>:
                                The organizer is identified by this URI but the method how to
                                submit the RSVP is undefined.
                            </t>
                        </list>
                    </t>
                </section>

                <section anchor="participants" title="participants">
                    <t>
                        Type:
                        <spanx style="verb">String[Participant]</spanx> (optional)
                    </t>
                    <t>
                        A map of participant identifiers to participants, describing their participation in the calendar object.
                        A UUID or the base-64 encoded email address of the participant is a good choice for the identifier.
                    </t>
                    <t>
                        If this property is set, then the <spanx style="emph">replyTo</spanx>
                        property of this calendar object MUST define at least one reply method.
                    </t>
                    <t>
                        A <spanx style="strong">Participant</spanx> object has the following properties:
                        <list style="symbols">
                            <t>
                                <spanx style="strong">name</spanx>: <spanx style="verb">String</spanx> (optional) The display name
                                of the participant (e.g. "Joe Bloggs").
                            </t>
                            <t>
                              <spanx style="strong">email</spanx>: <spanx style="verb">String</spanx> (optional)
                                The email address for the participant.
                            </t>
                            <t>
                                <spanx style="strong">sendTo</spanx>: <spanx style="verb">String[String]</spanx>
                                Represents methods by which the participant may receive the invitation
                                and updates to the calendar object.
                                <vspace blankLines="1"/>
                                The keys in the property value are
				the available methods
				and MUST only contain ASCII alphanumeric characters (A-Za-z0-9).
				The value is a URI to use that method.
                                Future methods may be defined in future specifications; a calendar client
                                MUST ignore any
				method it does not understand, but MUST preserve the method key and URI.
				This property MUST be omitted if no method is defined (rather than an
				empty object).
                                <vspace blankLines="1"/>
                                The following methods are defined:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">imip</spanx>: The participant accepts an
                                        iMIP <xref target="RFC6047"/> request at this email address.
                                        The value MUST be a <spanx style="verb">mailto:</spanx> URI.
                                        It MAY be different from the value of the participant's
                                        <spanx style="emph">email</spanx> property.
                                    </t>
                                    <t>
                                        <spanx style="verb">other</spanx>:
                                        The participant is identified by this URI but the method how
                                        to submit the invitation or update is undefined.
                                    </t>
                                </list>
                            </t>
                            <t>
                                <spanx style="strong">kind</spanx>: <spanx style="verb">String</spanx> (optional)
                                What kind of entity this participant is, if known.
                                <vspace blankLines="1"/>
                                This MUST be either one of the following values, registered in a future RFC, or a
                                vendor-specific value. Any value the client or server doesn't understand should be
                                treated the same as if this property is omitted.
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">individual</spanx>: a single person
                                    </t>
                                    <t>
                                        <spanx style="verb">group</spanx>: a collection of people invited as a whole
                                    </t>
                                    <t>
                                        <spanx style="verb">resource</spanx>: a non-human resource, e.g. a projector
                                    </t>
                                    <t>
                                        <spanx style="verb">location</spanx>: a physical location involved in the calendar object
                                        that needs to be scheduled, e.g. a conference room.
                                    </t>
                                </list>
                            </t>

                            <t>
                                <spanx style="strong">roles</spanx>:
                                <spanx style="verb">String[Boolean]</spanx>
                                A set of roles that this participant fulfills.
                                <vspace blankLines="1"/>
                                At least one role MUST be specified for the participant. The keys in the
                                set MUST be either one of the
                                following values, registered in a future RFC, or a vendor-specific value:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">owner</spanx>: The participant is an owner of the object.
                                    </t>
                                    <t>
                                        <spanx style="verb">attendee</spanx>: The participant is an attendee of the
                                        calendar object.
                                    </t>
                                    <t>
                                        <spanx style="verb">chair</spanx>: The participant is in charge of the calendar
                                        object when it occurs.
                                    </t>
                                </list>
                                The value for each key in the set MUST be <spanx style="verb">true</spanx>.
                                Roles that are unknown to the implementation MUST be preserved and MAY be ignored.
                            </t>
                            <t>
                                <spanx style="strong">locationId</spanx>: <spanx style="verb">String</spanx> (optional)
                                The location at which this participant is expected to be attending.
                                <vspace blankLines="1"/>
                                If the value does not correspond to any location id in the <spanx style="emph">locations</spanx>
                                property of the instance, this MUST be treated the same as if the participant's locationId were omitted.

                            </t>
                            <t>
                                <spanx style="strong">participationStatus</spanx>: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">needs-action</spanx>)
                                The participation status, if any, of this participant.
                                <vspace blankLines="1"/>
                                The value MUST be either one of the following values, registered in a future RFC, or a
                                vendor-specific value:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">needs-action</spanx>: No status yet set by the participant.
                                    </t>
                                    <t>
                                        <spanx style="verb">accepted</spanx>: The invited participant will participate.
                                    </t>
                                    <t>
                                        <spanx style="verb">declined</spanx>: The invited participant will not participate.
                                    </t>
                                    <t>
                                        <spanx style="verb">tentative</spanx>: The invited participant may participate.
                                    </t>
                                </list>
                            </t>
                            <t>
                                <spanx style="strong">attendance</spanx>: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">required</spanx>)
                                The required attendance of this participant.
                                <vspace blankLines="1"/>
                                The value MUST be either one of the following values, registered in a future RFC, or a
                                vendor-specific value. Any value the client or server doesn't understand should be
                                treated the same as <spanx style="verb">required</spanx>.
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">none</spanx>: Indicates a participant who is
                                        copied for information purposes only.
                                    </t>
                                    <t>
                                        <spanx style="verb">optional</spanx>: Indicates a participant whose
                                        attendance is optional.
                                    </t>
                                    <t>
                                        <spanx style="verb">required</spanx>: Indicates a participant whose
                                        attendance is required.
                                    </t>
                                </list>
                            </t>
                            <t>
                                <spanx style="strong">expectReply</spanx>: <spanx style="verb">Boolean</spanx> (optional, default:<spanx style="verb">false</spanx>)
                                If true, the organizer is expecting the participant to notify them of their status.
                            </t>
                            <t>
                                <spanx style="strong">scheduleSequence</spanx>: <spanx style="verb">Number</spanx> (optional, default:<spanx style="verb">0</spanx>)
                                The sequence number of the last response from the participant. If defined, this MUST be a non-negative integer.
                                <vspace blankLines="1"/>
                                This can be used to determine whether the participant has sent a new RSVP following
                                significant changes to the calendar object, and to determine if future responses are responding to
                                a current or older view of the data.

                            </t>
                            <t>
                                <spanx style="strong">scheduleUpdated</spanx>: <spanx style="verb">UTCDate</spanx> (optional)
                                The <spanx style="emph">updated</spanx> property of the last iMIP response from the
                                participant.
                                <vspace blankLines="1"/>
                                This can be compared to the <spanx style="emph">updated</spanx> timestamp in future iMIP
                                responses to determine if the response is older or newer than the current data.
                            </t>
                            <t>
                                <spanx style="strong">invitedBy</spanx>: <spanx style="verb">String</spanx> (optional)
                                The participant id of the participant who invited this one, if known.

                            </t>
                            <t>
                                <spanx style="strong">delegatedTo</spanx>: <spanx style="verb">String[Boolean]</spanx> (optional)
                                A set of participant ids that this participant has delegated their
                                participation to.
                                Each key in the set MUST be the identifier of a participant.
                                The value for each key in the set MUST be <spanx style="verb">true</spanx>.
                                This MUST be omitted if none (rather than an empty set).
                            </t>
                            <t>
                                <spanx style="strong">delegatedFrom</spanx>: <spanx style="verb">String[Boolean]</spanx> (optional)
                                A set of participant ids that this participant is acting as a delegate for.
                                Each key in the set MUST be the identifier of a participant.
                                The value for each key in the set MUST be <spanx style="verb">true</spanx>.
                                This MUST be omitted if none (rather than an empty set).
                            </t>
                            <t>
                                <spanx style="strong">memberOf</spanx>: <spanx style="verb">String[Boolean]</spanx> (optional)
                                A set of group participants that were invited to this calendar object, which caused this
                                participant to be invited due to their membership of the group(s).
                                Each key in the set MUST be the identifier of a participant.
                                The value for each key in the set MUST be <spanx style="verb">true</spanx>.
                                This MUST be omitted if none (rather than an empty set).
                            </t>
                            <t>
                                <spanx style="strong">linkIds</spanx>: <spanx style="verb">String[Boolean]</spanx> (optional)
                                A set of links to more information about this participant, for example in vCard format.
                                The keys in the set MUST be the identifier of a Link object in the
                                calendar object's <spanx style="emph">links</spanx> property.
                                The value for each key in the set MUST be <spanx style="verb">true</spanx>.
                                This MUST be omitted if none (rather than an empty set).
                            </t>
                        </list>

                    </t>
                </section>
            </section>

            <section anchor="alerts-properties" title="Alerts properties">

                <section anchor="useDefaultAlerts" title="useDefaultAlerts">
                    <t>
                        Type: <spanx style="verb">Boolean</spanx> (optional, default:<spanx style="verb">false</spanx>)
                    </t>
                    <t>
                        If <spanx style="verb">true</spanx>, use the user's default alerts and ignore the
                        value of the <spanx style="emph">alerts</spanx>
                        property. Fetching user defaults is dependent on the API from which this JSCalendar object is
                        being fetched, and is not defined in this specification.
                        If an implementation cannot determine the user's default alerts, or none
                        are set, it MUST process the alerts property as if
                        useDefaultAlerts is set to <spanx style="verb">false</spanx>.
                    </t>
                </section>

                <section anchor="alerts" title="alerts">
                    <t>
                        Type:
                        <spanx style="verb">String[Alert]</spanx> (optional)
                    </t>
                    <t>
                        A map of alert identifiers to Alert objects, representing alerts/reminders to display or send the user
                        for this calendar object.
                    </t>
                    <t>
                        An <spanx style="strong">Alert</spanx> Object has the following properties:
                        <list style="symbols">
                            <t>
                                <spanx style="strong">offset</spanx>:
                                <spanx style="verb">SignedDuration</spanx>
                                Defines when to trigger the alert, relative to the time property defined in the <spanx style="emph">relativeTo</spanx> property.
                                If the calendar object does not define a time zone,
                                the user's default time zone SHOULD be used when determining the offset,
                                if known. Otherwise, the time zone to use is implementation specific.
                            </t>
                    <t>
                                <spanx style="strong">relativeTo</spanx>: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">start</spanx>)
                                Specifies the time property which the alert <spanx style="emph">offset</spanx> is relative to. The value MUST be one of:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">start</spanx>: triggers the alert relative to the start of the calendar object
                                    </t>
                                    <t>
                                        <spanx style="verb">end</spanx>: triggers the alert relative to the end/due time of the calendar object
                                    </t>
                                </list>
                            </t>
                            <t>
                                <spanx style="strong">acknowledged</spanx>: <spanx style="verb">UTCDate</spanx> (optional)
                                <vspace blankLines="1"/>
                                When the user has permanently dismissed the alert the client MUST set this to
                                the current time in UTC. Other clients which sync this property can then
                                automatically dismiss or suppress duplicate alerts (alerts with the same alert
                                id that triggered on or before this date-time).
                                <vspace blankLines="1"/>
                                For a recurring calendar object, the <spanx style="emph">acknowledged</spanx> property of
                                the parent object MUST be updated, unless the alert is already overridden
                                in <spanx style="emph">recurrenceOverrides</spanx>.
                            </t>
                            <t>
                                <spanx style="strong">snoozed</spanx>: <spanx style="verb">UTCDate</spanx> (optional)
                                <vspace blankLines="1"/>
                                If the user temporarily dismisses the alert, this is the UTC date-time after
                                which it should trigger again.
                                Setting this property on an instance of a recurring calendar object MUST update the alarm
                                on the master object, unless the respective instance already is defined in
                                <spanx style="verb">recurrenceOverrides</spanx>. It MUST NOT generate an override
                                for the sole use of snoozing an alarm.
                            </t>
                            <t>
                                <spanx style="strong">action</spanx>: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">display</spanx>)
                                Describes how to alert the user.
                                <vspace blankLines="1"/>
                                The value MUST  be at most one of the following values,
                                registered in a future RFC, or a vendor-specific value:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">display</spanx>: The alert should be displayed as appropriate for the current device and user context.
                                    </t>
                                    <t>
                                        <spanx style="verb">email</spanx>: The alert should trigger an email sent out to the user, notifying about the alert.
                                        This action is typically only appropriate for server implementations.
                                    </t>
                                </list>
                            </t>
                        </list>
                    </t>
                </section>

            </section>

            <section anchor="localized-props" title="Multilingual properties">
                <section anchor="localizations" title="localizations">
                    <t>
                        Type:
                        <spanx style="verb">String[PatchObject]</spanx> (optional)
                    </t>
                    <t>
                        A map of
                        <xref target="RFC5646"/>
                        language tags to patch objects, which localize the calendar object into the locale of the respective language tag.
                    </t>
                    <t>See the description of <xref target="patchobject-type">PatchObject</xref> for the
                        structure of the PatchObject. The patches are applied to the top-level object.
                      In addition to all the restrictions on patches specified there, the pointer also
                      MUST NOT start with one of the following prefixes; any
                      patch with a such a key MUST be ignored:
                      <list style="symbols">
                        <t>@type</t>
                        <t>due</t>
                        <t>duration</t>
                        <t>freeBusyStatus</t>
                        <t>localization</t>
                        <t>method</t>
                        <t>participants</t>
                        <t>prodId</t>
                        <t>progress</t>
                        <t>relatedTo</t>
                        <t>sequence</t>
                        <t>start</t>
                        <t>status</t>
                        <t>timeZone</t>
                        <t>uid</t>
                        <t>useDefaultAlerts</t>
                      </list>
                      Note that this specification does not define how to maintain validity of
                      localized content. For example, a client application changing a JSCalendar
                      object's title property might also need to update any localizations
                      of this property. Client implementations SHOULD provide the means to
                      manage localizations, but how to achieve this is specific to the
                      application's workflow and requirements.
                    </t>
                </section>
            </section>

        </section>

        <section anchor="jscalendar-object-props" title="Type-specific JSCalendar properties">
            <section anchor="jsevent-props" title="JSEvent properties">
                <t>
                    In addition to the common JSCalendar object <xref target="jscalendar-props">properties</xref> a
                    JSEvent
                    has the following properties:
                </t>

                <section anchor="start" title="start">
                    <t>
                        Type: <spanx style="verb">LocalDate</spanx> e.g.
                        <spanx style="verb">2015-09-02T00:00:00</spanx>
                    </t>
                    <t>
                        The date/time the event would start in the event's time zone.
                    </t>
                    <t>
                        A valid JSEvent MUST include this property.
                    </t>
                </section>

                <section anchor="timeZone" title="timeZone">
                    <t>
                        Type:
                        <spanx style="verb">String|null</spanx> (optional, default:<spanx style="verb">null</spanx>)
                    </t>
                    <t>
                        Identifies the time zone the event is scheduled in, or <spanx style="verb">null</spanx> for
                        floating time. If omitted, this MUST be presumed to be <spanx style="verb">null</spanx>
                        (i.e. floating time).
                    </t>
                </section>

                <section anchor="duration" title="duration">
                    <t>
                        Type: <spanx style="verb">Duration</spanx>, e.g. <spanx style="verb">P2DT3H</spanx>
                        (optional, default: <spanx style="verb">PT0S</spanx>)
                    </t>
                    <t>
                        The zero or positive duration of the event in the event's start time zone.
                        The same rules as for the iCalendar DURATION value type (<xref target="RFC5545"/>)
                        apply:
                        The duration of a week or a day in hours/minutes/seconds may vary if it overlaps a period of discontinuity in the event's time zone, for example a change from standard time to daylight-savings time.
                        Leap seconds MUST NOT be considered when computing an exact duration.
                        When computing an exact duration, the greatest order time components MUST be added first, that is, the number of days MUST be added first, followed by the number of hours, number of minutes, and number of seconds.
                        Fractional seconds MUST be added last.
                    </t>
                    <t>
                        A JSEvent MAY involve start and end locations that are in different time zones (e.g. a trans-continental flight). This can be expressed using the <spanx style="emph">rel</spanx> and <spanx style="emph">timeZone</spanx> properties of the JSEvent's <spanx style="emph">location</spanx> objects.
                    </t>
                </section>

                <section anchor="isAllDay" title="isAllDay">
                    <t>
                        Type: <spanx style="verb">Boolean</spanx> (optional, default:<spanx style="verb">false</spanx>)
                    </t>
                    <t>
                        Specifies if the event is an all day event, such as a birthday or public holiday.
                    </t>
                    <t>
                        If <spanx style="emph">isAllDay</spanx> is true, then the following restrictions apply:
                        <list style="symbols">
                            <t>
                                the <spanx style="emph">start</spanx> property
                                MUST have a time component of <spanx style="verb">T00:00:00</spanx>.
                            </t>
                            <t>
                                the <spanx style="emph">timeZone</spanx> property MUST be <spanx style="verb">null</spanx>
                            </t>
                            <t>
                                the <spanx style="emph">duration</spanx> property MUST NOT include non-zero time components (hours, minutes, or seconds)
                            </t>
                            <t>
                                the <spanx style="emph">freeBusyStatus</spanx> property MUST NOT be <spanx style="verb">busy</spanx>
                            </t>
                          </list>
                    </t>
                </section>
                <section anchor="sharing-scheduling-status-jsevent" title="status">
                    <t>
                        Type: <spanx style="verb">String</spanx> (optional, default:<spanx style="verb">confirmed</spanx>)
                    </t>
                    <t>
                        The scheduling status (<xref target="sharing-scheduling-properties"/>) of a JSEvent.
                        If set, it MUST be one of:
                        <list style="symbols">
                            <t>
                                <spanx style="verb">confirmed</spanx>: Indicates the event is definite.
                            </t>
                            <t>
                                <spanx style="verb">cancelled</spanx>: Indicates the event is cancelled.
                            </t>
                            <t>
                                <spanx style="verb">tentative</spanx>: Indicates the event is tentative.
                            </t>
                        </list>
                    </t>
                </section>

            </section>

            <section anchor="jstask-props" title="JSTask properties">
                <t>
                    In addition to the common JSCalendar object <xref target="jscalendar-props">properties</xref> a
                    JSTask has the following properties:
                </t>

                <section anchor="due-task" title="due">
                    <t>
                        Type: <spanx style="verb">LocalDate</spanx> (optional) e.g.
                        <spanx style="verb">2015-09-02T00:00:00</spanx>
                    </t>
                    <t>
                        The date/time the task is due in the task's time zone.
                    </t>
                </section>
                <section anchor="start-task" title="start">
                    <t>
                        Type: <spanx style="verb">LocalDate</spanx> (optional) e.g.
                        <spanx style="verb">2015-09-02T00:00:00</spanx>
                    </t>
                    <t>
                        The date/time the task should start in the task's time zone.
                    </t>
                </section>
                <section anchor="timeZone-task" title="timeZone">
                    <t>
                        Type:
                        <spanx style="verb">String|null</spanx> (optional, default:<spanx style="verb">null</spanx>)
                    </t>
                    <t>
                        Identifies the time zone the task is scheduled in, or <spanx style="verb">null</spanx> for
                        floating time. If omitted, this MUST be presumed to be <spanx style="verb">null</spanx>
                        (i.e. floating time).
                    </t>
                </section>

                <section anchor="estimatedDuration" title="estimatedDuration">
                    <t>
                        Type: <spanx style="verb">Duration</spanx> (optional), e.g.
                        <spanx style="verb">P2DT3H</spanx>
                    </t>
                    <t>Specifies the estimated positive duration of time the task takes to complete.
                    </t>
                </section>
                <section anchor="statusUpdatedAt" title="statusUpdatedAt">
                    <t>
                        Type: <spanx style="verb">UTCDate</spanx> (optional), e.g.
                        <spanx style="verb">2016-06-13T12:00:00Z</spanx>
                    </t>
                    <t>Specifies the date/time the task status properties was last updated.
                    </t>
                    <t>
                      If the task is recurring and has future instances, a client may want to keep track of the
                      last status update timestamp of a specific task recurrence, but leave other instances
                      unchanged. One way to achieve
                        this is by overriding the statusUpdatedAt property in the task
                        <spanx style="emph">recurrenceOverrides</spanx>.
                        However, this could produce a long list of timestamps for regularly recurring tasks. An
                        alternative approach is to split the JSTask into a current, single instance of JSTask with this
                        instance status update time and a future recurring instance. Also see the definition of the
                        <spanx style="emph">relatedTo</spanx> on splitting.
                    </t>
                </section>

                <section anchor="isAllDay-task" title="isAllDay">
                    <t>
                        Type: <spanx style="verb">Boolean</spanx> (optional, default:<spanx style="verb">false</spanx>)
                    </t>
                    <t>
                        Specifies if the task is an all day task.
                    </t>
                    <t>
                        If <spanx style="emph">isAllDay</spanx> is true, then the following restrictions apply:
                        <list style="symbols">
                            <t>
                                the <spanx style="emph">start</spanx> and <spanx style="emph">due</spanx> properties
                                MUST have a time component of <spanx style="verb">T00:00:00</spanx>, or not be set
                            </t>
                            <t>
                                the <spanx style="emph">timeZone</spanx> property MUST be <spanx style="verb">null</spanx>
                            </t>
                            <t>
                                the <spanx style="emph">freeBusyStatus</spanx> property MUST NOT be <spanx style="verb">busy</spanx>
                            </t>
                        </list>
                    </t>
                </section>

                <section anchor="progress-participant-task" title="progress">
                    <t>
                        In addition to the common properties of a <spanx style="emph">Participant</spanx>
                        object (<xref target="participants"/>), a Participant within a JSTask supports the  following property:
                        <list style="symbols">
                            <t>
                                <spanx style="strong">progress</spanx>:
                                <spanx style="verb">ParticipantProgress</spanx> (optional) The progress of the participant for this task, if known.
                                This property MUST NOT be set if the <spanx style="emph">participationStatus</spanx>
                                of this participant is any other value but <spanx style="verb">accepted</spanx>.
                            </t>
                        </list>
                        <vspace blankLines="1"/>
                        A <spanx style="strong">ParticipantProgress</spanx> object has the following properties:
                        <vspace blankLines="1"/>
                        <list style="symbols">
                            <t>
                                <spanx style="strong">status</spanx>: <spanx style="verb">String</spanx> Describes
                                the completion status of the participant's progress.
                                <vspace blankLines="1"/>
                                The value MUST  be at most one of the following values,
                                registered in a future RFC, or a vendor-specific value:
                                <list style="symbols">
                                    <t>
                                        <spanx style="verb">completed</spanx>: The participant completed their task.
                                    </t>
                                    <t>
                                        <spanx style="verb">in-process</spanx>:  The participant has started this task.
                                    </t>
                                    <t>
                                        <spanx style="verb">failed</spanx>: The participant failed to complete their task.
                                    </t>
                                </list>
                            </t>
                            <t>
                                <spanx style="strong">timestamp</spanx>: <spanx style="verb">UTCDate</spanx> Describes
                                the last time when the participant progress got updated.
                            </t>
                        </list>
                    </t>
                </section>

                <section anchor="status-jstask" title="status">
                    <t>
                        Type: <spanx style="verb">String</spanx>
                    </t>
                    <t>
                      Defines the overall status of this task. If omitted, the default status
                      (<xref target="sharing-scheduling-properties"/>) of a JSTask is defined as follows
                      (in order of evaluation):
                        <list style="symbols">
                            <t>
                                <spanx style="verb">completed</spanx>: if all the <spanx style="emph">ParticipantProgress</spanx>
                                status of the task participants is <spanx style="verb">completed</spanx>.
                            </t>
                            <t>
                                <spanx style="verb">failed</spanx>: if at least one <spanx style="emph">ParticipantProgress</spanx>
                                status of the task participants is <spanx style="verb">failed</spanx>.
                            </t>
                            <t>
                                <spanx style="verb">in-process</spanx>: if at least one <spanx style="emph">ParticipantProgress</spanx>
                                status of the task participants is <spanx style="verb">in-process</spanx>.
                            </t>
                            <t>
                                <spanx style="verb">needs-action</spanx>: If none of the other criteria match.
                            </t>
                          </list>
                      </t>
                      <t>
                          If set, it MUST be one of:
                          <list style="symbols">
                              <t>
                                  <spanx style="verb">needs-action</spanx>: Indicates the task needs action.
                              </t>
                              <t>
                                  <spanx style="verb">completed</spanx>: Indicates the task is completed.
                              </t>
                              <t>
                                  <spanx style="verb">in-process</spanx>: Indicates the task is in process.
                              </t>
                              <t>
                                  <spanx style="verb">cancelled</spanx>: Indicates the task is cancelled.
                              </t>
                              <t>
                                  <spanx style="verb">pending</spanx>: Indicates the task has been created and accepted for processing, but not yet started.
                              </t>
                              <t>
                                  <spanx style="verb">failed</spanx>: Indicates the task failed.
                              </t>
                          </list>
                      </t>
                </section>

            </section>

            <section anchor="jsgroup-props" title="JSGroup properties">
                <t>
                    JSGroup supports the following <xref target="jscalendar-props">JSCalendar properties</xref>:
                    <list style="symbols">
                        <t>
                            @type
                        </t>
                        <t>
                            uid
                        </t>
                        <t>
                            created
                        </t>
                        <t>
                            updated
                        </t>
                        <t>
                            categories
                        </t>
                        <t>
                            keywords
                        </t>
                        <t>
                            name
                        </t>
                        <t>
                            description
                        </t>
                        <t>
                            color
                        </t>
                        <t>
                            links
                        </t>
                    </list>
                    as well as the following JSGroup-specific properties:
                </t>
                <section title="entries">
                    <t>
                        Type: <spanx style="verb">String[JSTask|JSEvent]</spanx>
                    </t>
                    <t>
                        A collection of group members. This is represented as a map of
                        the <spanx style="emph">uid</spanx> property value to the
                        JSCalendar object member having that uid. Implementations MUST ignore
                        entries of unknown type.
                    </t>
                </section>
                <section title="source">
                    <t>
                        Type: <spanx style="verb">String</spanx> (optional)
                    </t>
                    <t>
                        The source from which updated versions of this group may be retrieved from.
                        The value MUST be a URI.
                    </t>
                </section>
            </section>
        </section>

        <section anchor="icalendar-translation" title="Conversion from and to iCalendar">
            <t>
                This section specifies which JSCalendar properties can be mapped from and to iCalendar
                format. Implementations SHOULD follow these conversion guidelines. Still, JSCalendar does not restrict
                itself to iCalendar and conversion between these two formats MAY be lossy.
            </t>
            <section anchor="translate-jsevent" title="JSEvent">
                <t>
                    The iCalendar counterpart to <spanx style="emph">JSEvent</spanx> is the VEVENT component type
                    <xref target="RFC5545"/>. A VEVENT component that is a direct child of a VCALENDAR component is
                    equivalent to a standalone JSEvent. A VEVENT component within a VEVENT
                    maps to the entries of
                    the JSEvent <spanx style="emph">recurrenceOverrides</spanx> property.
                </t>


                <texttable anchor="translate-jsevent-table" title="Translation between JSEvent and iCalendar">
                    <ttcol align='left'>Property</ttcol>
                    <ttcol align='left'>iCalendar counterpart</ttcol>

                    <c>isAllDay</c>
                    <c>
                        True, if the type of the DTSTART property in iCalendar is DATE.
                    </c>

                    <c>start</c>
                    <c>
                        Corresponds to the DTSTART property in iCalendar. Note that time zone information is stored separately in JSEvent.
                    </c>

                    <c>timeZone</c>
                    <c>
                        Corresponds to the TZID part of the DTSTART property in iCalendar.
                        If the event has a different end time zone to start time zone, this should be
                        added as a JSCalendar <spanx style="emph">location</spanx> with just a
                        <spanx style="emph">timeZone</spanx> property and <spanx style="verb">rel="end"</spanx>.
                    </c>

                    <c>duration</c>
                    <c>
                        Corresponds to the DURATION or DSTART+DTEND properties in iCalendar.
                      </c>
                </texttable>

            </section>

            <section anchor="translate-jstask" title="JSTask">
                <t>
                    The iCalendar counterpart to <spanx style="emph">JSTask</spanx> is the VTODO component type
                    <xref target="RFC5545"/>. A VTODO component that is a direct child of a VCALENDAR component is
                    equivalent to a standalone JSTask. A VTODO component within a master
                    VTODO maps to the entries of
                    the JSTask <spanx style="emph">recurrenceOverrides</spanx> property.
                </t>

                <texttable anchor="translate-jstask-table" title="Translation between JSTask and iCalendar">
                <ttcol align='left'>Property</ttcol>
                <ttcol align='left'>iCalendar counterpart</ttcol>

                    <c>isAllDay</c>
                    <c>
                        True, if the type of the DTSTART property in iCalendar is DATE.
                    </c>

                    <c>due</c>
                    <c>
                        Corresponds to the DUE and DTSTART+DURATION properties in iCalendar. When mapping iCalendar
                        VTODOs with DTSTART+DURATION, the due date is the result of adding DURATION to DTSTART in the
                        DTSTART time zone.
                    </c>

                    <c>start</c>
                    <c>
                        Corresponds to the DTSTART property in iCalendar.
                    </c>

                    <c>timeZone</c>
                    <c>
                        Corresponds to the TZID part of the DTSTART/DUE properties in iCalendar.
                        If the task has a different end time zone to start or due time zone, this should be
                        added as a JSCalendar <spanx style="emph">location</spanx> with just a
                        <spanx style="emph">timeZone</spanx> property and <spanx style="verb">rel="end"</spanx>.
                    </c>

                    <c>estimatedDuration</c>
                    <c>
                        Corresponds to the ESTIMATED-DURATION iCalendar
                        property in the RFC draft <xref target="draft-apthorp-ical-tasks"/>.
                    </c>

                    <c>statusUpdatedAt</c>
                    <c>
                      Maps to the COMPLETED iCalendar property. The JSTask status property
                      MUST have value <spanx style="verb">completed</spanx>.
                    </c>

                    <c>progress</c>
                    <c>
                        Corresponds to the PARTSTAT and COMPLETED properties in iCalendar, including the
                        definitions in the RFC draft <xref target="draft-apthorp-ical-tasks"/>.
                    </c>

                    <c>status</c>
                    <c>
                        Corresponds to the STATUS property in iCalendar, including the
                        definitions in the RFC draft <xref target="draft-apthorp-ical-tasks"/>.
                    </c>

                </texttable>
            </section>

            <section title="JSGroup">
                <t>
                    A JSGroup converts to a iCalendar VCALENDAR containing VEVENT or VTODO components.
                </t>

                <texttable anchor="translate-jsgroup-table" title="Translation between JSGroup and iCalendar">
                    <ttcol align='left'>Property</ttcol>
                    <ttcol align='left'>iCalendar counterpart</ttcol>

                    <c>entries</c>
                    <c>
                        The VEVENT and VTODO components within a top-level VCALENDAR component.
                    </c>

                    <c>source</c>
                    <c>
                        Corresponds to the SOURCE property in iCalendar.
                    </c>
                </texttable>
            </section>

            <section title="Common properties">
              <texttable anchor="translate-commonprops-table" title="Translation between JSCalendar and iCalendar">

                <ttcol align='left'>Property</ttcol>
                <ttcol align='left'>iCalendar counterpart</ttcol>

                    <c>alerts</c>
                    <c>
                        An <spanx style="emph">Alert</spanx> corresponds to the VALARM component in iCalendar, where
                        the <spanx style="emph">action</spanx> is determined by the iCalendar ACTION property value
                        (e.g., both <spanx style="verb">DISPLAY</spanx> and <spanx style="verb">AUDIO</spanx> actions
                        map to a JSCalendar <spanx style="emph">display</spanx> action, and similarly for
                        <spanx style="verb">EMAIL</spanx>).
                        The <spanx style="emph">relativeTo</spanx> and <spanx style="emph">offset</spanx> properties
                        corresponds to the iCalendar TRIGGER property.
                    </c>

                    <c>categories</c>
                    <c>
                        Corresponds to the CONCEPT property in iCalendar,
                        see in the RFC draft <xref target="draft-ietf-calext-ical-relations"/>.
                    </c>

                    <c>color</c>
                    <c>
                        Corresponds to the COLOR property in iCalendar, as specified in <xref target="RFC7986"/>.
                    </c>

                    <c>created</c>
                    <c>
                        Corresponds to the CREATED property in iCalendar.
                    </c>

                    <c>description</c>
                    <c>
                        Corresponds to the DESCRIPTION property and its ALTREP parameters in iCalendar.
                    </c>
                    <c>descriptionContentType</c>
                    <c>
                      Implementation-specific.
                    </c>

                    <c>freeBusyStatus</c>
                    <c>
                        Corresponds to the TRANSP property in iCalendar.
                    </c>

                    <c>keywords</c>
                    <c>
                        Corresponds to the CATEGORIES property in iCalendar, as specified in <xref target="RFC7986"/>.
                    </c>

                    <c>links</c>
                    <c>
                      Use the ATTACH (<xref target="RFC5545"/>), URL or IMAGE (<xref target="RFC7986"/>)
                      property values of URI value type as the Link <spanx style="emph">href</spanx>.
                      The Link <spanx style="emph">type</spanx> property
                      corresponds to the FMTTYPE parameter, the <spanx style="emph">size</spanx>
                      property to the SIZE parameter.
                      Mapping all other properties is implementation-specific.
                    </c>

                    <c>locale</c>
                    <c>
                        Corresponds to the LANGUAGE parameter in iCalendar, which is added to individual properties.
                        When converting from iCalendar, one language must be picked as the main locale for the
                        object, and all properties in other languages moved to the localizations JSEvent property.
                    </c>

                    <c>localizations</c>
                    <c>
                        Implementation-specific.
                    </c>

                    <c>locations</c>
                    <c>
                        See <xref target="translate-locations-participants"/>.
                    </c>

                    <c>method</c>
                    <c>
                      Corresponds to the METHOD property of the embedding VCALENDAR in iCalendar.
                    </c>

                    <c>participants</c>
                    <c>
                        See <xref target="translate-locations-participants"/>.
                    </c>

                    <c>priority</c>
                    <c>
                        Corresponds to the PRIORITY property in iCalendar.
                    </c>

                    <c>privacy</c>
                    <c>
                        Corresponds to the CLASS property in iCalendar.
                    </c>

                    <c>prodId</c>
                    <c>
                        Corresponds to the PRODID property in iCalendar.
                    </c>

                    <c>recurrenceOverrides</c>
                    <c>
                        Corresponds to the RDATE and EXDATE properties in iCalendar, plus VEVENT (for JSEvent) or
                        VTODO (for JSTask) instances with a recurrence-id.
                    </c>

                    <c>recurrenceRule</c>
                    <c>
                        Corresponds to the RRULE property in iCalendar. For all-day calendar objects,
                        convert the <spanx style="emph">until</spanx> property value to an iCalendar
                        DATE (effectively removing the time component). To convert a DATE-typed UNTIL
                        from iCalendar, set the time components of the LocalDate value to
                        <spanx style="verb">23:59:59</spanx>. If the iCalendar UNTIL value is a
                        UTC date time, convert to the local time in the calendar object time zone.
                    </c>

                    <c>relatedTo</c>
                    <c>
                        Corresponds to the RELATED-TO property in iCalendar.
                    </c>

                    <c>replyTo</c>
                    <c>
                      An iCalendar ORGANIZER with a mailto: URI mapped to the
                        <spanx style="verb">imip</spanx> method, or any other
                        URI mapped to the <spanx style="verb">other</spanx>
                        method. Mapping multiple methods is implementation-specific.
                    </c>

                    <c>sequence</c>
                    <c>
                        Corresponds to the SEQUENCE property in iCalendar.
                    </c>

                    <c>status</c>
                    <c>
                        Corresponds to the STATUS property in iCalendar (converted to lower-case).
                    </c>

                    <c>title</c>
                    <c>
                        Corresponds to the SUMMARY property in iCalendar.
                    </c>

                    <c>uid</c>
                    <c>
                        Corresponds to the UID property in iCalendar.
                    </c>

                    <c>updated</c>
                    <c>
                        Corresponds to the DTSTAMP and LAST-MODIFIED properties in iCalendar. (These are only
                        different in the iTIP case, and the difference is not actually useful.)
                    </c>
                </texttable>
            </section>

            <section anchor="translate-locations-participants" title="Locations and participants">
                <t>
                    Both JSCalendar participants and locations have counterparts in iCalendar
                    but provide richer representation.
                    <vspace blankLines="1"/>
                    The following table outlines translation of JSCalendar participants. Where
                    iCalendar has distinct properties for ORGANIZER and ATTENDEE, these are merged
                    in JSCalendar into the Participant object type.
                </t>
                <texttable anchor="translate-participants-table"
                  title="Translation of Participant between JSCalendar and iCalendar">
                    <ttcol align='left'>Property</ttcol>
                    <ttcol align='left'>iCalendar counterpart</ttcol>
                    <c>delegatedFrom</c>
                    <c>
                        the DELEGATED-FROM parameter
                    </c>

                    <c> delegatedTo</c>
                    <c>
                      the DELEGATED-TO parameter
                    </c>
                    <c>
                        expectReply
                    </c>
                    <c>
                        the RSVP parameter
                    </c>

                    <c>email</c>
                    <c>
                        The value of the EMAIL parameter of the ORGANIZER or ATTENDEE property, if
                        defined. Otherwise the property value, if it is a mailto: URI.
                    </c>
                    <c>sendTo</c>
                    <c>
                        An iCalendar ATTENDEE with a mailto: URI mapped to the
                        <spanx style="verb">imip</spanx> method, or any other
                        URI mapped to the <spanx style="verb">other</spanx>
                        method. Mapping multiple methods is implementation-specific.
                    </c>
                    <c>
                        kind
                    </c>
                    <c>
                        the CUTYPE parameter
                    </c>
                    <c>
                        linkIds
                    </c>
                    <c>
                        Implementation-specific.
                    </c>
                    <c>
                        locationId
                    </c>
                    <c>
                        Implementation-specific. When mapping from iCalendar to JSCalendar this
                        may be the JSCalendar identifier of a CONFERENCE property that has the
                        MODERATOR feature defined in its FEATURE parameter values. If multiple
                        such CONFERENCE properties are defined in iCalendar, then the one with the
                        most interactive features is chosen.
                    </c>
                    <c>
                        memberOf
                    </c>
                    <c>
                        the MEMBER parameter
                    </c>
                    <c>
                        name
                    </c>
                    <c>
                        the CN parameter
                    </c>
                    <c>
                        attendance
                    </c>
                    <c>
                      Maps to the standard iCalendar ROLE parameter values REQ-PARTICIPANT, OPT-PARTICIPANT and
                      NON-PARTICIPANT.
                    </c>
                    <c>
                        roles
                    </c>
                    <c>
                      The <spanx style="verb">chair</spanx> role maps to the standard iCalendar ROLE
                      parameter value <spanx style="verb">chair</spanx>, with an implicit participant
                      of value <spanx style="verb">required</spanx>. The mapping of non-required chairs
                      and other roles is implementation-specific, but using <spanx style="verb">x-name</spanx>
                      parameter values is recommended.
                    </c>
                    <c>
                        participationStatus
                    </c>
                    <c>
                        the PARTSTAT parameter
                    </c>
                    <c>
                        scheduleSequence
                    </c>
                    <c>
                        the SEQUENCE property of the participant's latest iMIP message
                    </c>
                    <c>
                        scheduleUpdated
                    </c>
                    <c>
                        the DTSTAMP property of the participant's latest iMIP message
                    </c>
                </texttable>
                <t>
                    The iCalendar counterpart for JSCalendar Location objects is the iCalendar
                    <xref target="RFC5545"/> LOCATION property, or implementation-specific.
                  </t>
                <texttable anchor="translate-locations-table"
                  title="Translation of Location between JSCalendar and iCalendar">
                    <ttcol align='left'>Property</ttcol>
                    <ttcol align='left'>iCalendar counterpart</ttcol>
                    <c>
                       name
                    </c>
                    <c>
                      Corresponds to the LOCATION property value.
                    </c>
                    <c>
                       description
                    </c>
                    <c>
                      Implementation-specific.
                    </c>
                    <c>
                       rel
                    </c>
                    <c>
                      Implementation-specific.
                    </c>
                    <c>
                       timeZone
                    </c>
                    <c>
                      Implementation-specific.
                    </c>
                    <c>
                       coordinates
                    </c>
                    <c>
                      Implementation-specific. Consider using a GEO iCalendar property, along with one LOCATION.
                      </c>
                    <c>
                       uri
                    </c>
                    <c>
                      Corresponds to the LOCATION ALTREP parameter.
                    </c>
                    <c>
                      linkIds
                    </c>
                    <c>
                      Implementation-specific.
                    </c>
                </texttable>
                <t>
                    The iCalendar counterpart for JSCalendar VirtualLocation objects is the iCalendar
                    <xref target="RFC7986"/> CONFERENCE property, or implementation-specific.
                </t>
                <texttable anchor="translate-virtualLocations-table"
                  title="Translation of VirtualLocation between JSCalendar and iCalendar">
                    <ttcol align='left'>Property</ttcol>
                    <ttcol align='left'>iCalendar counterpart</ttcol>
                    <c>
                        name
                    </c>
                    <c>
                        Corresponds to the CONFERENCE LABEL parameter.
                    </c>
                    <c>
                        description
                    </c>
                    <c>
                        Implementation-specific.
                    </c>
                    <c>
                        uri
                    </c>
                    <c>
                        Corresponds to the CONFERENCE property value.
                    </c>
                </texttable>
            </section>

            <section title="Unknown properties">
                <t>
                    Both JSCalendar and iCalendar calendar objects may contain properties that are
                    not expressible in the other format. This specification does not mandate how to
                    preserve these properties. Instead, it leaves negotiation on how to treat unknown
                    properties to client and server implementations and their protocol used to exchange
                    calendar objects.
                    <vspace blankLines="1"/>
                    Two notable options to represent and preserve arbitrary iCalendar object
                    properties in JSCalendar are:
                    <list style="symbols">
                        <t>
                            <spanx style="emph">JCal</spanx>: Define iCalendar properties in JCal
                            format
                            (<xref target="RFC7265"/>) in a vendor-specific property of the
                            JCalendar
                            object. The JCal-formatted value may either only contain iCalendar
                            properties that were not mapped to JSCalendar properties, or contain the
                            complete iCalendar object representation.
                        </t>
                        <t>
                            <spanx style="emph">Alternate link</spanx>: Define an alternate link
                            (<xref target="links"/>)
                            value pointing to the iCalendar representation of the JSCalendar object.
                            E.g. the alternative representation of a VEVENT would be represented as
                            a link with rel <spanx style="verb">alternate</spanx> and type
                            <spanx style="verb">text/calendar;component=VEVENT</spanx>.
                        </t>
                    </list>
                </t>
            </section>
        </section>

        <section anchor="examples" title="JSCalendar object examples">
            <t>
                The following examples illustrate several aspects of the JSCalendar data model and format.
                The examples may omit mandatory or additional properties, which is indicated by a
                placeholder property with key <spanx style="verb">...</spanx>. While most of the
                examples use calendar event objects, they are also illustrative for tasks.
            </t>
	     <!-- EXAMPLES START -->

<section anchor="example-simple-event" title="Simple event">
    <t>
    This example illustrates a simple one-time event. It specifies a one-time event that begins on January 15, 2018 at 1pm New York local time and ends after 1 hour.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "@type": "jsevent",
  "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f1",
  "updated": "2018-01-15T18:00:00Z",
  "title": "Some event",
  "start": "2018-01-15T13:00:00",
  "timeZone": "America/New_York",
  "duration": "PT1H"
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-simple-task" title="Simple task">
    <t>
    This example illustrates a simple task for a plain to-do item.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "@type": "jstask",
  "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f2",
  "updated": "2018-01-15T18:00:00Z",
  "title": "Do something"
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-simple-group" title="Simple group">
    <t>
    This example illustrates a simple calendar object group that contains an event and a task.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "@type": "jsgroup",
  "uid": "2a358cee-6489-4f14-a57f-c104db4dc343",
  "updated": "2018-01-15T18:00:00Z",
  "name": "A simple group",
  "entries": [
    {
      "@type": "jsevent",
      "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f1",
      "updated": "2018-01-15T18:00:00Z",
      "title": "Some event",
      "start": "2018-01-15T13:00:00",
      "timeZone": "America/New_York",
      "duration": "PT1H"
    },
    {
      "@type": "jstask",
      "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f2",
      "updated": "2018-01-15T18:00:00Z",
      "title": "Do something"
    }
  ]
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-all-day-event" title="All-day event">
    <t>
    This example illustrates an event for an international holiday. It specifies an all-day event on April 1 that occurs every year since the year 1900.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "April Fool's Day",
  "isAllDay": true,
  "start": "1900-04-01T00:00:00",
  "duration": "P1D",
  "recurrenceRule": {
    "frequency": "yearly"
  }
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-due-task" title="Task with a due date">
    <t>
    This example illustrates a task with a due date. It is a reminder to buy groceries before 6pm Vienna local time on January 19, 2018. The calendar user expects to need 1 hour for shopping.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Buy groceries",
  "due": "2018-01-19T18:00:00",
  "timeZone": "Europe/Vienna",
  "estimatedDuration": "PT1H"
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-zoned-event-endtz" title="Event with end time-zone">
    <t>
    This example illustrates the use of end time-zones by use of an international flight. The flight starts on April 1, 2018 at 9am in Berlin local time. The duration of the flight is scheduled at 10 hours 30 minutes. The time at the flights destination is in the same time-zone as Tokyo. Calendar clients could use the end time-zone to display the arrival time in Tokyo local time and highlight the time-zone difference of the flight. The location names can serve as input for navigation systems.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Flight XY51 to Tokyo",
  "start": "2018-04-01T09:00:00",
  "timeZone": "Europe/Berlin",
  "duration": "PT10H30M",
  "locations": {
    "2a358cee-6489-4f14-a57f-c104db4dc2f1": {
      "rel": "start",
      "name": "Frankfurt Airport (FRA)"
    },
    "c2c7ac67-dc13-411e-a7d4-0780fb61fb08": {
      "rel": "end",
      "name": "Narita International Airport (NRT)",
      "timeZone": "Asia/Tokyo"
    }
  }
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-floating-event" title="Floating-time event (with recurrence)">
    <t>
    This example illustrates the use of floating-time. Since January 1, 2018, a calendar user blocks 30 minutes every day to practice Yoga at 7am local time, in whatever time-zone the user is located on that date.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Yoga",
  "start": "2018-01-01T07:00:00",
  "duration": "PT30M",
  "recurrenceRule": {
    "frequency": "daily"
  }
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-multi-location-event" title="Event with multiple locations and localization">
    <t>
    This example illustrates an event that happens at both a physical and a virtual location. Fans can see a live convert on premises or online. The event title and descriptions are localized.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Live from Music Bowl: The Band",
  "description": "Go see the biggest music event ever!",
  "locale": "en",
  "start": "2018-07-04T17:00:00",
  "timeZone": "America/New_York",
  "duration": "PT3H",
  "locations": {
    "c0503d30-8c50-4372-87b5-7657e8e0fedd": {
      "name": "The Music Bowl",
      "description": "Music Bowl, Central Park, New York",
      "coordinates": "geo:40.7829,73.9654"
    }
  },
  "virtualLocations": {
    "6f3696c6-1e07-47d0-9ce1-f50014b0041a": {
      "name": "Free live Stream from Music Bowl",
      "uri": "https://stream.example.com/the_band_2018"
    }
  },
  "localizations": {
    "de": {
      "title": "Live von der Music Bowl: The Band!",
      "description": "Schau dir das größte Musikereignis an!",
      "virtualLocations/6f3696c6-1e07-47d0-9ce1-f50014b0041a/name":
                              "Gratis Live-Stream aus der Music Bowl"
    }
  }
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-recurring-overrides" title="Recurring event with overrides">
    <t>
    This example illustrates the use of recurrence overrides. A math course at a University is held for the first time on January 8, 2018 at 9am London time and occurs every week until June 25, 2018. Each lecture lasts for one hour and 30 minutes and is located at the Mathematics department. This event has exceptional occurrences: at the last occurrence of the course is an exam, which lasts for 2 hours and starts at 10am. Also, the location of the exam differs from the usual location. On April 2 no course is held. On January 5 at 2pm is an optional introduction course, that occurs before the first regular lecture.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "Calculus I",
  "start": "2018-01-08T09:00:00",
  "timeZone": "Europe/London",
  "duration": "PT1H30M",
  "locations": {
    "2a358cee-6489-4f14-a57f-c104db4dc2f1": {
      "title": "Math lab room 1",
      "description": "Math Lab I, Department of Mathematics"
    }
  },
  "recurrenceRule": {
    "frequency": "weekly",
    "until": "2018-06-25T09:00:00"
  },
  "recurrenceOverrides": {
    "2018-01-05T14:00:00": {
      "title": "Introduction to Calculus I (optional)"
    },
    "2018-04-02T09:00:00": {
      "excluded": "true"
    },
    "2018-06-25T09:00:00": {
      "title": "Calculus I Exam",
      "start": "2018-06-25T10:00:00",
      "duration": "PT2H",
      "locations": {
        "2a358cee-6489-4f14-a57f-c104db4dc2f1": {
          "title": "Big Auditorium",
          "description": "Big Auditorium, Other Road"
        }
      }
    }
  }
}
          ]]></artwork>
    </figure>
</section>
<section anchor="example-recurring-participants" title="Recurring event with participants">
    <t>
    This example illustrates scheduled events. A team meeting occurs every week since January 8, 2018 at 9am Johannesburg time. The event owner also chairs the event. Participants meet in a virtual meeting room. An attendee has accepted the invitation, but on March 8, 2018 he is unavailable and declined participation for this occurrence.
    </t>
    <figure>
          <artwork><![CDATA[
{
  "...": "",
  "title": "FooBar team meeting",
  "start": "2018-01-08T09:00:00",
  "timeZone": "Africa/Johannesburg",
  "duration": "PT1H",
  "virtualLocations": {
    "2a358cee-6489-4f14-a57f-c104db4dc2f1": {
      "name": "ChatMe meeting room",
      "uri": "https://chatme.example.com?id=1234567"
    }
  },
  "recurrenceRule": {
    "frequency": "weekly"
  },
  "replyTo": {
    "imip": "mailto:6489-4f14-a57f-c1@schedule.example.com"
  },
  "participants": {
    "dG9tQGZvb2Jhci5leGFtcGxlLmNvbQ": {
      "name": "Tom Tool",
      "email": "tom@foobar.example.com",
      "sendTo": {
        "imip": "mailto:6489-4f14-a57f-c1@calendar.example.com"
      },
      "participationStatus": "accepted",
      "roles": {
        "attendee": true
      }
    },
    "em9lQGZvb2Jhci5leGFtcGxlLmNvbQ": {
      "name": "Zoe Zelda",
      "email": "zoe@foobar.example.com",
      "sendTo": {
        "imip": "mailto:zoe@foobar.example.com"
      },
      "participationStatus": "accepted",
      "roles": {
        "owner": true,
        "attendee": true,
        "chair": true
      }
    },
    "...": ""
  },
  "recurrenceOverrides": {
   "2018-03-08T09:00:00": {
  "participants/dG9tQGZvb2Jhci5leGFtcGxlLmNvbQ/participationStatus":
                                                           "declined"
    }
  }
}
          ]]></artwork>
    </figure>
</section>

            <!-- EXAMPLES END -->
        </section>

        <section anchor="security-considerations" title="Security Considerations">
            <t>
                The use of JSON as a format does have its own inherent security risks as discussed in Section 12 of
                <xref target="RFC8259"/>. Even though JSON is considered a safe subset of JavaScript, it should be kept in
                mind that a flaw in the parser processing JSON could still impose a threat, which doesn't arise with
                conventional iCalendar data.
            </t>
            <t>
                With this in mind, a parser for JSON data aware of the security implications should be used for the
                format described in this document. For example, the use of JavaScript's
                <spanx style="verb">eval()</spanx> function is considered an unacceptable security risk, as described
                in Section 12 of<xref target="RFC8259"/>. A native parser with full awareness of the JSON format should
                be preferred.
            </t>
        </section>

        <section anchor="iana-considerations" title="IANA Considerations">
            <t>
                This document defines a MIME media type for use with JSCalendar data
                formatted in JSON.
            </t>
            <t>
                <list style='hanging'>
                    <t hangText="Type name:">application</t>
                    <t hangText="Subtype name:">jscalendar+json</t>
                    <t hangText="Required parameters:">type
                        <vspace blankLines="1"/>
                        The <spanx style="verb">type</spanx> parameter conveys the type of
                        the JSCalendar data in the body part, with the value being one of
                        <spanx style="verb">jsevent</spanx>, <spanx style="verb">jstask</spanx>,
                        or <spanx style="verb">jsgroup</spanx>.
                        The parameter MUST NOT occur more than once.
                        It MUST match the value of the <spanx style="verb">@type</spanx>
                        property of the JSON-formatted JSCalendar object in the body.
                    </t>
                    <t hangText="Optional parameters:">none</t>
                    <t hangText="Encoding considerations:">
                        Same as encoding considerations of application/json as specified in <xref target="RFC8259">RFC8529, Section 11</xref>.
                    </t>
                    <t hangText="Security considerations:">
                        See <xref target='security-considerations'/> of this document.
                    </t>
                    <t hangText="Interoperability considerations:">
                        This media type provides an alternative to iCalendar, jCal and
                        proprietary JSON-based calendaring data formats.
                    </t>
                    <t hangText="Published specification:">
                        This specification.
                    </t>
                    <t hangText="Applications that use this media type:">
                        Applications that currently make use of the text/calendar and
                        application/calendar+json media types can use this as an alternative.
                        Similarily, applications that use the application/json media type
                        to transfer calendaring data can use this to further specify the
                        content.
                    </t>
                    <t hangText="Fragment identifier considerations:">N/A</t>
                    <t hangText="Additional information:">
                        <list style='hanging'>
                            <t hangText="Magic number(s):">N/A</t>
                            <t hangText="File extensions(s):">N/A</t>
                            <t hangText="Macintosh file type code(s):">N/A</t>
                        </list>
                    </t>
                    <t hangText="Person &amp; email address to contact for further
                        information:">
                        calext@ietf.org
                    </t>
                    <t hangText="Intended usage:">COMMON</t>
                    <t hangText="Restrictions on usage:">N/A</t>
                    <t hangText="Author:">
                        See the "Author's Address" section of this document.
                    </t>
                    <t hangText="Change controller:">IETF</t>
                </list>
            </t>
        </section>

        <section anchor="acknowledgments" title="Acknowledgments">
            <t>
                The authors would like to thank the members of CalConnect for their valuable contributions. This
                specification originated from the work of the API technical committee of CalConnect, the Calendaring and
                Scheduling Consortium.
            </t>
        </section>
    </middle>

    <back>
        <references title="Normative References">
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2392.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3339.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4122.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4791.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5545.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5546.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5646.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5870.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6047.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6838.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6901.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7265.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7493.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7529.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7808.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7986.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"?>
            <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml"?>
        </references>
        <references title="Informative References">
            <reference anchor="draft-apthorp-ical-tasks"
                       target="https://tools.ietf.org/html/draft-apthorp-ical-tasks">
                <front>
                    <title>Task Extensions to iCalendar</title>
                    <author/>
                    <date/>
                </front>
            </reference>
            <reference anchor="draft-ietf-calext-ical-relations"
                       target="https://tools.ietf.org/html/draft-ietf-calext-ical-relations">
                <front>
                    <title>Support for iCalendar Relationships</title>
                    <author/>
                    <date/>
                </front>
              </reference>
            <reference anchor="MIME"
              target="https://www.iana.org/assignments/media-types/media-types.xhtml">
                <front>
                    <title>IANA Media Types</title>
                    <author/>
                    <date/>
                </front>
            </reference>

        </references>
    </back>
</rfc>
