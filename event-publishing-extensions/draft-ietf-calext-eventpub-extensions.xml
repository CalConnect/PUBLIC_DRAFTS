<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
  <!ENTITY RFC2426 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2426.xml">
  <!ENTITY RFC3986 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
  <!ENTITY RFC4589 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4589.xml">
  <!ENTITY RFC5545 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5545.xml">
  <!ENTITY RFC5546 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5546.xml">
  <!ENTITY RFC6638 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6638.xml">
  <!ENTITY RFC7986 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7986.xml">
  <!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
  <!ENTITY RFC8259 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8259.xml">
  <!ENTITY W3C.REC-html51-20171003 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.REC-html51-20171003.xml">
  <!ENTITY W3C.REC-xml-20081126 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.REC-xml-20081126.xml">
]>

<rfc category="std" updates="5545"
     docName="draft-ietf-calext-eventpub-extensions-16" ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
  <?rfc strict="yes" ?>
  <?rfc toc="yes"?>
  <?rfc tocdepth="5"?>
  <?rfc symrefs="yes"?>
  <?rfc sortrefs="yes" ?>
  <?rfc compact="yes" ?>
  <?rfc subcompact="no" ?>
  <front>
    <title abbrev="Event Publishing Extensions to iCalendar">Event Publishing Extensions to iCalendar</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <author initials="M." surname="Douglass" fullname="Michael Douglass">
      <organization abbrev="Spherical Cow Group">Spherical Cow Group</organization>
      <address>
        <postal>
          <street>226 3rd Street</street>
          <city>Troy</city>
          <region>NY</region>
          <code>12180</code>
          <country>USA</country>
        </postal>
        <email>mdouglass@sphericalcowgroup.com</email>
        <uri>http://sphericalcowgroup.com</uri>
      </address>
    </author>

    <date day='9' month='October' year='2019' />

    <area>Applications</area>

    <keyword>icalendar</keyword>

    <keyword>properties</keyword>

    <abstract>
      <t>
        This specification updates RFC5545 by
        introducing a number of new iCalendar
        properties and components which are of particular use for event
        publishers and in social networking.
      </t>
      <t>
        This specification also defines a new STRUCTURED-DATA property for
        iCalendar RFC5545 to allow for data  that is directly pertinent
        to an event or task to be included with the calendar data.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
        The currently existing iCalendar standard <xref target='RFC5545'/> lacks
        useful methods for referencing additional, external information
        relating to calendar components. Additionally there is no standard 
        way to provide rich text descriptions or meta-data associated with 
        the event.
      </t>

      <t>
        Current practice is to embed this information as links 
        in the description or to add non-standard properties as defined in
        <xref target='RFC5545'/> section 3.8.8.2.
      </t>
      
      <t>
        This document updates <xref target='RFC5545'/> to define a
        number of properties and a component referencing such external
        information that can provide additional information about an iCalendar
        component. The intent is to allow interchange of such information between
        applications or systems (e.g., between clients, between client and  server,
        and between servers). Formats such as vCard <xref target='RFC2426'/> are likely to be
        most useful to the receivers of such events as they may be used
        in other applications - such as address books.
      </t>

      <section anchor="conventions" title='Conventions Used in This Document'>
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
          "MAY", and "OPTIONAL" in this document are to be interpreted as
          described in BCP 14 <xref target='RFC2119'/>
          <xref target='RFC8174'/> when, and only when, they
          appear in all capitals, as shown here.
        </t>
      </section>

      <section anchor="terms" title='Terms Used in This Document'>
        <t>
          <list style='hanging'>
            <t hangText="Event:">
              When the word 'event' is used (perhaps with a capitalised 'E'
              we are referring to gatherings, formal or informal. For example
              a sports event, a party or a concert.
            </t>
            <t hangText="Social Calendaring:">
              Historically, calendar data and scheduling has been heavily
              biased towards meetings in a corporate environment. Some of
              the features defined in this document are to support a more
              informal, i.e. social, model. For example, we may want to
              record who is participating in a public event.
            </t>
          </list>
        </t>
      </section>
    </section>

    <section title="Components and properties">
      <t>
        Previous extensions to the calendaring standards have been largely
        restricted to the addition of properties or parameters. This is
        partly because iCalendar libraries had trouble handling components
        nested deeper than those defined in <xref target='RFC5545'/>.
      </t>
      
      <t>
        In a break with this 'tradition' this specification defines
        PARTICIPANT as a component rather than a property. This
        is a better match for the way <xref target='W3C.REC-xml-20081126'/>
        and JSON <xref target='RFC8259'/> handle such structures
        and allows richer definitions.  
      </t>

      <t>
        It also allows for the addition of extra properties inside the
        component and resolves some of the problems of trying to add 
        detailed information as a parameter.
      </t>

      <t>
        Many people or groups may participate in an event. The
        PARTICIPANT component provides such detailed information.
        Participants may
        act as attendees to the event (or derived events) or may just
        provide a reference - perhaps for mailing lists.
      </t>
    </section>

    <section title="Typed References">
      <t>
        The properties defined here can all reference external meta-data which
        may be used by applications to
        provide enhanced value to users. By providing type information
        as parameters, clients and servers are able to discover interesting
        references and make use of them, perhaps for indexing or the
        presenting of additional related information for the user.
      </t>

      <t>
        The <xref target='RFC5545'/> LOCATION property provides only
        an unstructured single text value for specifying the location where an event
        (or task) will occur. This is inadequate for use cases where
        structured location information (e.g. address, region, country,
        postal code) is required or preferred, and limits widespread adoption of
        iCalendar in those settings.
      </t>

      <t>
        Using STRUCTURED-LOCATION, rich information about multiple
        locations can be communicated, for example, address, region,
        country, postal code as well as other information such as the
        parking, restaurants and
        the venue. Servers and clients can retrieve the objects when
        storing the event and use them to index by geographic location.
      </t>

      <t>
        When a calendar client receives a calendar component it can search the
        set of supplied properties looking for those of particular interest.
        The TYPE and FMTTYPE parameters, if supplied, can be used to help the
        selection.
      </t>

      <t>
        The PARTICIPANT component is designed to handle common use cases in
        event
        publication. It is generally important to provide information
        about the organizers of such events. Sponsors wish to be
        referenced in a prominent manner. In social calendaring it is
        often important to identify the active participants in the event,
        for example a school sports team, and the inactive participants,
        for example the parents.
      </t>

      <t>
        The PARTICIPANT component can also be used to provide useful
        extra data about an attendee. For example a LOCATION property
        inside the PARTICIPANT gives the actual location of a remote
        attendee. (But see the note about privacy.)
      </t>

      <section title="Use Cases">
        <t>
          The main motivation for these properties has been event publication but
          there are opportunities for use elsewhere. The following use cases will
          describe some possible scenarios.
        </t>

        <section title="Piano Concert Performance">
          <t>
            In putting together a concert there are many participants: piano tuner,
            performer, stage hands etc. In addition there are sponsors and various
            contacts to be provided. There will also be a number of related locations.
            A number of events can be created, all of
            which relate to the performance in different ways.
          </t>

          <t>
            There may be an iTip <xref target='RFC5546'/> meeting 
            request for the piano tuner who will arrive
            before the performance. Other members of staff may also receive meeting
            requests.
          </t>

          <t>
            An event can also be created for publication which will have a PARTICIPANT
            component for the pianist providing  a reference to vCard
            <xref target='RFC2426'/> information about the performer.
            This event would also hold information about parking, local subway stations
            and the venue itself. In addition, there may be sponsorship information
            for sponsors of the event and perhaps paid sponsorship properties
            essentially advertising local establishments.
          </t>
        </section>

        <section title="Itineraries">
          <t>
            These additions also provide opportunities for the travel industry.
            When booking a flight the PARTICIPANT component can be used to provide
            references to businesses at the airports and to car hire businesses
            at the destination.
          </t>

          <t>
            The embedded location information can guide the traveler at the airport
            or to their final destination. The contact information can provide
            detailed information about the booking agent, the airlines, car hire
            companies and the hotel.
          </t>

          <section title="Reserving facilities">
            <t>
              For a meeting, the size of a room and the equipment needed
              depends to some extent on the number of attendees actually
              in the room.
            </t>

            <t>
              A meeting may have 10 attendees none of which are co-located.
              The current ATTENDEE property does not allow for the addition
              of such meta-data. The PARTICIPANT property allows attendees to
              specify their location.
            </t>
          </section>
        </section>
      </section>
    </section>

    <section title="Modifications to Calendar Components">
      <t>
        The following changes to the syntax defined in
        <xref target='RFC5545'>iCalendar</xref> are made here. New elements are
        defined in subsequent sections.
      <figure>
        <artwork name="abnf"><![CDATA[

eventc     = "BEGIN" ":" "VEVENT" CRLF
            eventprop *alarmc *participantc
            "END" ":" "VEVENT" CRLF
            
eventprop =/ *(
              ;
              ; The following are OPTIONAL,
              ; and MAY occur more than once.
              ;
              styleddescription / strucloc / strucres / sdataprop
              ;
              )

todoc      = "BEGIN" ":" "VTODO" CRLF
            todoprop *alarmc *participantc
            "END" ":" "VTODO" CRLF

todoprop =/ *(
             ;
             ; The following are OPTIONAL,
             ; and MAY occur more than once.
             ;
             styleddescription / strucloc / strucres / sdataprop
             ;
             )

journalc   = "BEGIN" ":" "VJOURNAL" CRLF
            jourprop *participantc
            "END" ":" "VJOURNAL" CRLF


jourprop =/ *(
             ;
             ; The following are OPTIONAL,
             ; and MAY occur more than once.
             ;
             styleddescription / sdataprop
             ;
             )

freebusyc  = "BEGIN" ":" "VFREEBUSY" CRLF
            fbprop *participantc
            "END" ":" "VFREEBUSY" CRLF

fbprop     =/ *(
             ;
             ; The following are OPTIONAL,
             ; and MAY occur more than once.
             ;
             styleddescription
             ;
             )

]]></artwork>
        </figure>
      </t>
    </section>

    <section anchor="new_property_parameters"
             title="New Property Parameters">
      <t>
        This specification makes use of the LABEL parameter
        which is defined in <xref target='RFC7986'/>
      </t>
      
      <section anchor="parameter_loctype"
               title="Loctype">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              LOCTYPE
            </t>

            <t hangText="Purpose:">
              To specify the type(s) of a location.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>

                <artwork type="abnf">
  loctypeparam   = "LOCTYPE" "=" quoted-string
                                 *("," quoted-string)
                </artwork>
              </figure>
            </t>

            <t hangText="Description:">
              This parameter MAY be specified on STRUCTURED-LOCATION and
              provides a way to differentiate multiple properties. For example,
              it allows event producers to provide location information for
              the venue and the parking.
            </t>

            <t>
              Multiple values may be used if the location has multiple
              purposes, for example a hotel and a restaurant.
            </t>

            <t>
              Values for this parameter are taken from the values defined in
              <xref target='RFC4589'/> section 3. New location types SHOULD be
              registered in the manner laid down in section 5 of that specification.
            </t>
          </list>
        </t>
      </section>

      <section anchor="parameter_restype"
               title="Restype">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              RESTYPE
            </t>

            <t hangText="Purpose:">
              To specify the type of resource.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>

                <artwork type="abnf">
  restypeparam  = "RESTYPE" "=" restypevalue CRLF

  restypevalue  = ("ROOM"
                  / "PROJECTOR"
                  / "REMOTE-CONFERENCE-AUDIO"
                  / "REMOTE-CONFERENCE-VIDEO"
                  / iana-token)     ; Other IANA-registered
                                    ; values

                </artwork>
              </figure>
            </t>

            <t hangText="Description:">
              This parameter MAY be specified on STRUCTURED-RESOURCE and
              provides a way to differentiate multiple properties.
            </t>

            <t>
              The registered values are described below.
              New resource types SHOULD be
              registered in the manner laid down in this specification.
            </t>

            <t hangText="ROOM:" >
              A room for the event/meeting.
            </t>

            <t hangText="PROJECTOR:">
              Projection equipment.
            </t>

            <t hangText="REMOTE-CONFERENCE-AUDIO:">
              Audio remote conferencing facilities.
            </t>

            <t hangText="REMOTE-CONFERENCE-VIDEO:">
              Video remote conferencing facilities.
            </t>
          </list>
        </t>
      </section>

      <section anchor="parameter_order"
               title="Order">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              ORDER
            </t>

            <t hangText="Purpose:">
              To define ordering for the associated property.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>

                <artwork type="abnf">
  orderparam    = "ORDER" "=" integer ;Must be greater than or equal to 1
                </artwork>
              </figure>
            </t>

            <t hangText="Description:">
              The ORDER parameter is OPTIONAL and is used to indicate the
              relative ordering of the corresponding instance of a property.
              Its value MUST be an integer greater than or equal to 1 that
              specifies the order with 1 being the first in the ordering.
            </t>

            <t>
              When the parameter is absent, the default MUST be to interpret the
              property instance as being at the lowest level of ordering, that is, 
              the property will appear after any other instances of the 
              same property with any value of ORDER.
            </t>

            <t>
              When any ORDER parameters have the same value all the associated
              properties appear as a group within which there is no
              defined order.
            </t>

            <t>
              Note that the value of this parameter is to be interpreted only in
              relation to values assigned to other corresponding instances of
              the same property in the same entity.
            </t>

            <t>
              This parameter MUST NOT be applied to a property that does not
              allow multiple instances.
            </t>

            <t hangText="Example uses:">
              The ORDER may be applied to the PARTICIPANT-TYPE property
              to indicate the relative importance of the participant, for
              example as a sponsor or a performer.  For example, ORDER=1 could
              define the principal performer or soloist.
            </t>
          </list>
        </t>
      </section>

      <section title="Schema" 
               anchor="parameter_schema">
        <t>
          <list style="hanging">
            <t hangText="Parameter Name:">
              SCHEMA
            </t>
            
            <t hangText="Purpose:">
              To specify the schema used for the content of a 
              "STRUCTURED-DATA" property value.
            </t>
            
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>

                <artwork name="abnf"><![CDATA[
  schemaparam    = "SCHEMA" "=" DQUOTE uri DQUOTE
]]></artwork>
              </figure>
            </t>
            
            <t hangText="Description:">
              This property parameter SHOULD be specified on 
              "STRUCTURED-DATA" properties. When present it provides 
              identifying information about the nature of the content 
              of the corresponding "STRUCTURED-DATA" property value. 
              This can be used to supplement the media type information 
              provided by the "FMTTYPE" parameter on the corresponding 
              property.
            </t>
            
            <t hangText="Example:">
              <figure>
                <artwork><![CDATA[
  STRUCTURED-DATA;FMTTYPE=application/ld+json;
   SCHEMA="https://schema.org/FlightReservation";
   ENCODING=BASE64;VALUE=BINARY:ICAgIDxzY3JpcHQgdHlwZT0iYXBwb
    GljYXRpb24vbGQranNvbiI+CiAgICB7CiAgICAgICJAY29
    udGV4dCI6ICJodHRwOi8vc2NoZW1hLm9yZyIsCiAgICAgICJAdHlwZSI
    6ICJGbGlnaHRSZXNlcnZhdGlvbiIsCiAgICAgICJyZXNlcnZhdGlvbkl
    kIjogIlJYSjM0UCIsCiAgICAgICJyZXNlcnZhdGlvblN0YXR1cyI6ICJ
    odHRwOi8vc2NoZW1hLm9yZy9SZXNlcnZhdGlvbkNvbmZpcm1lZCIsCiA
    gICAgICJwYXNzZW5nZXJQcmlvcml0eVN0YXR1cyI6ICJGYXN0IFRyYWN
    rIiwKICAgICAgInBhc3NlbmdlclNlcXVlbmNlTnVtYmVyIjogIkFCQzE
    yMyIsCiAgICAgICJzZWN1cml0eVNjcmVlbmluZyI6ICJUU0EgUHJlQ2h
    lY2siLAogICAgICAidW5kZXJOYW1lIjogewogICAgICAgICJAdHlwZSI
    6ICJQZXJzb24iLAogICAgICAgICJuYW1lIjogIkV2YSBHcmVlbiIKICA
    gICAgfSwKICAgICAgInJlc2VydmF0aW9uRm9yIjogewogICAgICAgICJ
    AdHlwZSI6ICJGbGlnaHQiLAogICAgICAgICJmbGlnaHROdW1iZXIiOiA
    iVUExMTAiLAogICAgICAgICJwcm92aWRlciI6IHsKICAgICAgICAgICJ
    AdHlwZSI6ICJBaXJsaW5lIiwKICAgICAgICAgICJuYW1lIjogIkNvbnR
    pbmVudGFsIiwKICAgICAgICAgICJpYXRhQ29kZSI6ICJDTyIsCiAgICA
    gICAgICAiYm9hcmRpbmdQb2xpY3kiOiAiaHR0cDovL3NjaGVtYS5vcmc
    vWm9uZUJvYXJkaW5nUG9saWN5IgogICAgICAgIH0sCiAgICAgICAgInN
    lbGxlciI6IHsKICAgICAgICAgICJAdHlwZSI6ICJBaXJsaW5lIiwKICA
    gICAgICAgICJuYW1lIjogIlVuaXRlZCIsCiAgICAgICAgICAiaWF0YUN
    vZGUiOiAiVUEiCiAgICAgICAgfSwKICAgICAgICAiZGVwYXJ0dXJlQWl
    ycG9ydCI6IHsKICAgICAgICAgICJAdHlwZSI6ICJBaXJwb3J0IiwKICA
    gICAgICAgICJuYW1lIjogIlNhbiBGcmFuY2lzY28gQWlycG9ydCIsCiA
    gICAgICAgICAiaWF0YUNvZGUiOiAiU0ZPIgogICAgICAgIH0sCiAgICA
    gICAgImRlcGFydHVyZVRpbWUiOiAiMjAxNy0wMy0wNFQyMDoxNTowMC0
    wODowMCIsCiAgICAgICAgImFycml2YWxBaXJwb3J0IjogewogICAgICA
    gICAgIkB0eXBlIjogIkFpcnBvcnQiLAogICAgICAgICAgIm5hbWUiOiA
    iSm9obiBGLiBLZW5uZWR5IEludGVybmF0aW9uYWwgQWlycG9ydCIsCiA
    gICAgICAgICAiaWF0YUNvZGUiOiAiSkZLIgogICAgICAgIH0sCiAgICA
    gICAgImFycml2YWxUaW1lIjogIjIwMTctMDMtMDVUMDY6MzA6MDAtMDU
    6MDAiCiAgICAgIH0KICAgIH0KICAgIDwvc2NyaXB0Pg==
]]></artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>

      <section title="Derived"
               anchor="parameter_derived">
        <t>
          <list style="hanging">
            <t hangText="Parameter Name:">
              DERIVED
            </t>

            <t hangText="Purpose:">
              To specify that the value of the associated property is
              derived from some other property value or values.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>

                <artwork name="abnf"><![CDATA[
  derivedparam    = "DERIVED" "=" ("TRUE" / "FALSE")
  ; Default is FALSE
]]></artwork>
              </figure>
            </t>

            <t hangText="Description:">
              This property parameter MAY be specified on any property
              when the value is derived from some other property or
              properties. When present with a value of TRUE clients MUST NOT update
              the property.
            </t>

            <t>
              As an example, if a STYLED-DESCRIPTION property is present with
              FMTTYPE="application/rtf" then there may be an additional
              STYLED-DESCRIPTION property with FMTTYPE="text/html" and
              DERIVED=TRUE and a value created from the rtf value.
            </t>

            <t hangText="Example:">
              <figure>
                <artwork><![CDATA[
  STYLED-DESCRIPTION;FMTTYPE=text/html;
   DERIVED=TRUE:<html>...
]]></artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>
    </section>

    <section anchor="new_properties"
             title="New Properties">
      <section anchor="participant-type"
               title="Participant Type">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              PARTICIPANT-TYPE
            </t>

            <t hangText="Purpose:">
              To specify the type of participant.
            </t>

            <t hangText="Value type:">
              The value type for this property is TEXT.  The
              allowable values are defined below.
            </t>

            <t hangText="Property Parameters:">
              Non-standard parameters can be specified on this property.
            </t>

            <t hangText="Conformance:">
              This property MUST be specified once within a PARTICIPANT component.
            </t>

            <t hangText="Description:">
              This property defines the type of participation in events 
              or tasks. Participants can be individuals
              or organizations, for example a soccer team, the spectators, or
              the musicians.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>

                <artwork type="abnf">
   participanttype   = "PARTICIPANT-TYPE" partvalueparam ":"
                       partvalue CRLF

   partvalue    = ("ACTIVE"
                  / "INACTIVE"
                  / "SPONSOR"
                  / "CONTACT"
                  / "BOOKING-CONTACT"
                  / "EMERGENCY-CONTACT"
                  / "PUBLICITY-CONTACT"
                  / "PLANNER-CONTACT"
                  / "PERFORMER"
                  / "SPEAKER"
                  / iana-token)     ; Other IANA-registered
                                    ; values

   partvalueparam   = *(
                  ; the following is OPTIONAL
                  ; and MAY occur more than once
                  ;
                  (";" other-param)
                  )

                </artwork>
              </figure>
            </t>

            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this property:
                </preamble>

                <artwork type="abnf">
   PARTICIPANT-TYPE:SPEAKER
                </artwork>
              </figure>
            </t>
          </list>
        </t>

        <t>
          The registered values for the PARTICIPANT-TYPE property have
          the meanings described here:

          <list style='hanging'>
            <t hangText="ACTIVE:" >
              A participant taking an active role - for example a team member.
            </t>

            <t hangText="INACTIVE:">
              A participant taking an inactive part - for example an audience member.
            </t>

            <t hangText="SPONSOR:">
              A sponsor of the event. The ORDER parameter may be used with this
              participant type to define the relative order of multiple sponsors.
            </t>
            <t hangText="CONTACT:">
              Contact information for the event. The ORDER parameter may be used with this
              participant type to define the relative order of multiple contacts.
            </t>

            <t hangText="BOOKING-CONTACT:">
              Contact information for reservations or payment
            </t>

            <t hangText="EMERGENCY-CONTACT:">
              Contact in case of emergency
            </t>

            <t hangText="PUBLICITY-CONTACT:">
              Contact for publicity
            </t>

            <t hangText="PLANNER-CONTACT:">
              Contact for the event planner or organizer
            </t>

            <t hangText="PERFORMER:">
              A performer - for example the soloist or the accompanist.  The
              ORDER parameter may be used with this participant type to define
              the relative order of multiple performers. For example, ORDER=1 could
              define the principal performer or soloist.
            </t>

            <t hangText="SPEAKER:">
              Speaker at an event
            </t>
          </list>
        </t>
      </section>

      <section anchor="calendar-address"
               title="Calendar Address">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              CALENDAR-ADDRESS
            </t>

            <t hangText="Purpose:">
              To specify the calendar address for a participant.
            </t>

            <t hangText="Value type:">
              CAL-ADDRESS
            </t>

            <t hangText="Property Parameters:">
              IANA, non-standard, language, calendar user
              type, group or list membership, participation role, participation
              status, RSVP expectation, delegatee, delegator, sent by, common
              name, or directory entry reference property parameters can be
              specified on this property.
            </t>

            <t>
              Additionally the schedule agent and schedule status
              parameters as defined in <xref target='RFC6638'/>
              may be specified.
            </t>

            <t hangText="Conformance:">
              This property MAY be specified once within a PARTICIPANT component.
            </t>

            <t hangText="Description:">
              This property provides a calendar user address for the
              participant. If there is an ATTENDEE property with the same
              value then the participant is schedulable.
            </t>

            <t>
              If there is a related ATTENDEE proeprty then all
              parameters must be applied in that property.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>

                <artwork type="abnf">
   calendaraddress   = "CALENDAR-ADDRESS" caladdressparam ":"
                  cal-address CRLF

    caladdressparam   = *(
                  ;
                  ; The following are OPTIONAL,
                  ; but MUST NOT occur more than once.
                  ;
                  (";" cutypeparam) / (";" memberparam) /
                  (";" roleparam) / (";" partstatparam) /
                  (";" rsvpparam) / (";" deltoparam) /
                  (";" delfromparam) / (";" sentbyparam) /
                  (";" cnparam) / (";" dirparam) /
                  (";" languageparam) /
                  (";" scheduleagentparam) /
                  (";" schedulestatusparam) /
                  ;
                  ; The following is OPTIONAL,
                  ; and MAY occur more than once.
                  ;
                  (";" other-param)
                  ;
                  )
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>

      <section anchor="styled-description"
               title="Styled-Description">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              STYLED-DESCRIPTION
            </t>

            <t hangText="Purpose:">
              This property provides for one or more rich-text descriptions to
              replace that provided by the DESCRIPTION property.
            </t>

            <t hangText="Value type:">
              There is no default value type for this property.  The value type
              can be set to URI or TEXT. Other text-based value types
              can be used when defined in the future. Clients MUST ignore any properties
              with value types they do not understand.
            </t>

            <t hangText="Property Parameters:">
              IANA, non-standard, id, alternate text
              representation, format type, derived and language property
              parameters can be specified on this property.
            </t>

            <t hangText="Conformance:">
              The property can be specified multiple times in the "VEVENT", "VTODO",
              "VJOURNAL", "VFREEBUSY", "PARTICIPANT", or "VALARM" calendar components.
            </t>

            <t>
              If it does appear more than once there MUST be exactly one
              instance of the property with no DERIVED parameter or DERIVED=FALSE.
              All others MUST have DERIVED=TRUE.
            </t>

            <t>
              Additionally, if there is one or more STYLED-DESCRIPTION
              property then the DESCRIPTION property should be either absent
              or have the parameter DERIVED=TRUE.
            </t>

            <t hangText="Description:">
              This property supports rich-text descriptions, for example HTML.
              Event publishers typically wish to provide more and better
              formatted information about the event.
            </t>

            <t>
              This property is used in the "VEVENT" and "VTODO" to
              capture lengthy textual descriptions associated with the activity.
              This property is used in the "VJOURNAL" calendar component to
              capture one or more textual journal entries.
              This property is used in the "VALARM" calendar component to
              capture the display text for a DISPLAY category of alarm, and to
              capture the body text for an EMAIL category of alarm.
              In the PARTICIPANT component it provides a detailed description
              of the participant.
            </t>

            <t>
              VALUE=TEXT is used to provide rich-text inline as the property
              value.
            </t>

            <t>
              VALUE=URI is used to provide a link to rich-text content which is
              expected to be displayed inline as part of the event.
            </t>

            <t>
              In either case the DESCRIPTION property should be absent or
              contain a plain text rendering of the styled text.
            </t>
            
            <t>
              Applications MAY attempt to guess the media type of the
              resource via inspection of its content if and only if the media
              type of the resource is not given by the "FMTTYPE" parameter.  If
              the media type remains unknown, calendar applications SHOULD treat
              it as type "text/html" and process the content as defined in
              <xref target='W3C.REC-html51-20171003'/>
            </t>

            <t>
              Multiple STYLED-DESCRIPTION properties may be used to provide
              different formats or different language variants. However
              all but one MUST have DERIVED=TRUE.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>

                <artwork>
  styleddescription = "STYLED-DESCRIPTION" styleddescparam ":"
                  styleddescval CRLF

  styleddescparam   = *(
                  ; The following is REQUIRED,
                  ; but MUST NOT occur more than once.
                  ;
                  (";" "VALUE" "=" ("URI" / "TEXT")) /
                  ;
                  ; The following are OPTIONAL,
                  ; but MUST NOT occur more than once.
                  ;
                  (";" altrepparam) / (";" languageparam) /
                  (";" fmttypeparam) / (";" derivedparam) /
                  ;
                  ; the following is OPTIONAL
                  ; and MAY occur more than once
                  ;
                  (";" other-param)
                  )

  styleddescval   = ( uri / text )
  ;Value MUST match value type

                </artwork>
              </figure>
            </t>

            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this property.  It points to an
                  html description.
                </preamble>

                <artwork>
       STYLED-DESCRIPTION;VALUE=URI:http://example.org/desc001.html
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>

      <section anchor="structured-location"
               title="Structured-Location">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              STRUCTURED-LOCATION
            </t>

            <t hangText="Purpose:">
              This property provides a typed reference to external information
              about the location of an event or optionally a plain text typed value.
            </t>

            <t hangText="Value type:">
              There is no default value type for this property.  The value type
              can be set to URI or TEXT. 
            </t>

            <t hangText="Property Parameters:">
              IANA, non-standard, label, loctype, related or format type parameters can be
              specified on this property.
            </t>

            <t hangText="Conformance:">
              This property MAY be specified zero or more times in any iCalendar
              component.
            </t>

            <t hangText="Description:">
              There may be a number of locations associated with an event.
              This provides detailed information about these locations.
            </t>

            <t>
              When used in a component the value of this property provides
              information about the event venue or of related services such as
              parking, dining, stations etc..
            </t>

            <t>
              When a LABEL parameter is supplied the language of the label SHOULD
              match that of the content and of the LANGUAGE parameter if present.
            </t>

            <t hangText="Use of the related parameter:">
              This allows a location to define the start and/or end timezone
              of the associated component. If a location is specified
              with a RELATED parameter then the affected DTSTART or
              DTEND properties MUST be specified as floating DATE-TIME value.
            </t>

            <t>
              If the RELATED parameter is present with a value of START,
              then the "DTSTART" property MUST be present in the associated "VEVENT" or "VTODO"
              calendar component.
            </t>

            <t>
              For an event, if the RELATED parameter is present with a
              value of END, then the "DTEND" property or
              the "DTSTART" and "DURATION " properties MUST be present in the
              associated "VEVENT" calendar component.
            </t>

            <t>
              For a to-do with a RELATED value of END, then either
              the "DUE" property or the "DTSTART" and "DURATION " properties
              MUST be present in the associated "VTODO" calendar component.
            </t>

            <t>
              If there is a location specified with RELATED=START and
              no location is specified with RELATED=END then the event is
              assumed to start and end in the same timezone.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>

                <artwork>
  strucloc        = "STRUCTURED-LOCATION" struclocparam ":"
                    struclocval CRLF

  struclocparam   = *(
                  ; The following is REQUIRED,
                  ; but MUST NOT occur more than once.
                  ;
                  (";" "VALUE" "=" ("URI" / "TEXT")) /
                  ;
                  ; the following are OPTIONAL
                  ; but MUST NOT occur more than once
                  ;
                  (";" fmttypeparam) /
                  (";" labelparam) /
                  (";" languageparam) /
                  (";" trigrelparam) /
                  (";" loctypeparam) /
                  ;
                  ; the following is OPTIONAL
                  ; and MAY occur more than once
                  ;
                  (";" other-param)
                  )

  struclocval   = ( uri / text )
  ;Value MUST match value type

                </artwork>
              </figure>
            </t>

            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this property.  It points to a
                  venue.
                </preamble>

                <artwork>
                 STRUCTURED-LOCATION;LABEL="The venue";
                   VALUE=URI:
                   http://dir.example.com/venues/big-hall.vcf
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>

      <section anchor="structured-resource"
               title="Structured-Resource">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              STRUCTURED-RESOURCE
            </t>

            <t hangText="Purpose:">
              This property provides a typed reference to external information
              about a resource or optionally a plain text typed value.
              Typically a resource is anything that
              might be required or used by a calendar entity and possibly has a
              directory entry.
            </t>

            <t hangText="Value type:">
              There is no default value type for this property. The value type
              can be set to URI or TEXT.
            </t>

            <t hangText="Property Parameters:">
              IANA, non-standard, label, restype or format type parameters can be
              specified on this property.
            </t>

            <t hangText="Conformance:">
              The property can be specified multiple times in the
              "VEVENT" or "VTODO" calendar components.
            </t>

            <t hangText="Description:">
              When used in a component the value of this property provides
              information about resources used for the event such as
              rooms, projectors, conferencing capabilities.
            </t>

            <t>
              Such resources may be a room or a projector. This RESTYPE
              value registry provides a place in which resource types
              may be registered for use by scheduling services.
            </t>

            <t>
              When a LABEL parameter is supplied the language of the label must
              match that of the content and of the LANGUAGE parameter if present.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>

                <artwork>
  strucres       = "STRUCTURED-RESOURCE" strucresparam ":"
                    strucresval CRLF

  strucresparam  = *(
                  ; The following is REQUIRED,
                  ; but MUST NOT occur more than once.
                  ;
                  (";" "VALUE" "=" ("URI" / "TEXT")) /
                  ;
                  ; the following are OPTIONAL
                  ; but MUST NOT occur more than once
                  ;
                  (";" fmttypeparam) /
                  (";" labelparam) /
                  (";" languageparam) /
                  (";" restypeparam) /
                  ;
                  ; the following is OPTIONAL
                  ; and MAY occur more than once
                  ;
                  (";" other-param)
                  )

  strucewaval   = ( uri / text )
  ;Value MUST match value type

                </artwork>
              </figure>
            </t>

            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this property. It refers to a
                  projector.
                </preamble>

                <artwork>
                 STRUCTURED-RESOURCE;value=uri;restype="projector":
                   http://dir.example.com/projectors/3d.vcf
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>

      <section title="Structured-Data" anchor="structured-data">
        <t>
          <list style="hanging">
            <t hangText="Property Name:">
              STRUCTURED-DATA
            </t>
            
            <t hangText="Purpose:">
              This property specifies ancillary data associated with 
              the calendar component.
            </t>
            <t hangText="Value Type:">
              TEXT, BINARY or URI
            </t>
            
            <t hangText="Property Parameters:">
              IANA, non-standard, inline encoding, and value data type 
              property parameters can be specified on this property. 
              The format type and schema parameters can be specified 
              on this property and are RECOMMENDED for text or inline 
              binary encoded content information.
            </t>
            
            <t hangText="Conformance:">
              This property can be specified multiple times in an 
              iCalendar object. Typically it would be used in "VEVENT", 
              "VTODO", or "VJOURNAL" calendar components.
            </t>
            
            <t hangText="Description:">
              The existing
              properties in iCalendar cover key elements of events and tasks
              such as start time, end time, location, summary, etc. However,
              different types of events often have other specific "fields"
              that it is useful to include in the calendar data. For example,
              an event representing an airline flight could include the airline,
              flight number, departure and arrival airport codes, check-in
              and gate-closing times etc. As another example, a sporting event
              might contain information about the type of sport, the home and
              away teams, the league the teams are in, information about
              nearby parking, etc.
            </t>

            <t>
              This property is used to specify ancillary data in some
              structured format either directly (inline) as a "TEXT" or 
              "BINARY" value, or as a link via a "URI" value.
            </t>

            <t>
              Rather than define new iCalendar properties
              for the variety of event types that might occur, it would be
              better to leverage existing schemas for such data.
              For example, schemas available at https://schema.org include
              different event types. By using standard schemas, interoperability
              can be improved between calendar clients and non-calendaring
              systems that wish to generate or process the data.
            </t>

            <t>
              This property allows the direct inclusion of ancillary data whose
              schema is defined elsewhere. This property also includes parameters
              to clearly identify the type of the schema being used so that
              clients can quickly and easily spot what is relevant within the
              calendar data and present that to users or process it within
              the calendaring system.
            </t>

            <t>
              iCalendar does support an "ATTACH" property which can be used
              to include documents or links to documents within the calendar
              data. However, that property does not allow data to be included
              as a "TEXT" value (a feature that "STRUCTURED-DATA" does allow),
              plus attachments are often treated as "opaque" data to be
              processed by some other system rather than the calendar client.
              Thus the existing "ATTACH" property is not sufficient to cover
              the specific needs of inclusion of schema data. Extending the
              "ATTACH" property to support a new value type would likely cause
              interoperability problems. Additionally some implementations
              manage attachments by stripping them out and replacing with a
              link to the resource. Thus a new property to support
              inclusion of schema data is warranted.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>

                <artwork name="abnf"><![CDATA[
  sdataprop   = "STRUCTURED-DATA" sdataparam 
                    (":" text) /
                    (
                      ";" "ENCODING" "=" "BASE64"
                      ";" "VALUE" "=" "BINARY"
                      ":" binary
                    ) /
                    (
                      ";" "VALUE" "=" "URI"
                      ":" uri
                    )
                    CRLF
  
  sdataparam  = *(
                   ;
                   ; The following is OPTIONAL for a URI value,
                   ; REQUIRED for a TEXT or BINARY value,
                   ; and MUST NOT occur more than once.
                   ;
                   (";" fmttypeparam) /
                   (";" schemaparam) /
                   ;
                   ; The following is OPTIONAL,
                   ; and MAY occur more than once.
                   ;
                   (";" other-param)
                   ;
                )
]]></artwork>
              </figure>
            </t>
            
            <t hangText="Example:">
              The following is an example of this property:
              <figure>
                <artwork><![CDATA[
  STRUCTURED-DATA;FMTTYPE=application/ld+json;
   SCHEMA="https://schema.org/SportsEvent";
   VALUE=TEXT:{\n
     "@context": "http://schema.org"\,\n
     "@type": "SportsEvent"\,\n
     "homeTeam": "Pittsburgh Pirates"\,\n
     "awayTeam": "San Francisco Giants"\n
   }\n
]]></artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>
    </section>

    <section anchor="new_components"
             title="New Components">
      <section anchor="participant"
               title="Participant">
        <t>
          <list style='hanging'>
            <t hangText="Component name:">
              PARTICIPANT
            </t>

            <t hangText="Purpose:">
              This component provides information about a participant
              in an event or task.
            </t>

            <t hangText="Conformance:">
              This component can be specified multiple times in a
              "VEVENT", "VTODO", "VJOURNAL", or "VFREEBUSY" calendar component.
            </t>

            <t hangText="Description:">
              This component provides information about a participant
              in an event, task or poll. A participant may be an attendee
              in a scheduling sense and the ATTENDEE property may be
              specified in addition.
              Participants in events can be individuals
              or organizations, for example a soccer team, the spectators, or
              the musicians.
            </t>
            
            <t>
              STRUCTURED-DATA properties if present may refer to
              external definitions of the participant - such as a vCard.
            </t>
            
            <t>
              The CALENDAR-ADDRESS property if present will provide a
              cal-address. If an ATTENDEE property has the same value the
              participant is considered schedulable. The PARTICIPANT
              component can be used to contain additional meta-data 
              related to the attendee.
            </t>

            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This component is defined by the following notation:
                </preamble>

                <artwork>

    participantc  = "BEGIN" ":" "PARTICIPANT" CRLF
                  partprop
                  "END" ":" "PARTICIPANT" CRLF

    partprop      = *(
                  ;
                  ; The following are REQUIRED,
                  ; but MUST NOT occur more than once.
                  ;
                  dtstamp  / participanttype / uid /
                  ;
                  ; The following are OPTIONAL,
                  ; but MUST NOT occur more than once.
                  ;
                  created / description / geo / last-mod / priority / seq /
                  status / calendaraddress / summary / url /
                  ;
                  ; The following are OPTIONAL,
                  ; and MAY occur more than once.
                  ;
                  attach / categories / comment /
                  contact / location / rstatus / related /
                  resources / strucloc / strucres / styleddescription /
                  sdataprop / iana-prop
                  ;
                  )

                </artwork>
              </figure>
            </t>

            <t hangText="Note:">
              When the PRIORITY is supplied it defines the ordering of
              PARTICIPANT components with the same value for the TYPE parameter.
            </t>

            <t hangText="Privacy Issues:">
              When a LOCATION is supplied it provides information about
              the location of a participant at a given time or times.
              This may represent an unacceptable privacy risk for some
              participants. User agents MUST NOT include this information
              without the participant's express permission..
            </t>

            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this component. It 
                  contains a STRUCTURED-DATA property which points to a
                  vCard providing information about the event participant.
                </preamble>

                <artwork>
                  BEGIN:PARTICIPANT
                  PARTICIPANT-TYPE:PERFORMER
                  STRUCTURED-DATA;VALUE=URI:http://dir.example.com/vcard/aviolinist.vcf
                  END:PARTICIPANT
                </artwork>
              </figure>
            </t>

            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example for the primary contact.
                </preamble>

                <artwork>
                  BEGIN: PARTICIPANT
                  STRUCTURED-DATA;VALUE=URI;
                   http://dir.example.com/vcard/contacts/contact1.vcf
                  PARTICIPANT-TYPE:CONTACT
                  DESCRIPTION:A contact:
                  END:PARTICIPANT
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>

      <section anchor="schedulable-participant"
               title="Schedulable Participant">
        <t>
          A PARTICIPANT component may represent someone or something that
          needs to be scheduled as defined for ATTENDEE in <xref target="RFC5545" />
          and <xref target="RFC5546" />. The PARTICIPANT component may
          also represent someone or something that is NOT to receive
          scheduling messages.
        </t>

        <t>
          For backwards compatibility wuth existing clients and servers
          when used to schedule events and tasks
          the ATTENDEE property MUST be used to specify the sheduling
          parameters as defined for that property.
        </t>

        <t>
          For other, future uses the CALENDAR-ADDRESS property MUST be used
          to specify those parameters.
        </t>

        <t>
          A PARTICIPANT component is defined to be schedulable if
          <list style='symbols'>
            <t>
              It contains a CALENDAR-ADDRESS property
            </t>
            <t>
              That property value is the same as the value for an ATTENDEE property.
            </t>
          </list>
        </t>

        <t>
          If both of these conditions apply then the participant defined
          by the value of the URL property will take part in scheduling
          operations as defined in <xref target="RFC5546" />.
        </t>

        <t>
          An appropriate use for the PARTICIPANT component in scheduling
          would be to store SEQUENCE and DTSTAMP properties associated with
          replies from each ATTENDEE. A LOCATION property within the
          PARTICIPANT component might allow better selection of meeting times
          when participants are in different timezones.
        </t>
      </section>
    </section>

    <section title='Extended examples'>
      <t>
       The following are some examples of the use of the properties defined in
       this specification. They include additional properties defined in
       <xref target='RFC7986'/> which includes IMAGE.
      </t>

      <section title='Example 1'>
        <figure>
          <preamble>
            The following is an example of a VEVENT describing a concert.
            It includes location
            information for the venue itself as well as references to parking and
            restaurants.
          </preamble>

          <artwork>
BEGIN:VEVENT
CREATED:20170216T145739Z
DESCRIPTION: Piano Sonata No 3\n
 Piano Sonata No 30
DTSTAMP:20171116T145739Z
DTSTART;TZID=America/New_York:20170315T150000Z
DTEND;TZID=America/New_York:20170315T163000Z
LAST-MODIFIED:20170216T145739Z
SUMMARY:Beethoven Piano Sonatas
UID:123456
STRUCTURED-LOCATION;LABEL="The venue";VALUE=URI:
 http://dir.example.com/venues/big-hall.vcf
STRUCTURED-LOCATION;LABEL="Parking for the venue";VALUE=URI:
 http://dir.example.com/venues/parking.vcf
IMAGE;VALUE=URI;DISPLAY=BADGE;FMTTYPE=image/png:h
 ttp://example.com/images/concert.png
BEGIN:PARTICIPANT
PARTICIPANT-TYPE:SPONSOR
STRUCTURED-DATA;VALUE=URI:http://example.com/sponsor.vcf
END:PARTICIPANT
BEGIN:PARTICIPANT
PARTICIPANT-TYPE:PERFORMER:
STRUCTURED-DATA;VALUE=URI:http://www.example.com/people/johndoe.vcf
END:PARTICIPANT
END:VEVENT

          </artwork>
        </figure>
      </section>

      <section title='Example 2'>
        <figure>
          <preamble>
            The following is an example of a VEVENT describing a meeting.
            One of the attendees is a remote participant.
          </preamble>
  
          <artwork>
BEGIN:VEVENT
CREATED:20170216T145739Z
DTSTAMP:20101116T145739Z
DTSTART;TZID=America/New_York:20170315T150000Z
DTEND;TZID=America/New_York:20170315T163000Z
LAST-MODIFIED:20170216T145739Z
SUMMARY:Conference planning
UID:123456
ORGANIZER:mailto:a@example.com
ATTENDEE;PARTSTAT=ACCEPTED;CN=A:mailto:a@example.com
ATTENDEE;RSVP=TRUE;CN=B:mailto:b@example.com
BEGIN:PARTICIPANT
PARTICIPANT-TYPE:ACTIVE:
STRUCTURED-DATA;VALUE=URI:http://www.example.com/people/b.vcf
LOCATION:At home
END:PARTICIPANT
END:VEVENT

          </artwork>
        </figure>
      </section>
    </section>

    <section title='Security Considerations'>
      <t>
       Applications using these properties need to be aware of the risks
       entailed in using the URIs provided as values. See [RFC3986] for
       a discussion of the security considerations relating to URIs.
      </t>

      <t>
        For the "STRUCTURED-DATA" property, servers need to be aware
        that a client could attack underlying storage by sending extremely large
        values and could attack processing time by uploading a recurring
        event with a large number of overrides and then repeatedly adding,
        updating, and deleting structured data.
      </t>

      <t>
        Malicious content could be introduced into the calendar server by way
        of the "STRUCTURED-DATA" property, and propagated to many end users via
        scheduling.  Servers SHOULD check this property for malicious
        or inappropriate content.  Upon detecting such content, servers
        SHOULD remove the property,
      </t>

      <t>
        When processing HTML content applications need to be aware of the
        many security and privacy issues as described in the IANA considerations
        section of
        <xref target='W3C.REC-html51-20171003'/>
      </t>
    </section>

    <section title='Privacy Considerations' anchor='privacy'>
      <t>
        Properties with a "URI" value type can expose their users to 
        privacy leaks as any network access of the URI data can be 
        tracked. Clients SHOULD NOT automatically download data 
        referenced by the URI without explicit instruction from users.
      </t>

      <t>
        The addition of location information to the new participant
        component provides information about the location of participants
        at a given time.
      </t>
    </section>

    <section anchor="iana_considerations" title='IANA Considerations'>
      <section anchor="additional-icalendar-registrations"
               title="Additional iCalendar Registrations">
        <section anchor="property_registrations"
                 title="Properties" >
          <t>
            This document defines the following new iCalendar properties to be
            added to the registry defined in Section 8.2.3 of <xref target='RFC5545'/>:
          </t>
          <texttable>
            <ttcol align="left">Property</ttcol>
            <ttcol align="left">Status</ttcol>
            <ttcol align="left">Reference</ttcol>

            <c>CALENDAR-ADDRESS</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="calendar-address"/></c>

            <c>PARTICIPANT-TYPE</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>STRUCTURED-DATA</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="structured-data" /></c>

            <c>STYLED-DESCRIPTION</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="styled-description"/></c>

            <c>STRUCTURED-LOCATION</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="structured-location"/></c>

            <c>STRUCTURED-RESOURCE</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="structured-resource"/></c>
          </texttable>
        </section>

        <section anchor="parameter_registrations"
                 title="Parameters" >
          <t>
            This document defines the following new iCalendar property parameters
            to be added to the registry defined in Section 8.2.4 of <xref target='RFC5545'/>:
          </t>
          <texttable>
            <ttcol align="left">Property Parameter</ttcol>
            <ttcol align="left">Status</ttcol>
            <ttcol align="left">Reference</ttcol>

            <c>LOCTYPE</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="parameter_loctype"/></c>

            <c>ORDER</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="parameter_order"/></c>

            <c>RESTYPE</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="parameter_restype"/></c>

            <c>SCHEMA</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="parameter_schema" /></c>
          </texttable>
        </section>

        <section anchor="component_registrations"
                 title="Components" >
          <t>
            This document defines the following new iCalendar components to be
            added to the registry defined in Section 8.3.1 of <xref target='RFC5545'/>:
          </t>
          <texttable>
            <ttcol align="left">Component</ttcol>
            <ttcol align="left">Status</ttcol>
            <ttcol align="left">Reference</ttcol>

            <c>PARTICIPANT</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant"/></c>
          </texttable>
        </section>
      </section>

      <section anchor="new_registration-tables"
               title="New Registration Tables">
        <t>
          This section defines new registration tables for PARTICIPANT-TYPE
          and RESTYPE values. These tables are updated using the same
          approaches laid down in Section 8.2.1 of <xref target="RFC5545" />
        </t>

        <section anchor="participant_types_registry"
                 title="Participant Types" >
          <t>
            The following table has been used to initialize the
            participant types registry.
          </t>
          <texttable>
            <ttcol align="left">Participant Type</ttcol>
            <ttcol align="left">Status</ttcol>
            <ttcol align="left">Reference</ttcol>

            <c>ACTIVE</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>INACTIVE</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>SPONSOR</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>CONTACT</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>BOOKING-CONTACT</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>EMERGENCY-CONTACT</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>PUBLICITY-CONTACT</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>PLANNER-CONTACT</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>PERFORMER</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>

            <c>SPEAKER</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="participant-type"/></c>
          </texttable>
        </section>

        <section anchor="resource_types_registry"
                 title="Resource Types" >
          <t>
            The following table has been used to initialize the resource
            types registry.
          </t>
          <texttable>
            <ttcol align="left">Resource Type</ttcol>
            <ttcol align="left">Status</ttcol>
            <ttcol align="left">Reference</ttcol>

            <c>PROJECTOR</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="parameter_restype"/></c>

            <c>ROOM</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="parameter_restype"/></c>

            <c>REMOTE-CONFERENCE-AUDIO</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="parameter_restype"/></c>

            <c>REMOTE-CONFERENCE-VIDEO</c>
            <c>Current</c>
            <c>RFCXXXX, <xref target="parameter_restype"/></c>
          </texttable>
        </section>
      </section>
    </section>

    <section title="Acknowledgements">
      <t>
        The author would like to thank Chuck Norris of eventful.com for his work
        which led to the development of this RFC.
      </t>
      <t>
        The author would also like to thank the members of CalConnect, The Calendaring and
        Scheduling Consortium, the  Event Publication technical committee and the following
        individuals for contributing their ideas and support:
      </t>
      <t>
        Cyrus Daboo, John Haug, Dan Mendell, Ken Murchison, Scott Otis.
      </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      &RFC2119;
      &RFC2426;
      &RFC3986;
      &RFC4589;
      &RFC5545;
      &RFC5546;
      &RFC6638;
      &RFC7986;
      &RFC8174;
      &RFC8259;
      &W3C.REC-html51-20171003;
      &W3C.REC-xml-20081126;
    </references>

    <references title="Informative References">
      <reference anchor="iana-property-registry"
                 target="https://www.iana.org/assignments/icalendar/icalendar.xhtml">
        <front>
          <title>IANA iCalendar Element Registries</title>
          <author/>
          <date/>
        </front>
      </reference>
    </references>

    <section title="Open issues">
      <t>
        None at the moment
      </t>
    </section>

    <section title="Change log">
      <t>To be deleted on publication</t>

      <t>
        calext-v16 2019-10-09  MD
        <list style='symbols'>
          <t>
            Make LOCTYPE multi-valued.
          </t>
          <t>
            Add all ATTENDEE scheduling parameters to CALENDAR-ADDRESS.
          </t>
        </list>
      </t>
      <t>
        calext-v15 2019-10-08  MD
        <list style='symbols'>
          <t>
            Address various DICUSS points.
          </t>
        </list>
      </t>
      <t>
        calext-v14 2019-06-11  MD
        <list style='symbols'>
          <t>
            Definition of event and social calendaring.
          </t>
          <t>
            Remove redefinition of SOURCE - use STRUCTURED-DATA.
          </t>
        </list>
      </t>
      <t>
        calext-v13 2019-05-26  MD
        <list style='symbols'>
          <t>
            Respond to various issues.
          </t>
        </list>
      </t>
      <t>
        calext-v12 2019-02-28  MD
        <list style='symbols'>
          <t>
            Fix styled-description example. Respond to various AD issues.
            Some typos.
          </t>
        </list>
      </t>
      <t>
        calext-v11 2019-02-27  MD
        <list style='symbols'>
          <t>
            Add DERIVED parameter for styled-description, RELATED parameter
            for structured-location
          </t>
        </list>
      </t>
      <t>
        calext-v09 2018-08-30  MD
        <list style='symbols'>
          <t>
            Sorted out inconsistencies in refs to 5546
          </t>
        </list>
      </t>
      <t>
        calext-v08 2018-07-06  MD
        <list style='symbols'>
          <t>
            Add some text for equal ORDER values
          </t>
          <t>
            Switched scheduleaddress to calendaraddress in participant
            abnf. Also added more properties
          </t>
          <t>
            Fixed PARTICIPANT abnf
          </t>
        </list>
      </t>
      <t>
        calext-v04 2017-10-11  MD
        <list style='symbols'>
          <t>
            Change SCHEDULE-ADDRESS to CALENDAR-ADDRESS
          </t>
          <t>
            Explicitly broaden scope of SOURCE
          </t>
          <t>
            Add initial registry for RESTYPE and move new tables into
            separate section.
          </t>
          <t>
            Fix PARTTYPE/PARTICIPANT-TYPE inconsistency
          </t>
        </list>
      </t>
      <t>
        calext-v03 2017-10-09  MD
        <list style='symbols'>
          <t>
            Mostly typographical and other minor changes
          </t>
        </list>
      </t>
      <t>
        calext-v02 2017-04-20  MD
        <list style='symbols'>
          <t>
            Add SCHEDULE-ADDRESS property
          </t>
          <t>
            PARTICIPANT becomes a component rather than a property. Turn
            many of the former parameters into properties.
          </t>
          <t>
            Use existing ATTENDEE property for scheduling.
          </t>
        </list>
      </t>
      <t>
        calext-v01 2017-02-18  MD
        <list style='symbols'>
          <t>
            Change ASSOCIATE back to PARTICIPANT
          </t>
          <t>
            PARTICIPANT becomes a component rather than a property. Turn
            many of the former parameters into properties.
          </t>
        </list>
      </t>
      <t>
        calext-v00 2016-08-??  MD
        <list style='symbols'>
          <t>
            Name changed - taken up by calext working group
          </t>
        </list>
      </t>
      <t>
        v06 2016-06-26  MD
        <list style='symbols'>
          <t>
            Fix up abnf
          </t>
          <t>
            change ref to ietf from daboo
          </t>
          <t>
            take out label spec - use Cyrus spec
          </t>
        </list>
      </t>
      <t>
        v05 2016-06-14  MD
        <list style='symbols'>
          <t>
            Remove GROUP and HASH. they can be dealt with elsewhere if desired
          </t>
          <t>
            Change ORDER to integer >= 1.
          </t>
          <t>
            Incorporate Structured-Data into this specification.
          </t>
        </list>
      </t>
      <t>
        v04 2014-02-01  MD
        <list style='symbols'>
          <t>
            Added updates attribute.
          </t>
          <t>
            Minor typos.
          </t>
          <t>
            Resubmitted mostly to refresh the draft.
          </t>
        </list>
      </t>
      <t>
        v03 2013-03-06  MD
        <list style='symbols'>
          <t>
            Replace PARTICIPANT with ASSOCIATE plus related changes.
          </t>
          <t>
            Added section showing modifications to components.
          </t>
          <t>
            Replace ID with GROUP and modify HASH.
          </t>
          <t>
            Replace TITLE param with LABEL.
          </t>
          <t>
            Fixed STYLED-DESCRIPTION in various ways, correct example.
          </t>
        </list>
      </t>
      <t>
        v02 2012-11-02  MD
        <list style='symbols'>
          <t>
            Collapse sections with description of properties and the use cases
            into a section with sub-sections.
          </t>
          <t>
            New section to describe relating properties.
          </t>
          <t>
            Remove idref and upgrade hash to have the reference
          </t>
          <t>
            No default value types on properties..
          </t>
        </list>
      </t>
      <t>
        v01 2012-10-18  MD    Many changes.
        <list style='symbols'>
          <t>
            SPONSOR and STRUCTURED-CONTACT are now in PARTICIPANT
          </t>
          <t>
            Add a STRUCTURED-RESOURCE property
          </t>
          <t>
            STYLED-DESCRIPTION to handle rich text
          </t>
          <t>
            Much more...
          </t>
        </list>
      </t>
      <t>
        2011-01-07
        <list style='symbols'>
          <t>
            Remove MEDIA - it's going in the Cyrus RFC
          </t>
          <t>
            Rename EXTENDED-... to STRUCTURED-...
          </t>
          <t>
            Add TYPE parameter to SPONSOR
          </t>
        </list>
      </t>
      <t>
        v00 2007-10-19  MD    Initial version
      </t>
    </section>
  </back>
</rfc>
