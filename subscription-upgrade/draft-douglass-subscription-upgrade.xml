<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2434 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2434.xml">
<!ENTITY RFC3688 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml">
<!ENTITY RFC3986 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4589 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4589.xml">
<!ENTITY RFC5545 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5545.xml">
<!ENTITY RFC5546 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5546.xml">
<!ENTITY RFC5988 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6578 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6578.xml">
<!ENTITY RFC7240 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7240.xml">
<!ENTITY I-D.ietf-calext-extensions SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-calext-extensions.xml">
<!ENTITY W3C.REC-xml-20060816 SYSTEM "http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-xml-20060816.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="5"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" updates="5545,7240"
     docName="draft-douglass-subscription-upgrade-04" ipr="trust200902">
  <front>
    <title abbrev="Calendar subscription upgrades">Calendar subscription upgrades</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <author initials="M." surname="Douglass" fullname="Michael Douglass">
      <organization abbrev="Spherical Cow Group">Spherical Cow Group</organization>
      <address>
        <postal>
          <street>226 3rd Street</street>
          <city>Troy</city>
          <region>NY</region>
          <code>12180</code>
          <country>USA</country>
        </postal>
        <email>mdouglass@sphericalcowgroup.com</email>
        <uri>http://sphericalcowgroup.com</uri>
      </address>
    </author>

    <date month='March' year='2019' />

    <area>Applications</area>

    <keyword>icalendar</keyword>

    <keyword>properties</keyword>

    <abstract>
      <t>
        This specification introduces an approach to allow subscribers
        to calendar feeds to upgrade to a more performant protocol.
      </t>
      <t>
        This specification updates <xref target='RFC5545'/> to add the
        value DELETED to the STATUS property.
      </t>
      <t>
        This specification also updates <xref target='RFC7240'/> to add the
        subscribe-enhanced-get and sync-token preferences.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
        Currently clients subscribe to calendar feeds as an ics file 
        which is often published as a resource accessible using the 
        unofficial 'webcal' scheme.
      </t>

      <t>
        The only available option  for updating that resource is the 
        usual HTTP polling of cached resources using Etags.
      </t>
      
      <t>
        There is the usual tension between clients wishing to see
        a timely response to changes and servers not wishing to be 
        overloaded by frequent requests for possibly large amounts of
        data.
      </t>

      <t>
        This specification introduces an approach whereby clients can 
        discover a more performant access method. Given the location of 
        the resource as an ics file, the client can perfom an HEAD
        request on the resource 
        and inspect the returned headers which will offer a number of 
        alternative access methods.
      </t>

      <t>
        Given that many clients already support CalDAV this provides an
        easy upgrade path for those clients. CalDAV and DAV subsets are 
        specified here to allow lighter weight implementations. 
      </t>
      
      <section anchor="conventions" title='Conventions Used in This Document'>
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
          "MAY", and "OPTIONAL" in this document are to be interpreted as
          described in <xref target='RFC2119'/>.
        </t>
      </section>
    </section>

    <section title="Enhanced GET">
      <section title="Introduction">
        <t>
          This is a lightweight protocol which allows simple clients to 
          efficiently discover and download changes in the targeted resource.
        </t>
        <t>
          It has many similarities to WebDAV sync and for a server could 
          be implemented as an extension of the specification.
        </t>

        <t>
          In this protocol the client MUST include the Prefer header field
          preference "subscribe-enhanced-get". If a sync token is
          available it is passed as a parameter to that preference.
        </t>

        <t>
          The client MAY include the Prefer header field
          preference "handling=strict". If included and an invalid
          sync-token is passed in the request the server MUST return
          an error response instead of a full set of data.
        </t>

        <t>
          The resource is treated as a set of individual events each of which
          may be updated or deleted separately. The client will first fetch the
          entire ics file. On subsequent requests it uses the Prefer header
          with a "sync-token" parameter to indicate that it wants a
          set of changes since the last fetch.
        </t>
      </section>

      <section title="Deletions">
        <t>
          When an entity (VEVENT, VTODO or other valid top-level component)
          is deleted from the source data the server needs
          to be able to inform a client of the deletion. This specification
          introduces a new value for the STATUS property of DELETED.
        </t>
        <t>
          On the first enhanced GET after the entity has been deleted
          a skeleton, but valid, entity will be returned with 
          STATUS: DELETED. The receiving client is free to remove the
          entity or update it's STATUS property.
        </t>
        <t>
          On subsequent fetches the entity will not be returned.
        </t>
      </section>

      <section title="Handling of invalid sync tokens">
        <t>
          The default behavior is to treat an invalid sync token as if
          none were supplied. This will result in all data being returned
          with a new valid token.
        </t>

        <t>
          For some clients and with some very large sets of data, such
          behavior may be problematic. To suppress the return of data
          on an invalid token the client should include the Prefer
          header field preference "handling=strict".
        </t>

        <t>
          When a server receives an invalid token and the "handling=strict"
          preference is supplied, the server MUST return a 412 status,
          precondition failed. The server MAY choose to return an
          error message in the body.
        </t>

        <t>
          The client SHOULD respond to this error by restarting the
          interaction from scratch, i.e. retrieve the full set of data
          then poll for updates.
        </t>
      </section>

      <section title="Paging the response">
        <t>
          A client may explicitly request a limit on the size of the
          response by specifying the Prefer header field preference
          "limit=n" where n is the number of components.
        </t>

        <t>
          When a server receives a request specifying such a limit it
          SHOULD limit the response to that number of components.
          If the limit causes a truncation in the response the server
          should respond with WHAT? and return a sync token which may
          be used to retrieve the next batch of data.
        </t>

        <t>
          The truncated status allows the client to immediately resubmit
          a request for the next batch.
        </t>

        <t>
          A server MAY choose to limit the response size. The behavior
          SHOULD be as if the client had provided a preference for that
          size - allowing the client to retrieve the full set of data
          in batches.
        </t>
      </section>

      <section title="Caching of responses">
        <t>
          To enable proper caching of responses the server SHOULD
          provide a VARY header field in responses that names the
          Prefer header field along with any other that are appropriate.
        </t>

        <t>
          Clients should order the preferences in the following manner
          so that identical responses can be identified...
        </t>

        <t>
          NOTE: need to discuss this further and check on the HTTP specs
          to ensure this makes sense.
        </t>
      </section>

      <section title="Examples">
        <t>
          This is an example of the initial request and response from a  
          server that supports the extended GET protocol. 
          <figure>
            <artwork><![CDATA[
   >> Request <<

   GET /events.ics HTTP/1.1
   Host: example.com
   Accept: text/calendar
   Prefer: subscribe-enhanced-get

   >> Response <<

   HTTP/1.1 200 OK
   Content-Length: xxxx
   ETag: "1234"                    current ETag (for conditional GET)
   Preference-Applied: subscribe-enhanced-get; sync-token="1234567"
   Vary: Prefer, If-None-Match            so caching proxy can key off
   ;                                      client?s ETag and preference
     
    BEGIN:VCALENDAR:
    ?  /* full feed */
    END:VCALENDAR

]]></artwork>
          </figure>
        </t>

        <t>
          This is an example of the subsequent request and response
          when no changes have occurred.
          <figure>
            <artwork><![CDATA[
   >> Request <<

   GET /events.ics HTTP/1.1
   Host: example.com
   Accept: text/calendar
   Prefer: subscribe-enhanced-get; sync-token="1234567"

   >> Response <<

   HTTP/1.1 304 Not Modified
   Content-Length: 0
   ETag: ?1234?
   Vary: Prefer, If-None-Match
   Preference-Applied: subscribe-enhanced-get; sync-token="1234567"

]]></artwork>
          </figure>
        </t>

        <t>
          This is an example of the subsequent request and response
          when changes have occurred and the server cannot return only
          changed data - perhaps because of an old or invalid token.
          Because handling=strict was not supplied as a preference all
          data is returned in the response.
          <figure>
            <artwork><![CDATA[
   >> Request <<

   GET /events.ics HTTP/1.1
   Host: example.com
   Accept: text/calendar
   Prefer: subscribe-enhanced-get; sync-token="1234567"

   >> Response <<

   HTTP/1.1 200 OK
   Content-Type: text/calendar
   Content-Length: xxxx
   Preference-Applied: subscribe-enhanced-get; sync-token="56789"

   BEGIN:VCALENDAR:
   ...  full set of data
   END:VCALENDAR

]]></artwork>
          </figure>
        </t>
        
      </section>
    </section>

    <section title="Changes to the iCalendar specifications">
      <t>
        This specification updates <xref target='RFC5545'/> to add the
        value DELETED to the STATUS property. It also introduces the 
        use of some properties to provide more information 
        about the resource, for example the time range it covers.
      </t>
      <section anchor="status_property"
               title="Redefined Status property">

        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              STATUS
            </t>
    
            <t hangText="Purpose:">
              This property defines the overall status or confirmation
              for the calendar component.
            </t>
    
            <t hangText="Value Type:">
              TEXT
            </t>
    
            <t hangText="Property Parameters:">
              IANA and non-standard property parameters can
              be specified on this property.
            </t>
    
            <t hangText="Conformance:">
              This property can be specified once in "VEVENT",
              "VTODO", or "VJOURNAL" calendar components.
            </t>
    
            <t hangText="Description:">
              In a group-scheduled calendar component, the property
              is used by the "Organizer" to provide a confirmation of the event
              to the "Attendees".  For example in a "VEVENT" calendar component,
              the "Organizer" can indicate that a meeting is tentative,
              confirmed, or cancelled.  In a "VTODO" calendar component, the
              "Organizer" can indicate that an action item needs action, is
              completed, is in process or being worked on, or has been
              cancelled.  In a "VJOURNAL" calendar component, the "Organizer"
              can indicate that a journal entry is draft, final, or has been
              cancelled or removed.
            </t>
    
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>
    
                <artwork type="abnf">
  status          = "STATUS" statparam ":" statvalue CRLF

  statparam       = *(";" other-param)

  statvalue       = (statvalue-event
                  /  statvalue-todo
                  /  statvalue-jour)

  statvalue-event = "TENTATIVE"    ;Indicates event is tentative.
                  / "CONFIRMED"    ;Indicates event is definite.
                  / "CANCELLED"    ;Indicates event was cancelled.
                  / "DELETED"      ;Indicates event was deleted.
  ;Status values for a "VEVENT"

  statvalue-todo  = "NEEDS-ACTION" ;Indicates to-do needs action.
                  / "COMPLETED"    ;Indicates to-do completed.
                  / "IN-PROCESS"   ;Indicates to-do in process of.
                  / "CANCELLED"    ;Indicates to-do was cancelled.
                  / "DELETED"      ;Indicates to-do was deleted.
  ;Status values for "VTODO".

  statvalue-jour  = "DRAFT"        ;Indicates journal is draft.
                  / "FINAL"        ;Indicates journal is final.
                  / "CANCELLED"    ;Indicates journal is removed.
                  / "DELETED"      ;Indicates journal was deleted.
  ;Status values for "VJOURNAL".
                </artwork>
              </figure>
            </t>
    
            <t hangText="Example:">
              <figure>
                <preamble>
                  Example:  The following is an example of this property for a "VEVENT"
                  calendar component:
                </preamble>
    
                <artwork>
  STATUS:TENTATIVE
                </artwork>
              </figure>
    
              <figure>
                <preamble>
                  The following is an example of this property for a "VTODO"
                  calendar component:
                 </preamble>
    
                <artwork>
  STATUS:NEEDS-ACTION
                </artwork>
              </figure>
      
              <figure>
                <preamble>
                  The following is an example of this property for a "VJOURNAL"
                  calendar component:
                </preamble>
      
                <artwork>
  STATUS:DRAFT
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>
    </section>

    <section title="New Prefer header field preferences">
      <section anchor="preference_subscribe_enhanced_get"
               title="Preference subscribe-enhanced-get">
        <t>
          This indicates that the client expects the server to handle
          the GET method according to the specifications for enhanced
          get.
        </t>
        <t hangText="ABNF:">
          <figure>
            <artwork>
  pref-subscribe-enhanced-get = "subscribe-enhanced-get"
            </artwork>
          </figure>
        </t>
        <t>
          This preference MAY be followed by a synch-token preference.
        </t>
      </section>
      <section anchor="preference_sync_token_parameter"
               title="Preference sync-token_parameter">
        <t>
          This preference parameter provides a sync token for enhanced
          get.
        </t>
        <t hangText="ABNF:">
          <figure>
            <artwork>
  pref-sync-token = "sync-token" BWS "=" BWS DQUOTE value DQUOTE
            </artwork>
          </figure>
        </t>
      </section>
    </section>

    <section title="Discovering alternative access methods">
      <t>
        The advertising of other access points is achieved through the 
        use of the LINK header as defined in <xref target='RFC5988'/>. 
        New link relation types are 
        defined in this specification - each being associated with a 
        protocol or protocol subset.
      </t>
      
      <t>
        These LINK headers will be delivered when a client carries out
        a HEAD request targeting the URL of the resource.
      </t>
    </section>

    <section anchor="link_relation_subscribe_caldav"
             title="Link relation subscribe-caldav">
      <t>
        This specifies an access point which is a full implementation of 
        caldav but requires no authentication. The end point allows the 
        full range of reports as defined by the CalDAV
        specification.
      </t>
      <t>
        The client MUST follow the specification to determine exactly 
        what operations are allowed on the access point - for example 
        to determine if sync-report is supported.
      </t>
      <t>
        The URL MAY include some form of token to allow write access
        to the targeted collection. The client must check it's 
        permissions to determine whether or not it has been granted 
        write access.
      </t>
    </section>

    <section anchor="link_relation_subscribe_caldav_auth"
             title="Link relation subscribe-caldav-auth">
      <t>
        This specifies an access point which is a full implementation of
        caldav and requires authentication. This may allow read-write
        access to the resource.
      </t>
      <t>
        The client MUST follow the specification to determine exactly
        what operations are allowed on the access point - for example
        to determine if sync-report is supported.
      </t>
    </section>

    <section anchor="link_relation_subscribe_webdav_sync"
             title="Link relation subscribe-webdav-sync">
      <t>
        This specifies an access point which supports only webdav sync.
      </t>
      <t>
        This allows the client to issue a sync-report on the resource
        to obtain updates.
      </t>
      <t>
        NOTE: say something about initial startup - use ics to populate? 
        Initial token?
      </t>
      <t>
        The client MUST follow that specification.
      </t>
    </section>

    <section anchor="link_relation_subscribe_enhanced_get"
             title="Link relation subscribe-enhanced-get">
      <t>
        This specifies an access point which supports something new.
      </t>
      <t>
        The client MUST follow that specification.
      </t>
    </section>

    <section title='Security Considerations'>
      <t>
       Applications using these properties need to be aware of the risks
       entailed in using the URIs provided as values. See [RFC3986] for
       a discussion of the security considerations relating to URIs.
      </t>
    </section>

    <section title='Privacy Considerations' anchor='privacy'>
      <t>
        Properties with a "URI" value type can expose their users to 
        privacy leaks as any network access of the URI data can be 
        tracked. Clients SHOULD NOT automatically download data 
        referenced by the URI without explicit instruction from users. 
        This specification does not introduce any additional privacy 
        concerns beyond those described in <xref target="RFC5545" />.
      </t>
    </section>

    <section anchor="iana_considerations" title='IANA Considerations'>
    <section anchor="preference_registrations"
             title="Preference Registrations" >
      <t>
        The following preference has been added to the HTTP Preferences
        Registry defined in <xref target='RFC7240'/>
      </t>
      <t>
        <list style='hanging'>
          <t hangText="Preference:" >
            subscribe-enhanced-get
          </t>
          <t hangText="Value:" >
            None.
          </t>
          <t hangText="Optional parameters:" >
            <list style='symbol'>
              <t hangText="sync-token:" >
                value is a quoted token
              </t>
              <t hangText="limit:" >
                value is an integer page size
              </t>
            </list>
          </t>
          <t hangText="Description:" >
            Marks the interaction as enhanced get and provides the
            optional sync-token and page size.
          </t>
          <t hangText="Reference:" >
            <xref target="preference_subscribe_enhanced_get"/>
          </t>
        </list>
      </t>
    </section>
    <section anchor="link_relation_registrations"
             title="Link Relation Registrations" >
        <t>
          This document defines the following new iCalendar properties to be
          added to the registry defined in Section 8.2.3 of <xref target='RFC5545'/>:
        </t>
        <texttable>
          <ttcol align="left">Relation Name</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">Reference</ttcol>

          <c>subscribe-caldav</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="link_relation_subscribe_caldav"/></c>

          <c>subscribe-caldav_auth</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="link_relation_subscribe_caldav_auth" /></c>

          <c>subscribe-webdav-sync</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="link_relation_subscribe_webdav_sync"/></c>

          <c>subscribe-enhanced_get</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="link_relation_subscribe_enhanced_get"/></c>
        </texttable>
      </section>
    </section>

    <section title="Acknowledgements">
      <t>
        The author would also like to thank the members of the CalConnect
        Calendar Sharing technical committee and the following
        individuals for contributing their ideas and support:
      </t>
      <t>
        Marten Gajda, Ken Murchison, Garry Shutler
      </t>
      <t>
        The authors would also like to thank CalConnect the Calendaring and
        Scheduling Consortium for advice with this specification.
      </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      &RFC2119;
      &RFC2434;
      &RFC3688;
      &RFC3986;
      &RFC4589;
      &RFC5545;
      &RFC5546;
      &RFC5988;
      &RFC6578;
      &RFC7240;
      &W3C.REC-xml-20060816;
      &I-D.ietf-calext-extensions;
    </references>

    <section title="Open issues">
      <t>
        <list style='hanging'>
          <t hangText="restype values:" >
            Need to determine what if any registry of resource types already
            exists and use that.
          </t>
          <t hangText="sync token format:" >
            It's a URI in webdav sync.
          </t>
        </list>
      </t>
    </section>

    <section title="Change log">
      <t>
        v04 2019-03-07  MD
        <list style='symbols'>
          <t>
            Reference to RFC 6538 - WebDAV sync and
            RFC 7240 Prefer
          </t>
          <t>
            Go back to HEAD
          </t>
          <t>
            New Preference and parameters.
          </t>
          <t>
            Examples
          </t>
          <t>
            More text for extended get. Talk about deletions.
          </t>
        </list>
      </t>
      <t>
        v01 2017-02-17  MD
        <list style='symbols'>
          <t>
            Add text about OPTIONS
          </t>
          <t>
            Add text abut read/write CalDAV
          </t>
        </list>
      </t>
      <t>
        v00 2017-02-15  MD
        <list style='symbols'>
          <t>
            First pass
          </t>
        </list>
      </t>
    </section>
  </back>
</rfc>
