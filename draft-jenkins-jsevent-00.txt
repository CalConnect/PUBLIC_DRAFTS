



JSON data formats for vCard and iCalendar                     N. Jenkins
Internet-Draft                                                  FastMail
Intended status: Standards Track                        October 27, 2016
Expires: April 30, 2017


      JSEvent: A better JSON representation of calendar event data
                        draft-jenkins-jsevent-00

Abstract

   This specification defines a JSON representation of calendar event
   data that can be used for storage and data exchange in a calendaring
   and scheduling environment.  JSON is a lightweight, text-based,
   language-independent data interchange format commonly used in
   Internet applications.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on April 30, 2017.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Jenkins                  Expires April 30, 2017                 [Page 1]

Internet-Draft                   JSEvent                    October 2016


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   3
     1.2.  Data Types  . . . . . . . . . . . . . . . . . . . . . . .   4
       1.2.1.  UTCDate . . . . . . . . . . . . . . . . . . . . . . .   4
       1.2.2.  LocalDate . . . . . . . . . . . . . . . . . . . . . .   4
       1.2.3.  Duration  . . . . . . . . . . . . . . . . . . . . . .   4
     1.3.  Type signatures . . . . . . . . . . . . . . . . . . . . .   4
   2.  Structure of a JSEvent object . . . . . . . . . . . . . . . .   5
   3.  Metadata properties . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  uid . . . . . . . . . . . . . . . . . . . . . . . . . . .   5
     3.2.  relatedTo . . . . . . . . . . . . . . . . . . . . . . . .   5
     3.3.  prodId  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     3.4.  created . . . . . . . . . . . . . . . . . . . . . . . . .   6
     3.5.  updated . . . . . . . . . . . . . . . . . . . . . . . . .   6
     3.6.  sequence  . . . . . . . . . . . . . . . . . . . . . . . .   6
     3.7.  method  . . . . . . . . . . . . . . . . . . . . . . . . .   7
   4.  What and where properties . . . . . . . . . . . . . . . . . .   7
     4.1.  title . . . . . . . . . . . . . . . . . . . . . . . . . .   7
     4.2.  description . . . . . . . . . . . . . . . . . . . . . . .   7
     4.3.  locations . . . . . . . . . . . . . . . . . . . . . . . .   7
     4.4.  links . . . . . . . . . . . . . . . . . . . . . . . . . .   9
     4.5.  locale  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     4.6.  localizations . . . . . . . . . . . . . . . . . . . . . .  10
   5.  Time, duration and recurrence properties  . . . . . . . . . .  11
     5.1.  isAllDay  . . . . . . . . . . . . . . . . . . . . . . . .  11
     5.2.  start . . . . . . . . . . . . . . . . . . . . . . . . . .  11
     5.3.  timeZone  . . . . . . . . . . . . . . . . . . . . . . . .  11
     5.4.  duration  . . . . . . . . . . . . . . . . . . . . . . . .  11
     5.5.  recurrenceRule  . . . . . . . . . . . . . . . . . . . . .  12
     5.6.  recurrenceOverrides . . . . . . . . . . . . . . . . . . .  14
   6.  Scheduling properties . . . . . . . . . . . . . . . . . . . .  15
     6.1.  status  . . . . . . . . . . . . . . . . . . . . . . . . .  15
     6.2.  showAsFree  . . . . . . . . . . . . . . . . . . . . . . .  15
     6.3.  replyTo . . . . . . . . . . . . . . . . . . . . . . . . .  16
     6.4.  participants  . . . . . . . . . . . . . . . . . . . . . .  16
   7.  Alerts properties . . . . . . . . . . . . . . . . . . . . . .  18
     7.1.  useDefaultAlerts  . . . . . . . . . . . . . . . . . . . .  18
     7.2.  alerts  . . . . . . . . . . . . . . . . . . . . . . . . .  19
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .  20
   9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  21
   10. Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  21
   11. References  . . . . . . . . . . . . . . . . . . . . . . . . .  21
     11.1.  Normative References . . . . . . . . . . . . . . . . . .  21
     11.2.  URIs . . . . . . . . . . . . . . . . . . . . . . . . . .  22
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  22




Jenkins                  Expires April 30, 2017                 [Page 2]

Internet-Draft                   JSEvent                    October 2016


1.  Introduction

   The iCalendar data format [RFC5545], a widely deployed interchange
   format for calendaring and scheduling data, has served calendaring
   vendors for a long while, but contains some ambiguities in its data
   model that can not be overcome without backwards incompatible
   changes.

   JSON is a text-based data interchange format as specified in
   [RFC7159].  The I-JSON format defined in [RFC7493] is a strict subset
   of this, adding restrictions to avoid potentially confusing scenarios
   (for example, it mandates that an object MUST NOT have two properties
   with the same key).

   This document defines a JSON-based format describing a single event
   within a calendar, using a new data model that aims to be unambigous,
   extendable and simple to process.

   The key design considerations for this format are as follows:

   o  The attributes of the event represented must be described as a
      simple key-value pair, reducing complexity of the event
      representation.

   o  The data format should avoid all ambiguities, making it difficult
      to make mistakes during implementation and increasing
      interoperability.

   o  The initial set of attributes should be taken from the iCalendar
      data format, but a conversion between the data formats is not
      guaranteed to be completed without losing semantic meaning.

   o  Extensions, such as new properties and components, must not lead
      to requiring an update to this document.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   The underlying format used for this specification is JSON.
   Consequently, the terms "object" and "array" as well as the four
   primitive types (strings, numbers, booleans, and null) are to be
   interpreted as described in Section 1 of [RFC7159].

   Some examples in this document contain "partial" JSON documents used
   for illustrative purposes.  In these examples, three periods "..."



Jenkins                  Expires April 30, 2017                 [Page 3]

Internet-Draft                   JSEvent                    October 2016


   are used to indicate a portion of the document that has been removed
   for compactness.

1.2.  Data Types

   In addition to the standard JSON data types, the following data types
   are used in this specification:

1.2.1.  UTCDate

   This is a string in [RFC3339] "date-time" format, with the further
   restrictions that any letters MUST be in upper-case, the time
   component MUST be included and the time MUST be in UTC.  Fractional
   second values MUST NOT be included unless non-zero (so, for example
   "2010-10-10T10:10:10.003Z" is OK, but "2010-10-10T10:10:10.000Z" is
   invalid and MUST be encoded as "2010-10-10T10:10:10Z").

   In common notation, it should be of the form "YYYY-MM-DDTHH:MM:SSZ".

1.2.2.  LocalDate

   This is a date-time string with *no time zone/offset information
   attached*. It is otherwise in the same format as UTCDate: "YYYY-MM-
   DDTHH:MM:SS".  The time zone to associate with this comes from an
   associated property.

1.2.3.  Duration

   A duration is represented by a subset of ISO8601 duration format, as
   specified by the following ABNF:

   dur-secfrac = "." 1_DIGIT dur-second = 1_DIGIT [dur-secfrac] "S" dur-
   minute = 1_DIGIT "M" [dur-second] dur-hour = 1_DIGIT "H" [dur-minute]
   dur-time = "T" (dur-hour / dur-minute / dur-second) dur-day = 1*DIGIT
   "D"

   duration = "P" (dur-day [dur-time] / dur-time)

   In addition, the duration MUST NOT include fractional second values
   unless the fraction is non-zero.

1.3.  Type signatures

   Types signatures are given for all JSON objects in this document.
   The following conventions are used:

   o  "Boolean|String" - The value is either a JSON "Boolean" value, or
      a JSON "String" value.



Jenkins                  Expires April 30, 2017                 [Page 4]

Internet-Draft                   JSEvent                    October 2016


   o  "Foo" - Any name that is not a native JSON type means an object
      for which the properties (and their types) are defined elsewhere
      within this document.

   o  "Foo[]" - An array of objects of type "Foo".

   o  "String[Foo]" - A JSON "Object" being used as a map (associative
      array), where all the values are of type "Foo".

2.  Structure of a JSEvent object

   A JSEvent object is a JSON object, which MUST be valid I-JSON (a
   stricter subset of JSON), as specified in [RFC7159].  Property names
   and values are case-sensitive.

   The object has a collection of properties, as specified in the
   following sections.  A valid JSEvent object MUST include *uid*,
   *updated* and *start* properties.  All other properties are optional;
   omitted properties MUST be treated identically to if that property
   had the value of "null", unless otherwise specified.

   Vendors MAY add additional properties to the event object to support
   their custom features.  The names of these properties SHOULD be
   prefixed with a domain name controlled by the vendor to avoid
   conflict, e.g. "fastmail.com/customprop".  Other systems that
   interact with events with properties they do not recognise SHOULD try
   to preserve them, but MUST otherwise ignore them.

3.  Metadata properties

3.1.  uid

   Type: "String"

   A globally unique identifier, used to associate the event as the same
   across different systems, calendars and views.

   Corresponds to the UID property in iCalendar.

3.2.  relatedTo

   Type: "String[String]|null"

   A map of relation-type to the UID of the related event.  Specified
   relation types are:

   o  "first": The first event in a series.




Jenkins                  Expires April 30, 2017                 [Page 5]

Internet-Draft                   JSEvent                    October 2016


   o  "next": The next event in a series.

   If an event is split to make a "this and future" change to a
   recurrence, the original event should be truncated to end at the
   previous occurrence before this split, and a new event created to
   represent all the events after the split.

   A "next" _relatedTo_ property SHOULD be set on the original event
   with the UID of the new event.  A "first" _relatedTo_ property with
   the UID of the first event in the series SHOULD be set on the new
   event.  Clients can then follow these UIDs to get the complete set of
   events if the user wishes to modify them all at once.

   Corresponds to the RELATED-TO property in iCalendar.

3.3.  prodId

   Type: "String|null"

   The identifier for the product that created the Event object.  The
   vendor of the implementation SHOULD ensure that this is a globally
   unique identifier.

   Corresponds to the PRODID property in iCalendar.

3.4.  created

   Type: "UTCDate|null"

   The time this event was created.

   Corresponds to the CREATED property in iCalendar.

3.5.  updated

   Type: "UTCDate"

   The time this event was last changed.  If part of an iMIP message
   (i.e. the event has a _method_ property), this is when the iMIP
   message was created.

   Corresponds to the DTSTAMP property in iCalendar.

3.6.  sequence

   Type: "Number" (Defaults to "0" if omitted)





Jenkins                  Expires April 30, 2017                 [Page 6]

Internet-Draft                   JSEvent                    October 2016


   Initially zero, this is monotonically incremented each time a
   significant change is made to the event.

   Corresponds to the SEQUENCE property in iCalendar.

3.7.  method

   Type: "String|null"

   The iTIP method, in lower-case.  Used for scheduling.

   Corresponds to the METHOD property in iCalendar.

4.  What and where properties

4.1.  title

   Type: "String" (Defaults to "''" (the empty string) if omitted)

   A short summary of the event.

   Corresponds to the SUMMARY property in iCalendar.

4.2.  description

   Type: "String" (Defaults to "''" (the empty string) if omitted)

   A longer form description of the event.  This is plain text, but a
   client SHOULD attempt to hyperlink URLs when displaying it.

   Corresponds to the DESCRIPTION property in iCalendar.

4.3.  locations

   Type: "String[Location]|null"

   A map of of location id to Location objects, representing locations
   associated with the event.  A location id may be any string and need
   only be unique to this event, although a UUID is a practical choice.

   A *Location* object has the following properties.  All properties are
   optional, but every Location object MUST have at least one property:

   o  *name*: "String" The human-readable name of the location.

   o  *accessInstructions*: "String" Human-readable instructions for
      accessing this location.  This may be a set of directions, door
      access code, etc.



Jenkins                  Expires April 30, 2017                 [Page 7]

Internet-Draft                   JSEvent                    October 2016


   o  *rel*: "String" The relation type of this location to the event.
      This MUST be either one of the following values, registered in a
      future RFC, or a vendor-specific value.  Vendor specific values
      MUST be prefixed with a domain name controlled by the vendor, e.g.
      "fastmail.com/customrel".  Any value the client or server doesn't
      understand should be treated the same as "unknown".

      *  "start": The event starts at this location.

      *  "end": The event ends at this location.

      *  "virtual": This is not a physical location (e.g. this location
         is an online chat room where people will meet.)

      *  "unknown": The relation of this location to the event is
         unknown.

   o  *timeZone*: "String" (IANA TZ name) A time zone for this location.
      If omitted, the event time zone MUST be used for this location.

   o  *address*: "Address" The structured address of this location.  An
      *Address* object has the following properties.  All properties
      MUST be included, but may be the empty string:

      *  *street*: "String" The street address.  This MAY be multiple
         lines; newlines MUST be preserved.

      *  *locality*: "String" The city, town, village, post town, or
         other locality within which the street address may be found.

      *  *region*: "String" The province, such as a state, county, or
         canton within which the locality may be found.

      *  *postcode*: "String" The postal code, post code, ZIP code or
         other short code associated with the address by the relevant
         country's postal system.

      *  *country*: "String" The country name.

   o  *coordinates*: "String" An [RFC5870] "geo:" URI for the location.

   o  *uri*: "String" A URI that represents how to connect to the event
      from this location.  This may be a telephone number (represented
      as "tel:+1-555-555-555") for a teleconference, a web address for
      online chat, or a custom URI for something like Skype (e.g.
      "skype:username").





Jenkins                  Expires April 30, 2017                 [Page 8]

Internet-Draft                   JSEvent                    October 2016


   Corresponds to the LOCATION property in iCalendar, however this
   representation is much richer than is supported by iCalendar.  When
   converting from iCalendar, the LOCATION property should become a
   single location with just a _name_ property.  If the event has a
   different end time zone to start time zone, this should be added as a
   second location with just a _timeZone_ property.

4.4.  links

   Type: "String[Link]|null"

   A map of of link id to Link objects, representing external resources
   associated with the event.  A link id may be any string and need only
   be unique to this event, although the href or a UUID are practical
   choices.

   Corresponds to the ATTACH property in iCalendar.

   A *Link* object has the following properties:

   o  *href*: "String" A URI from which the resource may be fetched.
      This MAY be a "data:" URL, but it is recommended that the file be
      hosted on a server.

   o  *type*: "String|null" (optional, defaults to "null") The content-
      type of the resource, if known.

   o  *size*: "Number|null" (optional, defaults to "null") The size, in
      bytes, of the resource when fully decoded (i.e. the number of
      bytes in the file the user would download), if known.

   o  *rel*: "String" (optional, defaults to "related") The value of the
      "rel" member is a string that is a registered relation type [1]
      (see [RFC5988]).  The value identifies the relation of the linked
      resource to the event.  Links with a _rel_ of "enclosure" SHOULD
      be considered by the client as attachments for download.  Links
      with a _rel_ of "describedby" SHOULD be considered by the client
      to be an alternate representation of the _description_, for
      example an HTML page describing the event.

   o  *title*: "String|null" (optional, defaults to "null") A human-
      readable description of the resource.

   o  *properties*: "String[String|null]|null" (optional, defaults to
      "null") Extra metadata stored by a client about a link.  The keys
      are URIs, which should be owned by the client author to avoid
      conflicts, and the values are strings or "null".




Jenkins                  Expires April 30, 2017                 [Page 9]

Internet-Draft                   JSEvent                    October 2016


4.5.  locale

   Type: "String|null"

   The [RFC5646] language tag that best describes the locale used for
   the event, if known.

   Corresponds to the LANGUAGE parameter in iCalendar, which is added to
   individual properties.  When converting from iCalendar, one language
   must be picked as the main _locale_ for the event, and all properties
   in other languages moved to the _localizations_ JSEvent property.

4.6.  localizations

   Type: "String[PatchObject]|null"

   A map of [RFC5646] language tag to a patch object which localises the
   event into that locale.

   See the description of _recurrenceOverrides_ for the structure of the
   PatchObject.  The patches are applied to the top-level object.  In
   *addition* to all the restrictions on patches specified there, the
   pointer also MUST NOT start with one of the following prefixes; any
   patch with a such a key MUST be ignored:

   o  "sequence"

   o  "localization"

   o  "start"

   o  "timeZone"

   o  "duration"

   o  "status"

   o  "showAsFree"

   o  "participants"

   o  "useDefaultAlerts"

   Corresponds to the LANGUAGE parameter in iCalendar, which is added to
   individual properties.  When converting from iCalendar, one language
   must be picked as the main _locale_ for the event, and all properties
   in other languages moved to the _localizations_ JSEvent property.




Jenkins                  Expires April 30, 2017                [Page 10]

Internet-Draft                   JSEvent                    October 2016


5.  Time, duration and recurrence properties

5.1.  isAllDay

   Type: "Boolean" (optional, defaults to "false")

   Is the event an all day event, such as a birthday or public holiday?

   Corresponds to the type (DATE or DATE-TIME) of the DTSTART property
   in iCalendar.

5.2.  start

   Type: "LocalDate" e.g. "2015-09-02T00:00:00"

   The date/time the event would start in the event's time zone.

   Corresponds to the DTSTART property in iCalendar.  Note that time
   zone information is stored separately in JSEvent.

5.3.  timeZone

   Type: "String|null"

   The IANA Time Zone Database [2] name for the time zone the event is
   scheduled in, or "null" for floating time.  If omitted, this MUST be
   presumed to be "null" (i.e. floating time).

   Corresponds to the TZID part of the DTSTART property in iCalendar.

5.4.  duration

   Type: "Duration", e.g.  "P2DT3H" (Defaults to "P0D" if omitted)

   The duration of the event in absolute time (i.e. in UTC time;
   ignoring DST shifts).  To get the end date in the event time zone,
   convert start into UTC, then apply the duration, then convert the
   result into the appropriate time zone.

   If _isAllDay_ is "true", then the following restrictions apply:

   o  the _start_ property MUST have a time component of "T00:00:00".

   o  the _timeZone_ property MUST be "null" (or omitted).

   o  the _duration_ MUST only include a day component.

   Corresponds to the DURATION or DSTART+DTEND properties in iCalendar.



Jenkins                  Expires April 30, 2017                [Page 11]

Internet-Draft                   JSEvent                    October 2016


5.5.  recurrenceRule

   Type: "Recurrence|null"

   A recurrence rule for the event.

   Corresponds to the RRULE property in iCalendar.

   A *Recurrence* object is a JSON object mapping of a RECUR value type
   in iCalendar.  A Recurrence object has the following properties:

   o  *frequency*: "String" This MUST be one of the following values:

      *  ""yearly""

      *  ""monthly""

      *  ""weekly""

      *  ""daily""

      *  ""hourly""

      *  ""minutely""

      *  ""secondly"" To convert from iCal, simply lower-case the FREQ
         part.

   o  *interval*: "Number" (optional, defaults to "1") The INTERVAL part
      from iCal.  If included, it MUST be an integer "x >= 1".

   o  *rscale*: "String" (optional, defaults to ""gregorian"") The
      RSCALE part from iCal RSCALE ([RFC7529]), converted to lower-case.

   o  *skip*: "String" (optional, defaults to ""omit"") The SKIP part
      from iCal RSCALE ([RFC7529]), converted to lower-case.

   o  *firstDayOfWeek*: "String" (optional, defaults to ""monday"") The
      WKST part from iCal, represented as a lower-case two-letter
      English day of the week.  If included, it MUST be one of the
      following values: ""mo"|"tu"|"we"|"th"|"fr"|"sa"|"su""

   o  *byDay*: "NDay[]" (optional) The BYDAY part from iCal.  The array
      MUST have at least one entry if included.  An *NDay* object has
      the following properties:






Jenkins                  Expires April 30, 2017                [Page 12]

Internet-Draft                   JSEvent                    October 2016


      *  *day*: "String" The day-of-the-week part of the BYDAY value in
         iCal, lower-cased.  MUST be one of the following values:
         ""mo"|"tu"|"we"|"th"|"fr"|"sa"|"su"".

      *  *nthOfPeriod*: "Number" (optional) If present, rather than
         representing _every_ Friday (for example), it represents only a
         specific instance within the period (month for monthly
         recurrences, year for yearly recurrences).  Must be a non-zero
         integer, negative integers means nth-last of period.  This is
         the ""+1"" or ""-3"" etc. prefix from the BYDAY values in iCal.

   o  *byDate*: "Number[]" (optional) The BYMONTHDAY part from iCal.
      The array MUST have at least one entry if included.

   o  *byMonth*: "String[]" (optional) The BYMONTH part from iCal.  Each
      entry is a string representation of a number, starting from "1"
      for the first month in the calendar (e.g. "1" means "January" with
      Gregorian calendar), with an optional "L" suffix for leap months
      (this MUST be upper-case, e.g. "3L").  The array MUST have at
      least one entry if included.

   o  *byYearDay*: "Number[]" (optional) The BYYEARDAY part from iCal.
      The array MUST have at least one entry if included.

   o  *byWeekNo*: "Number[]" (optional) The BYWEEKNO part from iCal.
      The array MUST have at least one entry if included.

   o  *byHour*: "Number[]" (optional) The BYHOUR part from iCal.  The
      array MUST have at least one entry if included.

   o  *byMinute*: "Number[]" (optional) The BYMINUTE part from iCal.
      The array MUST have at least one entry if included.

   o  *bySecond*: "Number[]" (optional) The BYSECOND part from iCal.
      The array MUST have at least one entry if included.

   o  *bySetPosition*: "Number[]" (optional) The BYSETPOS part from
      iCal.  The array MUST have at least one entry if included.

   o  *count*: "Number" (optional) The COUNT part from iCal.  This MUST
      NOT be included if an _until_ property is specified.

   o  *until*: "LocalDate" (optional) The UNTIL part from iCal.  This
      MUST NOT be included if a _count_ property is specified.  Note, as
      in iCal, this date is presumed to be in the timezone specified in
      _timeZone_. It is not a UTC time.





Jenkins                  Expires April 30, 2017                [Page 13]

Internet-Draft                   JSEvent                    October 2016


5.6.  recurrenceOverrides

   Type: "LocalDate[PatchObject|null]|null"

   The object is a map of the Recurrence-Id (i.e. the date-time of the
   start of the occurrence) to either "null", to indicate the occurrence
   should be deleted, or an object of patches to apply to the generated
   Event occurrence object.

   If the Recurrence-Id does not match an expanded start date from a
   recurrence rule, it is to be treated as an additional occurrence
   (like an RDATE from iCalendar).  The patch object may often be empty
   in this case.

   By default, an occurrence inherits all properties from the main event
   except the _start_ date-time, which is shifted to the new start time.
   However, individual properties of the occurrence can be modified by a
   patch, or multiple patches.

   A *PatchObject* is of type "String[*|null]", and represents an
   unordered set of patches to apply to the generated occurrence Event
   object.

   The keys are a path in a subset of [RFC6901] JSON pointer format,
   with an implicit leading "/" (i.e. prefix each key with "/" before
   applying the JSON pointer evaluation algorithm).

   A pointer MUST NOT start with one of the following prefixes; any
   patch with a such a key MUST be ignored:

   o  "uid"

   o  "relatedTo"

   o  "prodId"

   o  "method"

   o  "isAllDay"

   o  "recurrenceRule"

   o  "recurrenceOverrides"

   o  "replyTo"

   The pointer MUST NOT reference inside an array (i.e. you MUST NOT
   insert/delete from an array; the array MUST be replaced in its



Jenkins                  Expires April 30, 2017                [Page 14]

Internet-Draft                   JSEvent                    October 2016


   entirety instead).  Any patch with a key that attempts to do this
   MUST be ignored.

   When evaluating a path, all parts prior to the last (i.e. the value
   after the final slash) MUST exist for the patch to be valid.  If not,
   the patch MUST be ignored.

   There MUST NOT be two patches in the PatchObject where the pointer of
   one is the prefix of the pointer of the other, e.g. "alerts/1/offset"
   AND "alerts".  The result in this case is undefined.

   The value associated with each pointer is either:

   o  "null": Remove the property.  If not present in the parent, this a
      no-op.

   o  Anything else: The value to replace the inherited property on the
      occurrence with (if present) or add to the occurrence (if not
      present).

   Corresponds to the RDATE and EXDATE properties in iCalendar, plus
   VEVENT instances with a Recurrence-Id.

6.  Scheduling properties

6.1.  status

   Type: "String" (Defaults to "confirmed" if omitted)

   The status of the event.  MUST be one of:

   o  ""confirmed"": Indicates event is definite

   o  ""cancelled"": Indicates event was cancelled.

   o  ""tentative"": Indicates event is tentative.

   Corresponds to the STATUS property in iCalendar (converted to lower-
   case).

6.2.  showAsFree

   Type: "Boolean" (Defaults to "false" if omitted)

   If true, the event should be ignored when calculating free/busy data
   for the user.

   Corresponds to the TRANSP property in iCalendar.



Jenkins                  Expires April 30, 2017                [Page 15]

Internet-Draft                   JSEvent                    October 2016


6.3.  replyTo

   Type: "String[String]|null"

   Represents methods by which a participant may RSVP to the organizer
   of the event.  The keys in the object are the available methods.  The
   value is a uri to use that method.  Future methods may be defined in
   future specications; a calendar client MUST just ignore any method it
   does not understand.

   The following methods are defined:

   o  "imip": The organizer accepts an iMIP ([RFC6047]) response.  The
      value MUST be a "mailto:" uri.  Corresponds to the email address
      of the ORGANIZER property in iCalendar.

   o  "web": There is a web page where the user may submit an RSVP using
      their browser.  The value MUST be an "http:" or "https:" uri.
      There is no standard representation of this in iCalendar.

6.4.  participants

   Type: "String[Participant]|null"

   A map of participant id to an object describing their participation
   in the event.  A participant id may be any string and need only be
   unique to this event; the email address of the participant is a good
   choice.

   Corresponds to the ORGANIZER and ATTENDEES properties from iCalendar.

   A *Participant* object has the following properties.  Properties are
   mandatory unless marked otherwise:

   o  *name*: "String" The display name of the participant (e.g.  "Joe
      Bloggs").  Corresponds to the CN parameter in iCalendar.

   o  *email*: "String" The email address for the participant.

   o  *kind*: "String" (optional, defaults to "unknown") What kind of
      entity this participant is.  This MUST be either one of the
      following values, registered in a future RFC, or a vendor-specific
      value.  Vendor specific values MUST be prefixed with a domain name
      controlled by the vendor, e.g. "fastmail.com/specialkind".  Any
      value the client or server doesn't understand should be treated
      the same as "unknown".

      *  "individual": a single person



Jenkins                  Expires April 30, 2017                [Page 16]

Internet-Draft                   JSEvent                    October 2016


      *  "group": a collection of people invited as a whole

      *  "resource": a non-human resource, e.g. a projector

      *  "location": a physical location involved in the event that
         needs to be scheduled, e.g. a conference room.

      *  "unknown": no information is available about the kind of this
         participant.

   Corresponds to the CUTYPE parameter in iCalendar.

   o  *roles*: "String[]" A list of roles that this participant fulfils.
      At least one value MUST be specified for the participant.  This
      MUST be either one of the following values, registered in a future
      RFC, or a vendor-specific value.  Vendor specific values MUST be
      prefixed with a domain name controlled by the vendor, e.g.
      "fastmail.com/specialkind".  Any value the client or server
      doesn't understand should be preserved but ignored.

      *  "owner": The participant is an organizer of the event, and
         allowed to make alterations to any part of the event.

      *  "attendee": The participant is an attendee of the event.

      *  "chair": The participant is in charge of the event when it
         occurs.

   o  *locationId*: "String|null" (optional, defaults to "null") The
      location at which this person is expected to be attending this
      event.  If the value does not correspond to any location id in the
      _locations_ property of the instance, this MUST be treated the
      same as if the participant's _locationId_ were specified as
      "null".

   o  *scheduleStatus*: "String" (optional, defaults to 'needs-action')
      The value MUST be one of the following, or defined in a future RFC
      or extension to iCalendar:

      *  "needs-action": No status yet set by the participant.

      *  "accepted": The participant will attend the event.

      *  "declined": The participant may attend the event.

      *  "tentative": The participant will not attend the event.





Jenkins                  Expires April 30, 2017                [Page 17]

Internet-Draft                   JSEvent                    October 2016


      Corresponds to the PARTSTAT parameter in iCalendar (converted to
      lower case).

   o  *schedulePriority*: "String" (optional, defaults to "required")
      Thev value MUST be either one of the following values, registered
      in a future RFC, or a vendor-specific value.  Vendor specific
      values MUST be prefixed with a domain name controlled by the
      vendor, e.g. "fastmail.com/specialkind".  Any value the client or
      server doesn't understand should be treated the same as
      "required".

      *  "non-participant": Indicates a participant who is copied for
         information purposes only.

      *  "optional": Indicates a participant whose participation is
         optional.

      *  "required": Indicates a participant whose participation is
         required.

      Corresponds to the ROLE parameter in iCalendar.

   o  *scheduleRSVP*: "Boolean" (optional, defaults to "false") If
      "true", the organizer is expecting the participant to notify them
      of their status.  Corresponds to the RSVP parameter in iCalendar.

   o  *scheduleUpdated*: "UTCDate|null" (optional, defaults to "null")
      The _updated_ property of the last response from the user.  This
      can be compared to the _updated_ timestamp in future iMIP
      responses to determine if the response is older or newer than the
      current data.  Corresponds to the DTSTAMP parameter in iCalendar.

   o  *memberOf*: "String[]" (optional) A list of group addresses that
      were invited to this event, which caused this participant to be
      invited due to their membership of the group(s).  This MUST be
      omitted if none (rather than an empty array).

7.  Alerts properties

7.1.  useDefaultAlerts

   Type: "Boolean" (Defaults to "false" if omitted)

   If "true", use the user's default alerts for this event and ignore
   the _alerts_ property.  Fetching user defaults is dependent on the
   API from which this object is being fetched, and is not defined in
   this specification.




Jenkins                  Expires April 30, 2017                [Page 18]

Internet-Draft                   JSEvent                    October 2016


7.2.  alerts

   Type: "String[Alert]|null"

   A map of of alert id to Alert objects, representing alerts/reminders
   to display or send the user for this event.  An alert id may be any
   string and need only be unique to this event, although a UUID is a
   practical choice.

   Corresponds to the VALARM component in iCalendar.

   An *Alert* Object has the following properties:

   o  *relativeTo*: "String" (optional, defaults to ""before-start"")
      This specifies where the offset is relative to for the alarm to
      trigger.  The value MUST be one of:

      *  ""before-start""

      *  ""after-start""

      *  ""before-end""

      *  ""after-end""

   o  *offset*: "Duration" The offset from the start/end of the event to
      fire the alert.  Note, if the event is in floating time (including
      all-day events), the server SHOULD use the user's default time
      zone when determining the start time.

   o  *action*: "DisplayAction|EmailAction|UnknownAction" How to alert
      the user.  A _DisplayAction_ means a message (which is service
      dependent, but SHOULD include the summary and start time of the
      event) SHOULD be shown to the user on any client connected to this
      account at the specified time.  How this message is formatted (and
      any sound or other method of drawing the user's attention) is
      client specific.  An _EmailAction_ means the server MUST send an
      email as specified in the object at the specified time.  Where a
      *DisplayAction* object has the following properties:

      *  *type*: "String" The value MUST be ""display"".

      *  *acknowledged*: "UTCDate|null" When the user has permanently
         dismissed the alert the client SHOULD set this to the current
         time in UTC.  Other clients which sync this property can then
         automatically dismiss or suppress duplicate alerts (alerts with
         the same alert id that triggered on or before this date-time).
         For a recurring event, the _acknowledged_ property of the



Jenkins                  Expires April 30, 2017                [Page 19]

Internet-Draft                   JSEvent                    October 2016


         parent event SHOULD be updated, unless the alert is already
         overriden in _recurrenceOverrides_.

      *  *snoozed*: "UTCDate|null" If the user temporarily dismisses the
         alert, this is the UTC date-time after which it should be
         reshown.

      Clients displaying this alert SHOULD hide it if the _snoozed_
      property is updated to a time in the future.  When that time is
      reached, the alert SHOULD be reshown unless _acknowledged_ is now
      after the *original* trigger time.  Where an *EmailAction* object
      has the following properties:

      *  *type*: "String" The value MUST be ""email"".

      *  *to*: "Emailer[]" An array of name/email objects to send the
         alert to.  An *Emailer* object has the following properties:

         +  *name*: "String" The name of the recipient.  If not known,
            clients SHOULD use the empty string.

         +  *email*: "String" The email address of the recipient.

      *  *subject*: "String" (optional) The subject to use for the
         email.  If omitted, this is implementation specific, but the
         server SHOULD try to choose an appropriate subject (such as
         "Event Summary: starting in 5 min").

      *  *textBody*: "String" (optional) The plain-text body to use for
         the email.  If omitted, the body of the email is implementation
         specific, but the server SHOULD include all pertinent details
         about the event, such as summary, location and start time.

      An *UnknownAction* object is an object that contains a "type"
      property whose value is not ""email"" or ""string"", plus zero or
      more other properties.  This is for compatibility with client
      extensions and future RFCs.  The client or server SHOULD NOT
      trigger any type of alert for action types they do not understand,
      but MUST preserve them.

8.  Security Considerations

   The use of JSON as a format does have its own inherent security risks
   as discussed in Section 12 of [RFC7159].  Even though JSON is
   considered a safe subset of JavaScript, it should be kept in mind
   that a flaw in the parser processing JSON could still impose a
   threat, which doesn't arise with conventional iCalendar data.




Jenkins                  Expires April 30, 2017                [Page 20]

Internet-Draft                   JSEvent                    October 2016


   With this in mind, a parser for JSON data aware of the security
   implications should be used for the format described in this
   document.  For example, the use of JavaScript's "eval()" function is
   considered an unacceptable security risk, as described in Section 12
   of [RFC7159].  A native parser with full awareness of the JSON format
   should be preferred.

9.  IANA Considerations

   This document defines a MIME media type for use with iCalendar in
   JSON data.  This media type SHOULD be used for the transfer of
   calendaring data in JSON.

10.  Acknowledgments

   The author would like to thank the following for their valuable
   contributions: (TODO:names).  This specification originated from the
   work of the API technical committee of CalConnect, the Calendaring
   and Scheduling Consortium.

11.  References

11.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC3339]  Klyne, G. and C. Newman, "Date and Time on the Internet:
              Timestamps", RFC 3339, DOI 10.17487/RFC3339, July 2002,
              <http://www.rfc-editor.org/info/rfc3339>.

   [RFC5545]  Desruisseaux, B., Ed., "Internet Calendaring and
              Scheduling Core Object Specification (iCalendar)",
              RFC 5545, DOI 10.17487/RFC5545, September 2009,
              <http://www.rfc-editor.org/info/rfc5545>.

   [RFC5646]  Phillips, A., Ed. and M. Davis, Ed., "Tags for Identifying
              Languages", BCP 47, RFC 5646, DOI 10.17487/RFC5646,
              September 2009, <http://www.rfc-editor.org/info/rfc5646>.

   [RFC5870]  Mayrhofer, A. and C. Spanring, "A Uniform Resource
              Identifier for Geographic Locations ('geo' URI)",
              RFC 5870, DOI 10.17487/RFC5870, June 2010,
              <http://www.rfc-editor.org/info/rfc5870>.





Jenkins                  Expires April 30, 2017                [Page 21]

Internet-Draft                   JSEvent                    October 2016


   [RFC5988]  Nottingham, M., "Web Linking", RFC 5988,
              DOI 10.17487/RFC5988, October 2010,
              <http://www.rfc-editor.org/info/rfc5988>.

   [RFC6047]  Melnikov, A., Ed., "iCalendar Message-Based
              Interoperability Protocol (iMIP)", RFC 6047,
              DOI 10.17487/RFC6047, December 2010,
              <http://www.rfc-editor.org/info/rfc6047>.

   [RFC6901]  Bryan, P., Ed., Zyp, K., and M. Nottingham, Ed.,
              "JavaScript Object Notation (JSON) Pointer", RFC 6901,
              DOI 10.17487/RFC6901, April 2013,
              <http://www.rfc-editor.org/info/rfc6901>.

   [RFC7159]  Bray, T., Ed., "The JavaScript Object Notation (JSON) Data
              Interchange Format", RFC 7159, DOI 10.17487/RFC7159, March
              2014, <http://www.rfc-editor.org/info/rfc7159>.

   [RFC7493]  Bray, T., Ed., "The I-JSON Message Format", RFC 7493,
              DOI 10.17487/RFC7493, March 2015,
              <http://www.rfc-editor.org/info/rfc7493>.

   [RFC7529]  Daboo, C. and G. Yakushev, "Non-Gregorian Recurrence Rules
              in the Internet Calendaring and Scheduling Core Object
              Specification (iCalendar)", RFC 7529,
              DOI 10.17487/RFC7529, May 2015,
              <http://www.rfc-editor.org/info/rfc7529>.

11.2.  URIs

   [1] http://www.iana.org/assignments/link-relations/link-
       relations.xhtml

   [2] http://www.iana.org/time-zones

Author's Address

   Neil Jenkins
   FastMail
   Level 1, 91 William St
   Melbourne  VIC 3000
   Australia

   Email: neilj@fastmail.com
   URI:   https://www.fastmail.com






Jenkins                  Expires April 30, 2017                [Page 22]
