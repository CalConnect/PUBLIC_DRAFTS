



JSON data formats for vCard and iCalendar                     N. Jenkins
Internet-Draft                                                  Fastmail
Intended status: Standards Track                              P. Kewisch
Expires: November 13, 2016                                  May 12, 2016


      jsEvent: A modern JSON representation of calendar event data
                        draft-jenkins-jsevent-00

Abstract

   This specification defines a JSON representation of calendar event
   data that can be used for storage and data exchange in a calendaring
   and scheduling environment.  JSON is a lightweight, text-based,
   language-independent data interchange format commonly used in
   Internet applications.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 13, 2016.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Jenkins & Kewisch      Expires November 13, 2016                [Page 1]

Internet-Draft                  jsEvent                         May 2016


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Conventions Used in This Document . . . . . . . . . . . . . .   3
   3.  Data Types  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.1.  Subsection  . . . . . . . . . . . . . . . . . . . . . . .   3
     3.2.  Lists . . . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   3
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   4
   6.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   4
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   4
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   4
     7.2.  Informative References  . . . . . . . . . . . . . . . . .   4
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   4


1.  Introduction

   The iCalendar data format [RFC5545], a widely deployed interchange
   format for calendaring and scheduling data, has served calendaring
   vendors for a long while, but contains some ambiguities in its data
   model that can not be overcome without backwards incompatible
   changes.

   The JSON format defined in [RFC7159] is the native format for
   JavaScript widgets and libraries, and has been implemented in several
   other languages.

   This document defines a JSON-based format describing a single event
   within a calendar, using a new data model that aims to be unambigous,
   extendable and simple to process.

   The key design considerations for this format are as follows:

      The attributes of the event represented must be described as a
      simple key-value pair, reducing complexity of the event
      representation.

      The data format should avoid all ambiguities, making it difficult
      to make mistakes during implementation and increasing
      interoperability.

      The initial set of attributes should be taken from the iCalendar
      data format, but a conversion between the data formats is not
      guaranteed to be completed without losing semantic meaning.

      Extensions, such as new properties and components, must not lead
      to requiring an update to this document.



Jenkins & Kewisch      Expires November 13, 2016                [Page 2]

Internet-Draft                  jsEvent                         May 2016


2.  Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   The underlying format used for this specification is JSON.
   Consequently, the terms "object" and "array" as well as the four
   primitive types (strings, numbers, booleans, and null) are to be
   interpreted as described in Section 1 of [RFC7159].

   Some examples in this document contain "partial" JSON documents used
   for illustrative purposes.  In these examples, three periods "..."
   are used to indicate a portion of the document that has been removed
   for compactness.

3.  Data Types

   In addition to the standard data types, the following data types are
   used in this specification:

3.1.  Subsection

   Example:

   {
     "this": "is an example"
   }


3.2.  Lists

   1.  Numbers

   o  Symbols

   this is:  hanging

4.  Security Considerations

   The use of JSON as a format does have its own inherent security risks
   as discussed in Section 12 of [RFC7159].  Even though JSON is
   considered a safe subset of JavaScript, it should be kept in mind
   that a flaw in the parser processing JSON could still impose a
   threat, which doesn't arise with conventional iCalendar data.

   With this in mind, a parser for JSON data aware of the security
   implications should be used for the format described in this



Jenkins & Kewisch      Expires November 13, 2016                [Page 3]

Internet-Draft                  jsEvent                         May 2016


   document.  For example, the use of JavaScript's eval() function is
   considered an unacceptable security risk, as described in Section 12
   of [RFC7159].  A native parser with full awareness of the JSON format
   should be preferred.

5.  IANA Considerations

   This document defines a MIME media type for use with iCalendar in
   JSON data.  This media type SHOULD be used for the transfer of
   calendaring data in JSON.

6.  Acknowledgments

   The authors would like to thank the following for their valuable
   contributions: This specification originated from the work of the API
   technical committee of CalConnect, the Calendaring and Scheduling
   Consortium.

7.  References

7.1.  Normative References

   [ISO.8601.2004]
              International Organization for Standardization, "Data
              elements and interchange formats -- Information
              interchange -- Representation of dates and times ", ISO
              8601, December 2004,
              <http://www.iso.org/iso/catalogue_detail?csnumber=40874>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC5545]  Desruisseaux, B., "Internet Calendaring and Scheduling
              Core Object Specification (iCalendar)", RFC 5545,
              September 2009.

   [RFC7159]  Bray, T., "The JavaScript Object Notation (JSON) Data
              Interchange Format", RFC 7159, March 2014.

7.2.  Informative References

   [calconnect-artifacts]
              The Calendaring and Scheduling Consortium, "Code Artifacts
              and Schemas", ,
              <http://www.calconnect.org/artifacts.shtml>.

Authors' Addresses




Jenkins & Kewisch      Expires November 13, 2016                [Page 4]

Internet-Draft                  jsEvent                         May 2016


   Neil Jenkins
   Fastmail Pty Ltd.
   Level 1, 91 William St
   Melbourne  VIC 3000
   Australia

   EMail: neilj@fastmail.fm
   URI:   http://www.fastmail.com/


   Philipp Kewisch

   EMail: mozilla@kewis.ch





































Jenkins & Kewisch      Expires November 13, 2016                [Page 5]
